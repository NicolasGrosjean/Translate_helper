<?xml version="1.0" encoding="utf-8"?>
<!--
    Disambiguation Rules for LanguageTool
    Copyright (C) 2008 Marcin Miłkowski
-->

        <!-- TODO: zastąpić verb_.* słownikiem walencyjnym -->
<!DOCTYPE rules [
        <!ENTITY interp "[\p{Punct}\-−–—―„«»…’]+">
        <!ENTITY apost "['`’]">
        <!ENTITY verb_obj_gen "doglądać|dokonać|dokonywać|dopełnia?ć|dopilnować|dosiadać|dosięgnąć|dosłuchiwać|dotrzymać|dotrzymywać|dotykać|dotknąć|nienawidzić|pilnować|poszukiwać|pożądać|przestrzegać|przydać|przydawać|s?pytać|strzec|szukać|tknąć|udziel[ia]ć|użyć|używać|wypatrywać|zaniechać|zaniedbać|zaniedbywać|zażyć">
        <!ENTITY verb_obj_inst "absorbować|administrować|ciskać|cisnąć|dorzucić|dowodzić|kierować|miotać|podrzucić|podrzucać|pokierować|rządzić|rzucać|sterować|szamotać|szarpać|szarpnąć|targnąć|władać|zachwiać|zarządzać|zarządzić|zawładnąć|zaczepić">
        <!ENTITY verb_no_obj "stać|stawać|być">
        ]>

<rules lang="pl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../../../../../../../../../languagetool-core/src/main/resources/org/languagetool/resource/disambiguation.xsd">
    <unification feature="number">
        <equivalence type="sg">
            <token postag=".*:sg:.*|SENT_END" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="pl">
            <token postag=".*:pl(?:tant)?:.*|SENT_END" postag_regexp="yes"/>
        </equivalence>
    </unification>
    <unification feature="gender">
				<equivalence type="f">
						<token postag=".*[\.:]f[\.:]?.*|SENT_END" postag_regexp="yes"/>
				</equivalence>
				<equivalence type="m1">
						<token postag=".*[\.:]m1[\.:]?.*|SENT_END" postag_regexp="yes"/>
				</equivalence>
				<equivalence type="m2">
						<token postag=".*[\.:]m2[\.:]?.*|SENT_END" postag_regexp="yes"/>
				</equivalence>
				<equivalence type="m3">
						<token postag=".*[\.:]m3[\.:]?.*|SENT_END" postag_regexp="yes"/>
				</equivalence>
				<equivalence type="n1">
						<token postag=".*[\.:]n1[\.:]?.*|SENT_END" postag_regexp="yes"></token>
				</equivalence>
				<equivalence type="n2">
						<token postag=".*[\.:]n2[\.:]?.*|SENT_END" postag_regexp="yes"></token>
				</equivalence>
				<equivalence type="p1">
						<token postag=".*[\.:]p1[\.:]?.*|SENT_END" postag_regexp="yes"></token>
				</equivalence>
				<equivalence type="p2">
						<token postag=".*[\.:]p2[\.:]?.*|SENT_END" postag_regexp="yes"></token>
				</equivalence>
				<equivalence type="p3">
						<token postag=".*[\.:]p3[\.:]?.*|SENT_END" postag_regexp="yes"></token>
				</equivalence>
	</unification>
    <unification feature="case">
        <equivalence type="nom">
            <token postag=".*[\.:]nom[\.:]?.*|SENT_END" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="gen">
            <token postag=".*[\.:]gen[\.:]?.*|SENT_END" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="dat">
            <token postag=".*[\.:]dat[\.:]?.*|SENT_END" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="acc">
            <token postag=".*[\.:]acc[\.:]?.*|SENT_END" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="inst">
            <token postag=".*[\.:]inst[\.:]?.*|SENT_END" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="loc">
            <token postag=".*[\.:]loc[\.:]?.*|SENT_END" postag_regexp="yes"/>
        </equivalence>
        <equivalence type="voc">
            <token postag=".*[\.:]voc[\.:]?.*|SENT_END" postag_regexp="yes"/>
        </equivalence>
    </unification>

    <unification feature="person">
        <equivalence type="pri">
            <token postag=".*:pri.*|SENT_END" postag_regexp="yes"></token>
        </equivalence>
        <equivalence type="sec">
            <token postag=".*:sec.*|SENT_END" postag_regexp="yes"></token>
        </equivalence>
        <equivalence type="ter">
            <token postag=".*:ter.*|SENT_END" postag_regexp="yes"></token>
        </equivalence>
    </unification>


    <rule name="Dwukropek w zapisie liczb, np. godzin lub proporcji" id="DWUKROPEK_GODZINA">
        <pattern>
            <token regexp="yes">\d+</token>
            <marker>
                <token spacebefore="no">:</token>
            </marker>
            <token spacebefore="no" regexp="yes">\d+</token>
        </pattern>
        <disambig action="add"><wd pos="interp:nospace"/></disambig>
        <example type="untouched">Punkt 5: zrównać płacę minimalną.</example>
        <example type="ambiguous" inputform=":[:]" outputform=":[:/interp:nospace]">Pociąg odjeżdża o 15<marker>:</marker>34.</example>
    </rule>

    <rule name="poor man's agglutination" id="Gdybysie">
        <pattern>
            <token regexp="yes">(gdyby|jeśli|jeżeli|jeżeliby|jeśliby|gdy)(ś|śmy|ście|m)</token>
        </pattern>
        <disambig action="replace"><match no="1" postag="conj">gdyby</match></disambig>
    </rule>

    <rule name="żem żeś" id="ZESIE">
        <pattern>
            <token regexp="yes">że[mś]</token>
        </pattern>
        <disambig action="add"><wd pos="comp" lemma="że"/></disambig>
    </rule>

    <rule name="żebysie" id="zebysie">
        <pattern>
            <token regexp="yes"><exception postag="comp"/>(?:a?żeby|a?by|iżby)(?:ś|śmy|ście|m)</token>
        </pattern>
        <disambig action="add"><wd pos="comp" lemma="by"/></disambig>
    </rule>

    <!-- conjunctions that take a comma -->
    <rule name="Spójniki wymagające przecinka lub zastępujące go" id="COMP_COMMA">
        <pattern>
            <token inflected="yes" regexp="yes">aby|acz|aczkolwiek|albo|albowiem|ale|aleć|aliści|ani|azali|ażeby|bo|byleby|bądź|choć|chociaż|chociażby|czy|czyli|czyliż|dlaczego|dopóki|dopóty|gdy|gdyby|gdyż|gdyżby|i|ilekolwiek|ilekroć|iż|iżby|jaki|jeśli|jeżeli|kiedy|który|którędy|lecz|lub|oraz|ponieważ|póki|wszelako|zanim|że|żeby</token>
        </pattern>
        <disambig action="add"><wd pos="comp:comma"/></disambig>
        <example type="untouched">To jest krowa.</example>
        <example type="ambiguous" inputform="ale[ale/conj,ale/qub]" outputform="ale[ale/comp:comma,ale/conj,ale/qub]">Lubię go, <marker>ale</marker> kupię mu pistolet.</example>
    </rule>

    <!--  tagging punctuation -->
    <rule name="Interpunkcja - bez kropki" id="PUNCT_NO_DOT">
        <pattern>
            <token regexp="yes">[\p{Punct}-−–—―„«»…”&amp;&amp;[^!\.]]<exception postag="SENT_END"/><exception postag="interp:nospace"/></token>
        </pattern>
        <disambig action="add"><wd pos="interp:comma"/></disambig>
        <example type="untouched">To jest głowa dr. Jekylla.</example>
        <example type="untouched">Pociąg odjeżdża o 15:45.</example>
        <example type="ambiguous" inputform=",[,]" outputform=",[,/interp:comma]">To jest coś<marker>,</marker> co wiedziałem od dawna.</example>
    </rule>

    <rule id="TO_CONJ" name="to jako spójnik skoordynowany z gdyby i jeśli">
        <pattern>
            <token skip="-1" regexp="yes">(?:gdyby|jeśli|jeżeli|jakby).*</token>
            <marker><token>to<exception scope="previous" postag="interp:comma" negate_pos="yes"/></token></marker>
        </pattern>
        <disambig postag="conj"/>
        <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="to[to/conj]">— Gdybyście ją obaczyli — na to Don Kichot — <marker>to</marker> cóż by za zasługa wasza była, że przyznalibyście prawdę.</example>
        <example type="untouched">No to co?</example>
        <example type="untouched">Jeśli jest to głupi przypadek, jestem w kropce.</example>
    </rule>

    <rule name="Liczby z częścią dziesiętną - przecinek nie jest językowy" id="number_comma">
        <pattern>
            <token regexp="yes">\d+</token>
            <marker><token spacebefore="no">,</token></marker>
            <token spacebefore="no" regexp="yes">\d+.*</token>
        </pattern>
        <disambig action="replace"><wd pos="interp"/></disambig>
        <example type="untouched">1, 2, 3</example>
        <example type="ambiguous" inputform=",[,/interp:comma]" outputform=",[,/interp]">85<marker>,</marker>45</example>
        <example type="ambiguous" inputform=",[,/interp:comma]" outputform=",[,/interp]">85<marker>,</marker>45%</example>
    </rule>

    <rule name="nawiasy z wtrąceniem, ale bez zdania w środku" id="nawiasy_1">
        <pattern>
            <marker><token skip="-1">(<exception scope="next" postag="verb:.*(sg|pl).*|verb:imps.*|pred" postag_regexp="yes"/></token>
            </marker>
            <token>)</token>
        </pattern>
        <disambig action="replace"><wd pos="interp"/></disambig>
        <example type="untouched">On był (jeśli w ogóle można mówić o kimś takim „on”) wyjątkowo wredny.</example>
        <example type="ambiguous" inputform="([(/interp:comma]" outputform="([(/interp]">On był <marker>(</marker> wyjątkowo) wredny.</example>
    </rule>

    <rule name="nawiasy z wtrąceniem, ale bez zdania w środku" id="nawiasy_2">
        <pattern>
            <token skip="-1">(<exception scope="next" postag="verb:.*(sg|pl).*|verb:imps.*|pred" postag_regexp="yes"/></token>
            <marker>
            <token>)</token>
            </marker>
        </pattern>
        <disambig action="replace"><wd pos="interp"/></disambig>
        <example type="untouched">On był (jeśli w ogóle można mówić o kimś takim „on”) wyjątkowo wredny.</example>
        <example type="ambiguous" inputform=")[)/interp:comma]" outputform=")[)/interp]">On był (wyjątkowo<marker>)</marker> wredny.</example>
    </rule>

    <rule name="przecinek i znak zapytania w nawiasie wtrącenia" id="przecinek_w_nawiasie">
        <pattern>
            <token postag="interp" skip="-1">(<exception scope="next" regexp="yes">[()]</exception></token>
            <marker><token skip="-1" postag="interp:comma" regexp="yes">[,?!]<exception scope="next">(</exception></token></marker>
            <token postag="interp">)</token>
        </pattern>
        <disambig action="replace"><wd pos="interp"/></disambig>
        <example type="ambiguous" inputform=",[,/interp:comma]" outputform=",[,/interp]">To były liczby (np. 1<marker>,</marker> 2), którymi się posługiwał.</example>
    </rule>

    <rule name="drugi przecinek w nawiasie wtrącenia" id="drugi_przecinek_w_nawiasie">
        <pattern>
            <token postag="interp" skip="-1">(<exception scope="next" regexp="yes">[()]</exception></token>
            <token skip="-1">,<exception scope="next">(</exception></token>
            <marker><token skip="-1" postag="interp:comma">,<exception scope="next">(</exception></token></marker>
            <token postag="interp">)</token>
        </pattern>
        <disambig action="replace"><wd pos="interp"/></disambig>
    </rule>

    <rule name="trzeci przecinek w nawiasie wtrącenia" id="trzeci_przecinek_w_nawiasie">
        <pattern>
            <token postag="interp" skip="-1">(<exception scope="next" regexp="yes">[()]</exception></token>
            <token skip="-1">,<exception scope="next">(</exception></token>
            <token skip="-1">,<exception scope="next">(</exception></token>
            <marker><token skip="-1" postag="interp:comma">,<exception scope="next">(</exception></token></marker>
            <token postag="interp">)</token>
        </pattern>
        <disambig action="replace"><wd pos="interp"/></disambig>
    </rule>

    <rule name="czwarty przecinek w nawiasie wtrącenia" id="czwarty_przecinek_w_nawiasie">
        <pattern>
            <token postag="interp" skip="-1">(<exception scope="next" regexp="yes">[()]</exception></token>
            <token skip="-1">,<exception scope="next">(</exception></token>
            <token skip="-1">,<exception scope="next">(</exception></token>
            <token skip="-1">,<exception scope="next">(</exception></token>
            <marker><token skip="-1" postag="interp:comma">,<exception scope="next">(</exception></token></marker>
            <token postag="interp">)</token>
        </pattern>
        <disambig action="replace"><wd pos="interp"/></disambig>
    </rule>

    <rule name="piąty przecinek w nawiasie wtrącenia" id="piaty_przecinek_w_nawiasie">
        <pattern>
            <token postag="interp" skip="-1">(<exception scope="next" regexp="yes">[()]</exception></token>
            <token skip="-1">,<exception scope="next">(</exception></token>
            <token skip="-1">,<exception scope="next">(</exception></token>
            <token skip="-1">,<exception scope="next">(</exception></token>
            <token skip="-1">,<exception scope="next">(</exception></token>
            <marker><token skip="-1" postag="interp:comma">,<exception scope="next">(</exception></token></marker>
            <token postag="interp">)</token>
        </pattern>
        <disambig action="replace"><wd pos="interp"/></disambig>
    </rule>

    <rule name="wtrącenia z myślnikami, ale bez zdania w środku" id="myslniki_1">
        <pattern>
            <marker><token spacebefore="yes" skip="-1" regexp="yes">[-−–—―]<exception scope="next" postag="verb:.*(sg|pl).*|verb:imps.*|pred|pant.*|pcon.*" postag_regexp="yes"/></token>
            </marker>
            <token spacebefore="yes" regexp="yes">[-−–—―]</token>
        </pattern>
        <disambig action="replace"><wd pos="interp"/></disambig>
        <example type="untouched">On był – jeśli w ogóle można mówić o kimś takim „on” – wyjątkowo wredny.</example>
        <example type="ambiguous" inputform="–[–/interp:comma]" outputform="–[–/interp]">On był <marker>–</marker> wyjątkowo – wredny.</example>
    </rule>

    <rule name="nawiasy z wtrąceniem, ale bez zdania w środku" id="myslniki_2">
        <pattern>
            <token skip="-1" spacebefore="yes" regexp="yes">[-−–—―]<exception scope="next" postag="verb:.*(sg|pl).*|verb:imps.*|pred|pant.*|pcon.*" postag_regexp="yes"/></token>
            <marker>
                <token spacebefore="yes" regexp="yes">[-−–—―]</token>
            </marker>
            <token><exception postag="ppron.*:nom:.*|conj|comp" postag_regexp="yes"/></token>
        </pattern>
        <disambig action="replace"><wd pos="interp"/></disambig>
        <example type="untouched">On był (jeśli w ogóle można mówić o kimś takim „on”) wyjątkowo wredny.</example>
        <example type="ambiguous" inputform="–[–/interp:comma]" outputform="–[–/interp]">On był – wyjątkowo <marker>–</marker> wredny.</example>
        <example type="untouched">„Nie, nie, nie bój się — na to mu Don Kichot — ja mu nie każę, a on rozkazy moje szanować musi”.</example>
        <example type="untouched">— Gdybyście ją obaczyli — na to Don Kichot — to cóż by za zasługa wasza była, że przyznalibyście prawdę.</example>
        <example type="untouched">Szef rządu radzieckiego Nikita  Chruszczow zaapelował dziewiątego sierpnia bieżącego roku do rządów odnośnych państw - w tym również do rządu tureckiego - by wykazały umiar i bezwzględne poszanowanie niezawisłości.</example>
    </rule>

    <rule name="opisany powyżej" id="opisany_powyzej">
        <pattern>
            <token inflected="yes" regexp="yes">pisać|opisać|przedstawić|przedstawiać|podać|zamieścić|wymienić</token>
            <marker>
                <token regexp="yes">powyżej|poniżej</token>
            </marker>
        </pattern>
        <disambig postag="adv:pos:aff"/>
    </rule>    
    <rulegroup name="przeszło|ponad + liczba -> kublik (operatory adnumeratywne)" id="przeszlo">
        <rule>
            <pattern>
                <marker>
                    <token regexp="yes">przeszło|ponad|plus|minus|minimum|maksimum|blisko</token>
                </marker>
                <token postag="num.*" postag_regexp="yes"/>
            </pattern>
            <disambig postag="qub"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token regexp="yes">przeszło|ponad|minimum|maksimum|blisko</token>
                </marker>
                <token inflected="yes" regexp="yes">.+letni|.+krotnie|\d+</token>
            </pattern>
            <disambig postag="qub"/>
            <example type="untouched">Przeszło trzydziestu panów pije wódkę.</example>
            <example type="ambiguous" inputform="Przeszło[przejść/verb:praet:sg:n1.n2:ter:perf:nonrefl,przejść/verb:praet:sg:n1.n2:ter:perf:refl,przeszło/qub,przeszły/adja]" outputform="Przeszło[przeszło/qub]"><marker>Przeszło</marker> 30 panów pije wódkę.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token regexp="yes">przeszło|ponad</token>
                </marker>
                <unify><feature id="case"/>
                <token postag="prep.*" postag_regexp="yes"/>
                <token postag="num.*" postag_regexp="yes"/>
                </unify>
            </pattern>
            <disambig postag="qub"/>
            <example type="ambiguous" inputform="przeszło[przejść/verb:praet:sg:n1.n2:ter:perf:nonrefl,przejść/verb:praet:sg:n1.n2:ter:perf:refl,przeszło/qub,przeszły/adja]"
                     outputform="przeszło[przeszło/qub]">Turnie, wznosząc się <marker>przeszło</marker> na cztery tysiące metrów ponad dnem tej przepaści, spadały ku niej prawie pionowo.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token regexp="yes">przeszło|ponad</token>
                </marker>
                <unify><feature id="case"/>
                    <token postag="prep.*" postag_regexp="yes"/>
                    <token>roku</token>
                </unify>
            </pattern>
            <disambig postag="qub"/>
            <example type="ambiguous" inputform="przeszło[przejść/verb:praet:sg:n1.n2:ter:perf:nonrefl,przejść/verb:praet:sg:n1.n2:ter:perf:refl,przeszło/qub,przeszły/adja]"
                     outputform="przeszło[przeszło/qub]">Ta sprawa datuje się <marker>przeszło</marker> sprzed roku.</example>
        </rule>

    </rulegroup>

    <rule name="prawie/subst -> kublik" id="prawie">
        <pattern>
            <token><exception postag="prep.*inst" postag_regexp="yes"/></token>
            <marker>
                <token>prawie</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
    </rule>
    <rule name="ciemku" id="ciemku">
        <pattern>
            <marker>
                <token>ciemku</token>
            </marker>
        </pattern>
        <disambig action="add"><wd lemma="po ciemku" pos="adjp">ciemku</wd></disambig>
    </rule>
<!-- 
	<rule name="Nazwy liter" id="AZ">
		<pattern>
			<token><exception inflected="yes">litera</exception></token>
			<marker><token regexp="yes">[A-Za-z]</token></marker>
		</pattern>
		<disambig action="filter" postag="^(?!subst).*$"></disambig>    
		<example type="ambiguous" inputform="i[i/conj,i/interj,i/qub,i/subst:pl:acc:n2,i/subst:pl:dat:n2,i/subst:pl:gen:n2,i/subst:pl:inst:n2,i/subst:pl:loc:n2,i/subst:pl:nom:n2,i/subst:pl:voc:n2,i/subst:sg:acc:n2,i/subst:sg:dat:n2,i/subst:sg:gen:n2,i/subst:sg:inst:n2,i/subst:sg:loc:n2,i/subst:sg:nom:n2,i/subst:sg:voc:n2]" 
		outputform="i[i/conj,i/interj,i/qub]">Ty <marker>i</marker> ja</example>
		<example type="untouched">To litera a jest pierwsza.</example>  
    </rule>
 -->

    <rule name="tym" id="tym">
        <pattern>
            <marker>
                <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                    <token>tym</token>
                    <token postag_regexp="yes" postag="(subst|ger):*"/>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
    </rule>

    <rule name="tym niemniej" id="tym_niemniej">
        <pattern>
            <marker><token>tym</token></marker>
            <token>niemniej</token>
        </pattern>
        <disambig postag="conj"/>
    </rule>

    <rule name="tym + com" id="tym_com">
        <pattern>
            <marker><token>tym</token></marker>
            <token postag_regexp="yes" postag="ad[vj].*:com"/>
        </pattern>
        <disambig postag="adv"/>
        <example type="untouched">Tym przypadkiem nie będziemy się zajmować.</example>
        <example type="ambiguous" inputform="Tym[Tym/subst:sg:nom:m1,ten/adj:pl:dat:m1.m2.m3.f.n1.n2.p1.p2.p3:pos,ten/adj:sg:inst:m1.m2.m3.n1.n2:pos,ten/adj:sg:loc:m1.m2.m3.n1.n2:pos,to/subst:sg:inst:n2,to/subst:sg:loc:n2,tym/adv,tym/conj]"
                 outputform="Tym[tym/adv]"><marker>Tym</marker> lepiej!</example>
    </rule>

    <rule name="im + com" id="im_com">
    <pattern>
        <marker><token>im</token></marker>
        <token postag_regexp="yes" postag="ad[vj].*:com"/>
    </pattern>
    <disambig postag="comp"/>
        <example type="untouched">Szkoła im. Jadwigi Nowak</example>
        <example type="ambiguous" inputform="im[im/comp,imienia/brev:pun,imiesłów/brev:pun,on/ppron3:pl:dat:m1.m2.m3.f.n1.n2.p1.p2.p3:ter:akc.nakc:npraep]"
                 outputform="im[im/comp]">A <marker>im</marker> wyżej, tym lepiej.</example>
    </rule>

    <rule id="co_najmniej" name="co najmniej">
        <pattern>
            <marker><token>co</token></marker>
            <token regexp="yes">najmniej|najwyżej</token>
        </pattern>
        <disambig postag="prep:acc"/> <!-- za NKJP, w Innym słowniku to jest przysłówek, w Uniwersalnym – partykuła -->
    </rule>

    <rule name="dzisiaj, dziś, wczoraj jako przysłówek" id="dzis_adv">
        <pattern>
            <marker><token regexp="yes">dziś|dzisiaj|wczoraj<exception scope="previous" postag_regexp="yes" postag="prep.*"></exception></token></marker>
        </pattern>
        <disambig postag="adv"/>
    </rule>
        
        <rulegroup name="co (i) rusz" id="CO_RUSZ">
        <rule>
            <pattern >
                    <token regexp="yes">co|ani</token>
                <marker>
                    <token>rusz</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
            <example type="untouched">Rusz tylko tę książkę!</example>
            <example type="ambiguous" inputform="rusz[rusza/subst:pl:gen:f,ruszyć/verb:impt:sg:sec:perf:refl.nonrefl]" outputform="rusz[rusza/qub]">Co <marker>rusz</marker> pyta o godzinę.</example>
        </rule>
        <rule>
            <pattern>
                    <token postag="qub">co</token>
                    <token>i</token>
                <marker>
                    <token>rusz</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
            <example type="untouched">Rusz tylko tę książkę!</example>
            <example type="ambiguous" inputform="rusz[rusza/subst:pl:gen:f,ruszyć/verb:impt:sg:sec:perf:refl.nonrefl]" outputform="rusz[rusza/qub]">Co i <marker>rusz</marker> pyta o godzinę.</example>
        </rule>
    </rulegroup>

    <rule id="DOPIERO_CO" name="dopiero co">
        <pattern>
            <marker>
                <token postag="qub">dopiero</token>
                <token postag="qub">co</token>
            </marker>
        </pattern>
        <disambig action="filterall"></disambig>
        <example type="ambiguous" inputform="co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]"
                 outputform="co[co/qub]">Dopiero <marker>co</marker> to zrobiłeś!</example>
        <example type="untouched">Co ty robisz?</example>
    </rule>

    <rule id="ADJA_WON" name="adja to zła interpretacja bez dywizu">
        <pattern>
            <marker>
                <and>
                    <token postag="adja"/>
                    <token negate_pos="yes" postag="adja"/>
                </and>
            </marker>
            <token><exception regexp="yes">[-–—]</exception></token>
        </pattern>
        <disambig action="remove"><wd pos="adja"/></disambig>
        <example type="ambiguous" inputform="sporo[spora/subst:sg:voc:f,sporo/adv:pos,sporo/num:pl:nom.acc:m1.m2.m3.f.n1.n2.p1.p2:rec,spory/adja]"
                 outputform="sporo[spora/subst:sg:voc:f,sporo/adv:pos,sporo/num:pl:nom.acc:m1.m2.m3.f.n1.n2.p1.p2:rec]">Mam <marker>sporo</marker> pieniędzy.</example>
        <example type="ambiguous" inputform="było[być/verb:praet:sg:n1.n2:ter:imperf:nonrefl,były/adja]"
                 outputform="było[być/verb:praet:sg:n1.n2:ter:imperf:nonrefl]">To <marker>było</marker> obojętne.</example>
        <example type="untouched">abadańsko</example>
        <example type="untouched">Słownik niemiecko-francuski</example>
    </rule>

    <rule id="ADJA_WON_SENT_END" name="adja nie może być na końcu zdania">
        <pattern>
            <marker>
                <and>
                    <token postag="adja"/>
                    <token negate_pos="yes" postag="adja"/>
                    <token postag="SENT_END"/>
                </and>
            </marker>
        </pattern>
        <disambig action="remove"><wd pos="adja"/></disambig>
    </rule>

    <rule id="ADJA_OK" name="adja to dobra interpretacja z dywizem">
        <pattern>
            <marker>
                <and>
                    <token postag="adja"/>
                    <token negate_pos="yes" postag="adja"/>
                </and>
            </marker>
            <token regexp="yes">[-–—]</token>
            <token postag="(?:pact|adj|ppas).*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="adja"/>
        <example type="untouched">Mam sporo pieniędzy.</example>
        <example type="ambiguous" inputform="polsko[polski/adja,polsko/adv:pos]"
                 outputform="polsko[polski/adja]">Słownik <marker>polsko</marker>-francuski</example>
        <example type="ambiguous" inputform="polsko[polski/adja,polsko/adv:pos]"
                 outputform="polsko[polski/adja]">Słownik <marker>polsko</marker>-indonezyjsko-polinezyjski</example>
        <example type="ambiguous" inputform="indonezyjsko[indonezyjski/adja,indonezyjsko/adv:pos]"
                 outputform="indonezyjsko[indonezyjski/adja]">Słownik polsko-<marker>indonezyjsko</marker>-polinezyjski</example>
    </rule>

    <rule id="OD_A_DO_Z_1" name="od a do z">
        <pattern>
            <token>od</token>
            <marker>
                <token>a</token>
            </marker>
            <token>do</token>
            <token>z</token>
        </pattern>
        <disambig action="replace"><wd pos="subst:sg:gen:n2"/></disambig>
    </rule>

    <rule id="OD_A_DO_Z_2" name="od a do z">
        <pattern>
            <token>od</token>
            <token>a</token>
            <token>do</token>
            <marker>
                <token>z</token>
            </marker>
        </pattern>
        <disambig action="replace"><wd pos="subst:sg:gen:n2"/></disambig>
    </rule>

    <rule id="PREP_LITERA_SUBST" name="jednoliterowe wyrazy oznaczające litery w wyliczeniu">
        <pattern>
            <token regexp="yes">\p{L}{1,2}</token>
            <token>,</token>
            <marker><token postag="prep.*" postag_regexp="yes" regexp="yes">\p{L}</token></marker>
            <token>,</token>
            <token regexp="yes">\p{L}{1,2}</token>
        </pattern>
        <disambig action="replace"><wd pos="subst:sg:nom:n2"/></disambig>
    </rule>

    <rule id="A_NUZ" name="a nuż">
        <pattern>
            <marker>
                <token postag="qub">a</token>
                <token postag="qub">nuż</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="a_kysz" name="a kysz - wykrzyknik">
        <pattern>
            <marker><token>a</token></marker>
            <token regexp="yes">jakże|kysz|sio|fe</token>
        </pattern>
        <disambig postag="interj"></disambig>
    </rule>

    <rule id="a_propos" name="a propos">
        <pattern>
            <marker><token>a</token></marker>
            <token>propos</token>
        </pattern>
        <disambig postag="ign"/>
    </rule>

    <rule id="APOSTROF_A" name="a po apostrofie to nie spójnik ani przyimek">
        <pattern>
            <token regexp="yes">[\p{L}-]+</token>
            <token regexp="yes">&apost;</token>
            <marker><token spacebefore="no">a</token></marker>
        </pattern>
        <disambig postag="ign"/>
        <example type="ambiguous" inputform="a[a/conj,a/interj,a/prep:nom,a/qub]" outputform="a[a/ign]">To było w pierwszej pracy krytycznej Navarrette'<marker>a</marker>.</example>
    </rule>

    <rule id="ANI_QUB" name="ani jako kublik">
        <pattern>
            <marker><token>ani</token></marker>
            <token regexp="yes">chybi|dudu|mru-mru|razu|trochę</token>
        </pattern>
        <disambig postag="qub"/>
        <example type="untouched">Ani be, ani me, ani kukuryku.</example>
        <example type="ambiguous" inputform="Ani[Ani/comp:comma,Ania/subst:pl:gen:f,Ania/subst:sg:dat:f,Ania/subst:sg:gen:f,Ania/subst:sg:loc:f,ani/conj,ani/qub]"
                 outputform="Ani[ani/qub]"><marker>Ani</marker> chybi kupił pstrąga.</example>
    </rule>

    <rulegroup name="bez czarny" id="bez_czarny">
    	<rule>
    		<pattern>
    		<marker>
    			<token>bez</token>
    		</marker>
    			<token regexp="yes">czarny|dziki</token>
    		</pattern>
    		<disambig action="filter" postag="subst:sg:(acc|nom):m3"></disambig>
    		<example type="untouched">Proszę kremówkę bez kremu.</example>
    		<example type="ambiguous" inputform="bez[bez/prep:gen:nwok,bez/subst:sg:acc:m3,bez/subst:sg:nom:m3,beza/subst:pl:gen:f]" outputform="bez[bez/subst:sg:acc:m3,bez/subst:sg:nom:m3]">Jaki piękny jest <marker>bez</marker> czarny.</example>
    	</rule>
    	<rule>
    		<pattern>
                <token regexp="yes">czarny|dziki</token>
    		<marker>
    			<token>bez</token>
    		</marker>
    		<token><exception postag_regexp="yes" postag=".*gen.*"></exception></token>
    		</pattern>
    		<disambig action="filter" postag="subst:sg:(acc|nom):m3"></disambig>
    		<example type="untouched">Proszę kremówkę bez kremu.</example>
    		<example type="ambiguous" inputform="bez[bez/prep:gen:nwok,bez/subst:sg:acc:m3,bez/subst:sg:nom:m3,beza/subst:pl:gen:f]" outputform="bez[bez/subst:sg:acc:m3,bez/subst:sg:nom:m3]">Jaki piękny jest dziki <marker>bez</marker>.</example>
    	</rule>
    	<rule>
    		<pattern>
    		<marker>
    			<token>bez</token>
    		</marker>
    		<token postag_regexp="yes" postag=".*gen.*"></token>    		
    		</pattern>    		
    		<disambig postag="prep:gen:nwok"></disambig>
    		<example type="ambiguous" inputform="bez[bez/prep:gen:nwok,bez/subst:sg:acc:m3,bez/subst:sg:nom:m3,beza/subst:pl:gen:f]" outputform="bez[bez/prep:gen:nwok]">Proszę kremówkę <marker>bez</marker> kremu.</example>
    		<example type="untouched">Jaki piękny jest dziki <marker>bez</marker>.</example>
    	</rule>
    </rulegroup>

    <rule id="CZAS_NIE_PRED" name="czas + gen to nie predykatyw">
        <pattern>
            <marker>
                <token>czas</token>
            </marker>
            <token postag_regexp="yes" postag=".*gen.*"/>
            <token><exception postag_regexp="yes" postag="verb:inf.*"/></token>
        </pattern>
        <disambig action="remove" postag="pred"/>
        <example type="untouched">Czas umierać!</example>
        <example type="ambiguous" inputform="Czas[czas/pred,czas/subst:sg:acc:m3,czas/subst:sg:nom:m3]"
                 outputform="Czas[czas/subst:sg:acc:m3,czas/subst:sg:nom:m3]"><marker>Czas</marker> przygotowania: do 30 minut</example>
    </rule>

    <rule id="SOL_I_PIEPRZ" name="sól i pieprz do smaku to nie czasowniki">
        <pattern>
            <marker>
                <token regexp="yes" postag="subst:sg.*" postag_regexp="yes">sól|pieprz</token>
                <token>i</token>
                <token regexp="yes" postag="subst:sg.*" postag_regexp="yes">sól|pieprz</token>
            </marker>
            <token>do</token>
            <token>smaku</token>
        </pattern>
        <disambig action="filterall"></disambig>
        <example type="untouched">Nie pieprz!</example>
        <example type="ambiguous" inputform="sól[solić/verb:impt:sg:sec:imperf:refl.nonrefl,sól/subst:sg:acc:f,sól/subst:sg:nom:f]"
                 outputform="sól[sól/subst:sg:acc:f,sól/subst:sg:nom:f]">Dodaj <marker>sól</marker> i pieprz do smaku.</example>
    </rule>

    <rule id="OD_DAWNA" name="od dawna">
        <pattern>
            <token>od</token>
            <token min="0" max="1">jak</token>
            <marker><token>dawna</token></marker>
        </pattern>
        <disambig postag="adjp"/>
        <example type="ambiguous" inputform="dawna[dawny/adj:sg:nom.voc:f:pos]" outputform="dawna[dawny/adjp]">Czy od <marker>dawna</marker> tak jest?</example>
        <example type="ambiguous" inputform="dawna[dawny/adj:sg:nom.voc:f:pos]" outputform="dawna[dawny/adjp]">Od jak <marker>dawna</marker> tak jest?</example>
    </rule>

    <rule id="OD_JAK_DAWNA" name="od jak dawna">
        <pattern>
            <token postag="prep:gen:nwok">od</token>
            <marker>
                <token postag="adv">jak</token>
            </marker>
            <token>dawna</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule name="od to nie oda" id="OD_PREP_GEN">
        <pattern>
            <marker>
                <token>od</token>
            </marker>
            <token postag_regexp="yes" postag=".*gen.*|adjp"></token>
        </pattern>
        <disambig postag="prep:gen:nwok"></disambig>
        <example type="untouched">Od rok 2000 jestem nieruchawy.</example>
        <example type="ambiguous" inputform="Od[Oda/subst:pl:gen:f,od/prep:gen:nwok,oda/subst:pl:gen:f]" outputform="Od[od/prep:gen:nwok]"><marker>Od</marker> roku 2000 jestem nieruchawy.</example>
    </rule>

    <rule name="przede wszystkim" id="przede_wszystkim">
        <pattern>
            <token>przede</token>
            <marker><token>wszystkim</token></marker>
        </pattern>
        <disambig postag="subst:sg:inst:n2"/>
    </rule>

    <rule name="W wiek" id="w_wiek">
        <pattern case_sensitive="yes">
            <token regexp="yes">((X{0,2})(V?I{0,3}|I[VX]))(-(X{0,2})(V?I{0,3}|I[VX]))?<exception postag="SENT_START"/><exception>-</exception></token>
            <marker><token>w</token></marker>
            <token>.</token>
        </pattern>
        <disambig postag="brev:pun"/>
        <example type="ambiguous" inputform="w[w/prep:acc:nwok,w/prep:loc:nwok,wiek/brev:pun]" outputform="w[wiek/brev:pun]">Dziwny był ten XX <marker>w</marker>.</example>
        <example type="ambiguous" inputform="w[w/prep:acc:nwok,w/prep:loc:nwok,wiek/brev:pun]" outputform="w[wiek/brev:pun]">Polska w opiniach obcych X-XII <marker>w</marker>.</example>
        <example type="untouched">Mam to w szufladzie.</example>
    </rule>
    <rule id="w_wiek_II" name="W w. XX">
        <pattern case_sensitive="yes">
            <marker><token>w</token></marker>
            <token>.</token>
            <token regexp="yes">((X{0,2})(V?I{0,3}|I[VX]))(-(X{0,2})(V?I{0,3}|I[VX]))?<exception postag="SENT_START"/><exception>-</exception></token>
        </pattern>
        <disambig postag="brev:pun"/>
        <example type="ambiguous" inputform="w[w/prep:acc:nwok,w/prep:loc:nwok,wiek/brev:pun]" outputform="w[wiek/brev:pun]">To było w <marker>w</marker>. XX.</example>
    </rule>
    <rule name="W wat" id="W_wat">
        <pattern case_sensitive="yes">
            <token regexp="yes">\d+</token>
            <marker><token>W</token></marker>
        </pattern>
        <disambig postag="brev:npun"/>
        <example type="untouched">Dużo wody jest w szklance.</example>
        <example type="untouched">To było w XIX w.</example>
        <example type="ambiguous" inputform="W[w/prep:acc:nwok,w/prep:loc:nwok,wat/brev:npun,wiek/brev:pun]" outputform="W[wat/brev:npun]">Te głośniki mają moc 20 <marker>W</marker>.</example>
    </rule>
    <rule name="W jako inicjał" id="W_uppercase">
        <pattern case_sensitive="yes">
            <marker><token>W</token></marker>
            <token>.</token>
            <token regexp="yes">\p{Lu}\p{Ll}+</token>
        </pattern>
        <disambig action="replace"><wd pos="brev:pun"/></disambig>
    </rule>
    <rule name="W prep" id="w_prep">
        <pattern>
            <token postag_regexp="yes" postag="prep:(acc|loc):nwok">w</token>
        </pattern>
        <disambig action="remove" postag="brev:n?pun"/>
        <example type="ambiguous" inputform="w[w/prep:acc:nwok,w/prep:loc:nwok,wiek/brev:pun]" outputform="w[w/prep:acc:nwok,w/prep:loc:nwok]">Mam to <marker>w</marker> szufladzie.</example>
        <example type="untouched">Dziwny XIX w.</example>
    </rule>

    <rule id="cel_nie_brev" name="cel. to skrót, cel nie">
        <pattern>
            <marker><token>cel</token></marker>
            <token><exception>.</exception></token>
        </pattern>
        <disambig action="remove"><wd lemma="celujący"/></disambig>
    </rule>

    <rule name="dzięki czemu" id="dzieki_prep_dat">
    <pattern>    		
    		<marker>
    			<token>dzięki</token>
    		</marker>
    		<token postag_regexp="yes" postag=".*dat.*"></token>    		
    		</pattern>    		
    <disambig postag="prep:dat"></disambig>    
    <example type="untouched">Dzięki, mała!</example>
    <example type="ambiguous" inputform="dzięki[dzięk/subst:pl:acc:m3,dzięk/subst:pl:nom:m3,dzięk/subst:pl:voc:m3,dzięka/subst:pl:acc:f,dzięka/subst:pl:nom:f,dzięka/subst:pl:voc:f,dzięka/subst:sg:gen:f,dzięki/prep:dat,dzięki/subst:pl:acc:p3,dzięki/subst:pl:nom:p3,dzięki/subst:pl:voc:p3]" outputform="dzięki[dzięki/prep:dat]">To wszystko <marker>dzięki</marker> pomocy europejskiej.</example>	
    </rule>

    <rule name="(po)mimo że" id="MIMO_ZE_QUB">
        <pattern>
            <marker><token regexp="yes" postag="burk">(?:po)?mimo</token>
            <token postag="comp.*" postag_regexp="yes" inflected="yes" regexp="yes">iż|że</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="PRZEJSC_MIMO" name="przejść + mimo > adv">
        <pattern>
            <token inflected="yes">przejść</token>
            <marker><token postag="adv">mimo</token></marker>
        </pattern>
        <disambig postag="adv"/>
        <example type="ambiguous" inputform="mimo[mima/subst:sg:voc:m1,mimo/adv,mimo/burk,mimo/prep:gen]" outputform="mimo[mimo/adv]">Pozdrowił ich i przeszedł <marker>mimo</marker>, ale Don Kichot zawołał na niego.</example>
    </rule>


    <rule name="MIMO to nie wołacz" id="MIMO_NIE_VOC">
    	<pattern>
    		<token postag="prep:gen">mimo</token>
    	</pattern>
    	<disambig postag="prep:gen"/>
    </rule>

    <rule name="nic lub coś dziwnego" id="COS_NIC_ADJ_GEN">
        <pattern>
            <marker><token regexp="yes" postag_regexp="yes" postag="subst:sg:(acc|nom):n2">nic|coś</token>
            <token postag="adj:sg:gen:m1.m2.m3.n1.n2:pos"/>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="apost_u" name="u jako końcówka po apostrofie">
        <pattern>
            <token regexp="yes">[\p{L}\-]+</token>
            <token spacebefore="no" regexp="yes">&apost;</token>
            <marker><token spacebefore="no">u</token></marker>
        </pattern>
        <disambig action="remove"><wd pos="prep:gen"/></disambig>
        <example type="untouched">To było 'Przyjęcie u kota'.</example>
        <example type="ambiguous" inputform="u[u/prep:gen]" outputform="u[u]">W wormhole'<marker>u</marker> grawitacja się zagina.</example>
    </rule>

    <rule name="jako taki" id="JAKO_TAKI_puddle">
        <pattern>
            <token postag="conj">jako</token>
            <token postag="adj.*" postag_regexp="yes" inflected="yes">taki</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="ZA_NIE_QUB" name="za to nie kublik, reguła za AdamP (Spejd)">
        <pattern>
            <marker>
                <token postag="prep.*" postag_regexp="yes">za</token>
            </marker>
            <token><exception postag="adv.*|adj.*" postag_regexp="yes" negate="yes">to</exception><exception regexp="yes">mało|dużo</exception></token>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="za[za/prep:acc,za/prep:gen,za/prep:inst,za/qub]"
                 outputform="za[za/prep:acc,za/prep:gen,za/prep:inst]">Stoję <marker>za</marker> murem.</example>
        <example type="ambiguous" inputform="za[za/prep:acc,za/prep:gen,za/prep:inst,za/qub]"
                 outputform="za[za/prep:acc,za/prep:gen,za/prep:inst]">Dziękuję <marker>za</marker> to.</example>
        <example type="untouched">To za mało.</example>
    </rule>

    <rule id="DZIEN" name="dzień to nie dzienić">
        <pattern>
            <token>dzień</token>
        </pattern>
        <disambig action="remove"><wd lemma="dzienić"/></disambig>
    </rule>

    <rule name="co przed czasownikiem nie jest przyimkiem" id="CO_VERB_ADAMP">
        <pattern>
            <marker>
                <token>co</token>
            </marker>
            <token postag="verb.*|pred|pcon.*|pant.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="remove" postag="prep.*"/>
        <example type="ambiguous" inputform="Co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]"
                 outputform="Co[co/comp,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]"><marker>Co</marker> słychać?</example>
    </rule>

    <rule id="CO_SENT_START_ADAMP" name="na początku zwykle jest zaimkiem rzeczownym">
        <pattern>
            <token postag="SENT_START"/>
            <token min="0" max="1" regexp="yes">&interp;</token>
            <marker><token>co</token></marker>
        </pattern>
        <disambig action="filter" postag="subst.*"></disambig>
        <example type="ambiguous" inputform="Co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]"
                 outputform="Co[co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]">— <marker>Co</marker> to znaczy?</example>
    </rule>

    <rule id="CO_COMMA_NON_PREP" name="co przed przecinkiem to raczej nie przyimek">
        <pattern>
            <marker><token>co</token></marker>
            <token regexp="yes">[,:;!]</token>
        </pattern>
        <disambig action="remove" postag="prep.*"/>
        <example type="ambiguous" inputform="co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]"
                 outputform="co[co/comp,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]">Miły bratku Sancho, bredzisz sam nie wiesz <marker>co</marker>, w takich awanturach wyspy się nie wygrywają.</example>
    </rule>

    <rule name="ku to nie subst" id="KU_NIE_SUBST">
    	<pattern>
    		<token>ku</token>
    	</pattern>
    	<disambig postag="prep:dat"/>
    </rule>

    <rule name="we to nie subst" id="WE_NIE_SUBST">
        <pattern>
            <token>we</token>
        </pattern>
        <disambig action="remove"><wd lemma="we"/></disambig>
    </rule>

    <rule name="te to nie subst" id="TE_NIE_SUBST">
        <pattern>
            <token>te</token>
        </pattern>
        <disambig action="remove"><wd lemma="te"/></disambig>
    </rule>

    <rule name="ni to nie subst" id="NI_NIE_SUBST">
        <pattern>
            <token>ni</token>
        </pattern>
        <disambig action="filter" postag="qub|conj"/>
        <example type="ambiguous" inputform="ni[ni/conj,ni/qub,ni/subst:pl:acc:n2,ni/subst:pl:dat:n2,ni/subst:pl:gen:n2,ni/subst:pl:inst:n2,ni/subst:pl:loc:n2,ni/subst:pl:nom:n2,ni/subst:pl:voc:n2,ni/subst:sg:acc:n2,ni/subst:sg:dat:n2,ni/subst:sg:gen:n2,ni/subst:sg:inst:n2,ni/subst:sg:loc:n2,ni/subst:sg:nom:n2,ni/subst:sg:voc:n2]"
                 outputform="ni[ni/conj,ni/qub]">Nie chcesz jadła <marker>ni</marker> napoju?</example>
    </rule>

    <rule name="gałęzi to nie czasownik" id="GALEZI_SUBST">
      <pattern><token>gałęzi</token></pattern>
      <disambig action="remove"><wd lemma="gałęzić"/></disambig>
    </rule>

    <rule name="gorzej to nie czasownik" id="GORZEJ">
        <pattern>
            <token regexp="yes">odrobinę|znacznie|nieco|coraz|jeszcze|trochę|dużo|zdecydowanie|stokroć|wiele|im|lub|niewiele</token>
            <marker><token>gorzej</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="gorzeć"/></disambig>
    </rule>

    <rule name="jadowicie to nie czasownik" id="JADOWICIE">
        <pattern>
            <marker><token>jadowicie</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="jadowić"/></disambig>
    </rule>

    <rule name="jaka to nie jaka" id="JAKA_NIE_JAKA">
        <pattern>
            <token>,</token>
            <marker><token>jaka</token></marker>
        </pattern>
        <disambig action="remove" postag="subst.*"/>
    </rule>

    <rule name="jak to nie jaka" id="JAK_NIE_JAKA">
        <pattern>
            <token>jak</token>
        </pattern>
        <disambig action="remove"><wd lemma="jaka"/></disambig>
    </rule>

    <rule name="udomowiony jak" id="JAK_SUBST">
        <pattern>
            <marker>
            <unify>
                <feature id="case"/><feature id="gender"/><feature id="number"/>
                <token>udomowiony</token>
                <token>jak</token>
            </unify>
            </marker>
            <token postag="verb.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="jak[jak/adv,jak/adv:pos,jak/conj,jak/prep:nom,jak/subst:sg:nom:m2]"
                 outputform="jak[jak/subst:sg:nom:m2]">Udomowiony <marker>jak</marker> występuje w centralnej Azji.</example>
        <example type="untouched">Jestem wesoły jak staruszek.</example>
    </rule>

    <rule name="jak parzystokopytny niestety prawie nie istnieje, biedaczek" id="JAK_NIE_SUBST">
        <pattern>
            <token postag="adv">jak</token>
        </pattern>
        <disambig action="remove"><wd pos="subst:sg:nom:m2"/></disambig>
    </rule>

    <rule name="juszyć" id="JUSZYC">
      <pattern><token inflected="yes">juszyć</token></pattern>
      <disambig action="remove"><wd lemma="juszyć"/></disambig>
    </rule>

    <rule name="łuno" id="luno">
        <pattern>
            <marker><token inflected="yes">łuno</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="łuno"/></disambig>
    </rule>

    <rule name="mienia" id="mienia">
        <pattern><token>mienia</token></pattern>
        <disambig action="remove"><wd lemma="mieniać"/></disambig>
    </rule>

    <rule name="możliwe" id="mozliwe"> <!-- niepotrzebny wpis z sjp -->
        <pattern>
            <marker><token inflected="yes">możliwe</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="możliwe"/></disambig>
    </rule>

    <rule name="motylić" id="motylic">
        <pattern><token inflected="yes">motylić</token></pattern>
        <disambig action="remove"><wd lemma="motylić"/></disambig>
    </rule>

    <rule name="osić" id="osic">
        <pattern><token inflected="yes">osić</token></pattern>
        <disambig action="remove"><wd lemma="osić"/></disambig>
    </rule>

    <rule name="ślubić" id="SLUBIC">
        <pattern>
            <marker><token inflected="yes">ślubić</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="ślubić"/></disambig>
    </rule>

    <rule name="tęczy" id="TECZYC">
        <pattern>
            <marker><token inflected="yes">tęczyć</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="tęczyć"/></disambig>
    </rule>

    <rule name="wieczor" id="wieczor">
        <pattern>
            <marker><token inflected="yes">wieczor</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="wieczor"/></disambig>
    </rule>

    <rule name="praw to zwykle rzeczownik" id="PRAW">
        <pattern>
            <token>praw</token>
        </pattern>
        <disambig postag="subst:pl:gen:n2"/>
    </rule>

    <rule name="cień to nie cienić" id="CIEN">
        <pattern>
            <token>cień</token>
        </pattern>
        <disambig action="remove"><wd lemma="cienić"/></disambig>
    </rule>

    <rule name="niechęcić" id="NIECHECIC">
        <pattern><token inflected="yes">niechęcić</token></pattern>
        <disambig action="remove"><wd lemma="niechęcić"/></disambig>
    </rule>

    <rule name="lepiej" id="LEPIEJ">
        <pattern>
            <marker><token>lepiej</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="lepiej"/></disambig>
    </rule>

    <rule name="dosyć" id="dosyc">
        <pattern>
            <token>dosyć</token>
        </pattern>
        <disambig action="remove"><wd lemma="dosycić"/></disambig>
    </rule>

    <rule name="potem jako przysłówek" id="a_potem">
        <pattern>
            <marker>
            <token postag="conj">a</token>
            <token postag="adv">potem</token></marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule name="mniejszy" id="MNIEJSZY">
        <pattern><token>mniejszy</token></pattern>
        <disambig action="remove"><wd lemma="mniejszyć"/></disambig>
    </rule>

    <rule name="trochę to nie trocha" id="TROCHE">
        <pattern>
            <token>trochę</token>
        </pattern>
        <disambig action="remove"><wd lemma="trocha"/></disambig>
    </rule>

    <rule name="księga gości" id="KSIEGA_GOSCI">
        <pattern>
            <token inflected="yes">księga</token>
            <marker><token >gości</token></marker>
        </pattern>
        <disambig postag="subst:pl:gen:m1"/>
    </rule>

    <rule name="brać udział" id="BRAC_UDZIAL">
        <pattern>
            <marker>
            <token inflected="yes" regexp="yes">wziąć|brać</token>
            <token postag="subst:sg:acc:m3">udział</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="udział[udziać/verb:praet:sg:m1.m2.m3:ter:perf:refl.nonrefl,udział/subst:sg:acc:m3,udział/subst:sg:nom:m3]"
                 outputform="udział[udział/subst:sg:acc:m3]">Asystent biorący <marker>udział</marker> w badaniach</example>
    </rule>

    <rule name="wyraźnie to nie wyraźniej" id="WYRAZNIEJ">
        <pattern>
            <marker><token>wyraźniej</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="wyraźnieć"/></disambig>
    </rule>

    <rule name="mszy to nie mszyć" id="MSZY">
        <pattern>
            <marker><token>mszy</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="mszyć"/></disambig>
    </rule>

    <rule name="stała jako przymiotnik" id="STALA">
        <pattern>
            <token regexp="yes">wartość|ekspozycja|wystawa</token>
            <marker><token>stała</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="stać"/></disambig>
    </rule>

    <rule name="wzdłuż to nie wzdłużyć" id="WZDLUZ">
        <pattern><token>wzdłuż</token></pattern>
        <disambig action="remove"><wd lemma="wzdłużyć"/></disambig>
    </rule>

    <rule name="wręcz" id="WRECZ">
        <pattern>
            <token regexp="yes" inflected="yes">walczyć|walka</token>
            <marker><token>wręcz</token></marker>
        </pattern>
        <disambig postag="adv"/>
        <example type="untouched">Wręcz mi plik banknotów!</example>
        <example type="ambiguous" inputform="wręcz[wręcz/adv,wręcz/qub,wręczyć/verb:impt:sg:sec:perf:refl.nonrefl]" outputform="wręcz[wręcz/adv]">Trwała walka <marker>wręcz</marker>.</example>
    </rule>

    <rule name="wybrania" id="wybrania">
        <pattern>
            <marker><token>wybrania</token></marker>
            <token postag=".*:gen.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="remove"><wd lemma="wybraniać"/></disambig>
        <example type="untouched">On wybrania wszystkie.</example>
        <example type="ambiguous" inputform="wybrania[wybraniać/verb:fin:sg:ter:imperf:refl.nonrefl,wybrać/ger:sg:gen:n2:perf:aff:refl.nonrefl]" outputform="wybrania[wybrać/ger:sg:gen:n2:perf:aff:refl.nonrefl]">
            Konieczność ponownego <marker>wybrania</marker> numeru.
        </example>
    </rule>

    <rule name="umarły by usłyszał" id="subst_praet_by_praet">
        <pattern>
            <marker>
            <unify><feature id="gender"/><feature id="number"/>
                <and>
                    <token postag="subst.*nom.*" postag_regexp="yes"></token>
                    <token postag="verb:praet.*" postag_regexp="yes"/>
                </and>
                <unify-ignore>
                    <token>by</token>
                </unify-ignore>
                <token postag="verb:praet.*" postag_regexp="yes"/>
            </unify>
            </marker>
        </pattern>
        <disambig action="unify"></disambig>
    </rule>

    <rule name="daty dzienne" id="pierwszego_stycznia">
        <pattern>
            <unify><feature id="case"><type id="gen"/></feature><feature id="number"/><feature id="gender"/>
                <token regexp="yes" postag="adj.*" postag_regexp="yes">pierwszego|drugiego|trzeciego|czwartego|piątego|szóstego|ósmego|dziewiątego|dziesiątego|jedenastego|dwunastego|trzynastego|czternastego|piętnastego|szesnastego|siedemnastego|osiemnastego|dziewiętnastego|dwudziestego|trzydziestego</token>
                <token regexp="yes">stycznia|lutego|marca|kwietnia|maja|czerwca|lipca|sierpnia|września|października|listopada|grudnia</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>

    <rule name="daty dzienne2" id="dwudziestego_stycznia">
        <pattern>
            <unify><feature id="case"><type id="gen"/></feature><feature id="number"/><feature id="gender"/>
                <token postag="adj.*" postag_regexp="yes">dwudziestego</token>
                <token regexp="yes" postag="adj.*" postag_regexp="yes">pierwszego|drugiego|trzeciego|czwartego|piątego|szóstego|ósmego|dziewiątego</token>
                <token regexp="yes">stycznia|lutego|marca|kwietnia|maja|czerwca|lipca|sierpnia|września|października|listopada|grudnia</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>

    <rule name="daty dzienne3" id="trzydziestego_pierwszego_stycznia">
        <pattern>
            <unify><feature id="case"><type id="gen"/></feature><feature id="number"/><feature id="gender"/>
                <token postag="adj.*" postag_regexp="yes">trzydziestego</token>
                <token postag="adj.*" postag_regexp="yes">pierwszego</token>
                <token regexp="yes">stycznia|marca|maja|lipca|sierpnia|października|grudnia</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>

    <rule name="przybrać postać" id="PRZYBRAC_POSTAC">
        <pattern>
            <token skip="3" inflected="yes">przybrać</token>
            <marker>
                <token>postać</token>
            </marker>
        </pattern>
        <disambig postag="subst:sg:acc:f"/>
    </rule>

    <rule id="LA_PREP_GEN" name="la to nie prep:gen (z Doroszewskiego)">
        <pattern>
            <token>la</token>
        </pattern>
        <disambig action="remove"><wd pos="prep:gen"/></disambig>
    </rule>

    <rule id="O_WYM_" name="O wym -> nie skrót">
        <pattern>
            <token>o</token>
            <marker>
            <token>wym</token>
            </marker>
            <token><exception negate_pos="yes" postag="SENT_END">.</exception></token>
        </pattern>
        <disambig action="remove"><wd pos="brev:pun"/></disambig>
    </rule>

    <rule id="o_wym_2" name="wym na końcu zdania">
        <pattern>
            <token>o</token>
            <marker>
                <token postag="SENT_END">wym</token>
            </marker>
        </pattern>
        <disambig action="remove"><wd pos="brev:pun"/></disambig>
    </rule>

    <rule id="niby_adv" name="niby jako kublik">
        <pattern>
            <marker><token>niby</token></marker>
            <token postag="adv"/>
        </pattern>
        <disambig postag="qub"/>
        <example type="untouched">Kosę, niby szablę, pod słońce obejrzał.</example>
        <example type="ambiguous" inputform="niby[niby/conj,niby/prep:nom,niby/qub]"
                 outputform="niby[niby/qub]">Ale <marker>niby</marker> dokąd?</example>
    </rule>

    <rule id="oto_adv" name="oto jako kublik">
        <pattern>
            <marker><token>oto</token></marker>
            <token postag="adv"/>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="oto[oto/adv,oto/qub]"
                 outputform="oto[oto/qub]">No i <marker>oto</marker> dlaczego mnie nie lubią.</example>
    </rule>

    <rulegroup name="do, re, mi - prep, ppron lub subst" id="DO_PREP_SUBST">
    <rule>
    	<pattern>
			<marker>
                <token postag="subst.*" postag_regexp="yes">do</token>
			    <token postag="subst.*" postag_regexp="yes">re</token>
                <token postag="subst.*" postag_regexp="yes">mi</token>
            </marker>
    	</pattern>
    	<disambig action="filterall" postag="subst.*"/>
    </rule>
    <rule>
    	<pattern>
			<marker><token>do</token></marker>
			<token><exception>re</exception></token>    	
    	</pattern>
    	<disambig postag="prep:gen"/>    
    </rule>
        <rule>
            <pattern>
                <token><exception>re</exception></token>
                <marker><token>mi</token></marker>
            </pattern>
            <disambig action="remove"><wd lemma="mi"></wd></disambig>
            <example type="ambiguous" inputform="mi[ja/ppron12:sg:dat:m1.m2.m3.f.n1.n2:pri:nakc,mi/subst:pl:acc:n2,mi/subst:pl:dat:n2,mi/subst:pl:gen:n2,mi/subst:pl:inst:n2,mi/subst:pl:loc:n2,mi/subst:pl:nom:n2,mi/subst:pl:voc:n2,mi/subst:sg:acc:n2,mi/subst:sg:dat:n2,mi/subst:sg:gen:n2,mi/subst:sg:inst:n2,mi/subst:sg:loc:n2,mi/subst:sg:nom:n2,mi/subst:sg:voc:n2]"
                     outputform="mi[ja/ppron12:sg:dat:m1.m2.m3.f.n1.n2:pri:nakc]">Daj <marker>mi</marker> krowę.</example>
            <example type="untouched">Do re mi!</example>
        </rule>
    </rulegroup>

    <rule name="do to nie subst" id="do_non_subst">
        <pattern>
            <marker><token>do</token></marker>
            <token postag=".*gen.*" postag_regexp="yes"></token>
        </pattern>
        <disambig action="filter" postag="prep:gen.*"/>
    </rule>

    <rulegroup name="od niedawna" id="OD_NIEDAWNA">
    <rule>
        <pattern>
            <marker>
            <token>od</token>
            </marker>
            <token>niedawna</token>
        </pattern>
        <disambig postag="prep:gen:nwok"/>
    </rule>
    <rule>
            <pattern>
                <token>od</token>
                <marker>
                <token>niedawna</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
    </rule>
    </rulegroup>

    <rule name="względem - prep lub subst" id="wzgledem_subst">
        <pattern>
            <token>pod</token>
            <token postag=".*inst.*" postag_regexp="yes"/>
            <marker>
                <token>względem</token>
            </marker>
        </pattern>
        <disambig postag="subst:sg:inst:m3"/>
        <example type="ambiguous" inputform="względem[wzgląd/subst:sg:inst:m3,względem/prep:gen]" outputform="względem[wzgląd/subst:sg:inst:m3]">Pod tym <marker>względem</marker> Brazylia jest szczególna.</example>
        <example type="untouched">Nie bądź względem niego taki ostry!</example>
    </rule>

    <rule id="na_wspak" name="na wspak">
        <pattern>
            <token>na</token>
            <marker><token>wspak</token></marker>
        </pattern>
        <disambig postag="adv"/>
    </rule>
    
    <rule name="godzinę temu" id="temu">
    	<pattern>    		
    		<token regexp="yes" inflected="yes">godzina|rok|miesiąc|tydzień|minuta|chwila|moment|wiek|stulecie</token>
    		<marker><token>temu</token></marker>
    	</pattern>
    	<disambig postag="prep:acc"/>
    	<example type="ambiguous" inputform="temu[temu/prep:acc,ten/adj:sg:dat:m1.m2.m3.n1.n2:pos,to/subst:sg:dat:n2]" outputform="temu[temu/prep:acc]">Było to godzinę <marker>temu</marker>.</example>
    	<example type="untouched">Nie dziwię się temu.</example>
    </rule>
    <rule name="temu to nie prep" id="temu_non_prep">
    	<pattern>
    		<marker><token postag_regexp="yes" postag="adj.*|subst.*">temu</token></marker>
    	</pattern>
    	<disambig action="remove" postag="prep:acc.*"/>
    	<example type="untouched">To było już godzinę temu.</example>
    	<example type="ambiguous" inputform="temu[temu/prep:acc,ten/adj:sg:dat:m1.m2.m3.n1.n2:pos,to/subst:sg:dat:n2]" outputform="temu[ten/adj:sg:dat:m1.m2.m3.n1.n2:pos,to/subst:sg:dat:n2]">Dziwię się <marker>temu</marker> zachowaniu.</example>
    </rule>     
    
    <rulegroup name="O - dezambiguacja" id="O_brev_interj">
    	<rule>
    		<pattern>
    		<marker><token>o</token></marker>
    		<token regexp="yes">[,!]</token>
    		</pattern>
    		<disambig postag="interj"/>
    		<example type="untouched">O „Gwiazdorze” powiedział coś ciekawego.</example>
    		<example type="ambiguous" inputform="O[o/interj,o/prep:acc,o/prep:loc,ocean/brev:pun,ojciec/brev:pun]" outputform="O[o/interj]"><marker>O</marker>, idzie kościelny!</example>
    	</rule>
    	<rule>
    		<pattern>
    		<marker><token>o</token></marker>
    		<token spacebefore="no">.</token>
    		</pattern>
    		<disambig postag="brev:pun"></disambig>
    		<example type="untouched">Porozmawiajmy o literaturze.</example>
    		<example type="ambiguous" inputform="O[o/interj,o/prep:acc,o/prep:loc,ocean/brev:pun,ojciec/brev:pun]" outputform="O[ojciec/brev:pun]"><marker>O</marker>. Pio nie jadał pierogów.</example>
    	</rule>
      <rule>
        <pattern>
        <marker>
        <token postag="prep.*" postag_regexp="yes">o</token>
        </marker>
        <token><exception regexp="yes">.|\p{Lu}\p{Ll}.*</exception></token>
      </pattern>
      <disambig action="remove" postag="brev:pun|interj"/>
      <example type="untouched">To jest o. Pio.</example>
      <example type="ambiguous" inputform="o[o/interj,o/prep:acc,o/prep:loc,ocean/brev:pun,ojciec/brev:pun]" outputform="o[o/prep:acc,o/prep:loc]">Spotykamy się <marker>o</marker> dwunastej</example> 
    </rule>
  </rulegroup>

    <rule name="auto da fe" id="auto_da_fe">
        <pattern>
            <token regexp="yes">autos?</token>
            <token>da</token>
            <token regexp="yes">f[ée]</token>
        </pattern>
        <disambig action="replace"><wd lemma="auto" pos="ign"/><wd lemma="de" pos="ign"/><wd lemma="fé" pos="ign"/></disambig>
    </rule>
    
    <rulegroup name="Na - dezambiguacja" id="na_interj_prep">
      <rule>
        <pattern>
        <marker><token>na</token></marker>
        <token regexp="yes">[,!]|tu</token>
        </pattern>
        <disambig postag="interj"/>
        <example type="untouched">Na Filipinach są gwoździe.</example>
        <example type="ambiguous" inputform="Na[na/interj,na/prep:acc,na/prep:loc]" outputform="Na[na/interj]"><marker>Na</marker>, masz pismo, czytaj.</example>
      </rule>
      <rule>
        <pattern>
        <marker>
        <token postag="prep.*" postag_regexp="yes">na</token>
        </marker>
        <token><exception regexp="yes">[,!]|tu</exception></token>
      </pattern>
      <disambig action="remove" postag="interj"/>
      <example type="untouched">Na tu, piesku</example>
      <example type="ambiguous" inputform="na[na/interj,na/prep:acc,na/prep:loc]" outputform="na[na/prep:acc,na/prep:loc]">Spotykamy się <marker>na</marker> parterze.</example> 
    </rule>
  </rulegroup>

    <rule id="interj" name="wykrzyknienia">
        <pattern>
                <token postag="SENT_START"/>
                <token min="0" max="2" regexp="yes">[-–—„]</token>
            <marker>
                <and>
                    <token postag="interj"/>
                    <token negate_pos="yes" postag="interj"/>
                </and>
            </marker>
                <token regexp="yes">[,!]</token>
        </pattern>
        <disambig postag="interj"/>
        <example type="ambiguous" inputform="Ha[ha/interj,ha/subst:pl:acc:n2,ha/subst:pl:dat:n2,ha/subst:pl:gen:n2,ha/subst:pl:inst:n2,ha/subst:pl:loc:n2,ha/subst:pl:nom:n2,ha/subst:pl:voc:n2,ha/subst:sg:acc:n2,ha/subst:sg:dat:n2,ha/subst:sg:gen:n2,ha/subst:sg:inst:n2,ha/subst:sg:loc:n2,ha/subst:sg:nom:n2,ha/subst:sg:voc:n2]"
                 outputform="Ha[ha/interj]"><marker>Ha</marker>, może to prawda?</example>
        <example type="untouched">To litera ha.</example>
    </rule>

    <rule id="ANO_INTERJ" name="ano jako wykrzyknienie">
        <pattern>
            <token postag="SENT_START"/>
            <token min="0" max="2" regexp="yes">[-–—„]</token>
        <marker>
            <token>ano</token>
        </marker>
            <token regexp="yes">[,!]</token>
        </pattern>
        <disambig postag="interj"/>
        <example type="untouched">Ano tak.</example>
        <example type="ambiguous" inputform="Ano[ano/qub]" outputform="Ano[ano/interj]"><marker>Ano</marker>, ni mniej, ni więcej.</example>
    </rule>

    <rule id="A_INTERJ" name="a jako wykrzyknienie">
        <pattern>
            <marker>
                <token>a</token>
            </marker>
            <token regexp="yes">[,!]</token>
        </pattern>
        <disambig postag="interj"/>
    </rule>

    <rule id="SENT_START_VOC" name="na początku zdania tylko wołacz, nie miejscownik">
        <pattern>
            <token postag="SENT_START"/>
            <token min="0" max="2" regexp="yes">[-–—„]</token>
            <marker>
                <and>
                    <token postag="subst:.*voc.*" postag_regexp="yes"></token>
                    <token postag="subst:.*loc.*" postag_regexp="yes"><exception negate_pos="yes" postag="subst.*[vl]oc.*" postag_regexp="yes"></exception></token>
                </and>
            </marker>
        </pattern>
        <disambig action="filter" postag="subst.*voc.*"/>
        <example type="ambiguous" inputform="Ludwiku[Ludwik/subst:sg:loc:m1,Ludwik/subst:sg:voc:m1,ludwik/subst:sg:loc:m2,ludwik/subst:sg:voc:m2]"
                 outputform="Ludwiku[Ludwik/subst:sg:voc:m1,ludwik/subst:sg:voc:m2]"><marker>Ludwiku</marker>, kup ciastka!</example>
    </rule>

    <rule id="VOC_IMPT" name="tryb rozkazujący po wołaczu">
        <pattern>
            <unify>
                <feature id="number"></feature>
                <token postag="subst.*voc.*" postag_regexp="yes"><exception postag="subst.*voc.*" negate_pos="yes" postag_regexp="yes"/></token>
                <unify-ignore>
                    <token>,</token>
                </unify-ignore>
                <token postag_regexp="yes" postag="verb:impt.*:sec.*"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="lub[lub/comp:comma,lub/conj,lubić/verb:impt:sg:sec:imperf:nonrefl,lubić/verb:impt:sg:sec:imperf:refl.nonrefl]"
                 outputform="lub[lubić/verb:impt:sg:sec:imperf:nonrefl,lubić/verb:impt:sg:sec:imperf:refl.nonrefl]">Ludwiku, <marker>lub</marker> lubelskie!</example>
    </rule>

    <rule id="VOC_IMPT_NO_COMMA" name="tryb rozkazujący po wołaczu -- bez przecinka po wołaczu">
        <pattern>
            <unify>
                <feature id="number"></feature>
                <token postag="subst.*voc.*" postag_regexp="yes"><exception postag="subst.*voc.*" negate_pos="yes" postag_regexp="yes"/></token>
                <token postag_regexp="yes" postag="verb:impt.*:sec.*"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="lub[lub/comp:comma,lub/conj,lubić/verb:impt:sg:sec:imperf:nonrefl,lubić/verb:impt:sg:sec:imperf:refl.nonrefl]"
                 outputform="lub[lubić/verb:impt:sg:sec:imperf:nonrefl,lubić/verb:impt:sg:sec:imperf:refl.nonrefl]">Ludwiku <marker>lub</marker> lubelskie!</example>
    </rule>


    <rule name="Na wskroś" id="na_wskros_burk">
        <pattern>
            <token>na</token>
            <marker><token regexp="yes">wskr[oó]ś</token></marker>
        </pattern>
        <disambig postag="burk"></disambig>
        <example type="untouched">Szedł wskroś krzewów.</example>
        <example type="ambiguous" inputform="wskroś[wskroś/burk,wskroś/prep:gen]" outputform="wskroś[wskroś/burk]">Przebijał mu na <marker>wskroś</marker> tarczę.</example>
    </rule>

    <rule id="BEZ_MALA" name="Bez mała - adjp, jak w NKJP">
        <pattern>
            <token>bez</token>
            <marker>
            <token>mała</token>
            </marker>
        </pattern>
        <disambig action="replace"><wd pos="adjp" lemma="mały"/></disambig>
        <example type="untouched">Bez małej czarnej nie wstanę.</example>
        <example type="ambiguous" inputform="mała[mała/subst:sg:nom:f,mała/subst:sg:voc:f,mały/adj:sg:nom.voc:f:pos]" outputform="mała[mały/adjp]">Bez <marker>mała</marker> wszyscy to robią.</example>
    </rule>

    <rule id="Z_GRUBA" name="Z gruba (ciosany) - kublik">
        <pattern>
            <token>z</token>
            <marker><token>gruba</token></marker>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="gruba[gruba/subst:sg:nom:f,gruba/subst:sg:voc:f,gruby/adj:sg:nom.voc:f:pos]" outputform="gruba[gruba/qub]">Zdaje się z <marker>gruba</marker> ciosany.</example>
        <example type="untouched">Ona jest gruba.</example>
    </rule>

    <rule id="KOLO_LADA_NOM_NIE_PREP" name="koło, lada, poza jako rzeczownik">
        <pattern>
            <marker>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"/>
                <token postag="adj.*|pact.*" postag_regexp="yes"/>
                <token regexp="yes">koło|lada|poza</token>
            </unify>
            </marker>
            <token regexp="yes">[:,;!]</token>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="koło[koło/prep:gen,koło/qub,koło/subst:sg:acc:n2,koło/subst:sg:nom:n2,koło/subst:sg:voc:n2]" outputform="koło[koło/subst:sg:acc:n2,koło/subst:sg:nom:n2,koło/subst:sg:voc:n2]">Choć to jest trochę błędne <marker>koło</marker>, bo z drugiej strony trzeba być sobą.</example>
    </rule>

    <rule id="KOLO_LADA_NOM_NIE_PREP_2" name="koło, lada, poza jako rzeczownik">
        <pattern>
            <marker>
                <unify>
                    <feature id="case"/><feature id="number"/><feature id="gender"/>
                    <token regexp="yes">koło|lada|poza</token>
                    <token postag="adj.*|pact.*" postag_regexp="yes"/>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="koło[koło/prep:gen,koło/qub,koło/subst:sg:acc:n2,koło/subst:sg:nom:n2,koło/subst:sg:voc:n2]" outputform="koło[koło/subst:sg:acc:n2,koło/subst:sg:nom:n2,koło/subst:sg:voc:n2]">To jest <marker>koło</marker> zamachowe gospodarki!</example>
    </rule>

    <rule id="KOLO_MIEJSCOWOSC" name="Koło jako nazwa miejscowości">
        <pattern case_sensitive="yes">
            <marker><token postag="subst:sg:.*:n2" postag_regexp="yes">Koło</token></marker>
            <token>,</token>
            <token regexp="yes">\p{Lu}\p{Ll}+</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Mieszkam koło Grójca.</example>
        <example type="ambiguous" inputform="Koło[Koło/subst:sg:acc:n2,Koło/subst:sg:nom:n2,Koło/subst:sg:voc:n2,koło/prep:gen,koło/qub,koło/subst:sg:acc:n2,koło/subst:sg:nom:n2,koło/subst:sg:voc:n2]"
                 outputform="Koło[Koło/subst:sg:acc:n2,Koło/subst:sg:nom:n2,Koło/subst:sg:voc:n2,koło/subst:sg:acc:n2,koło/subst:sg:nom:n2,koło/subst:sg:voc:n2]">Będzin (Bendzin), Grodno, Kalisz,	<marker>Koło</marker>, Lipno.</example>
    </rule>

    <rule id="PRZYJAZNI_POLSKO_RADZIECKIEJ" name="przyjaźni jako rzeczownik">
        <pattern>
            <marker><token>przyjaźni</token></marker>
            <token>polsko</token>
            <token>-</token>
        </pattern>
        <disambig action="filter" postag="subst:.*:f"/>
        <example type="untouched">On się przyjaźni z dżdżownicą.</example>
        <example type="ambiguous" inputform="przyjaźni[przyjazny/adj:pl:nom.voc:m1.p1:pos,przyjaźnić/verb:fin:sg:ter:imperf:refl,przyjaźny/adj:pl:nom.voc:m1.p1:pos,przyjaźń/subst:pl:gen:f,przyjaźń/subst:sg:dat:f,przyjaźń/subst:sg:gen:f,przyjaźń/subst:sg:loc:f,przyjaźń/subst:sg:voc:f]"
                 outputform="przyjaźni[przyjaźń/subst:pl:gen:f,przyjaźń/subst:sg:dat:f,przyjaźń/subst:sg:gen:f,przyjaźń/subst:sg:loc:f,przyjaźń/subst:sg:voc:f]">Miesiąc <marker>przyjaźni</marker> polsko-radzieckiej</example>
    </rule>


    <rule id="MIAST_NIE_PREP" name="miast jako rzeczownik">
        <pattern>
            <marker><token>miast</token></marker>
            <token regexp="yes">[:,;!]</token>
        </pattern>
        <disambig postag="subst:pl:gen:n2"/>
        <example type="ambiguous" inputform="miast[miast/conj,miast/prep:gen,miasto/subst:pl:gen:n2]" outputform="miast[miasto/subst:pl:gen:n2]">Ach, piękne niebo Italii, wykwintne życie jej dworów, <marker>miast</marker>, czary poezji, miłości, sztuki!</example>
    </rule>

    <rule id="NICZYM_NIE_PREP" name="niczym jako rzeczownik">
        <pattern>
            <marker><token>niczym</token></marker>
            <token regexp="yes">[:,;!]</token>
        </pattern>
        <disambig action="filter" postag="subst:sg:.*:n2"/>
    </rule>

    <rule id="NIBY_NIE_PREP" name="niby nie przyimek">
        <pattern>
            <marker><token>niby</token></marker>
            <token regexp="yes">[:,;!]</token>
        </pattern>
        <disambig action="remove" postag="prep:nom"/>
    </rule>

    <rule id="ZA_OKOLO" name="za około - z biernikiem">
        <pattern>
            <marker><token>za</token></marker>
            <token>około</token>
        </pattern>
        <disambig postag="prep:acc"/>
    </rule>

    <rulegroup id="nowa_adj" name="nowy/a/e jako przymiotnik">
        <rule>
            <pattern>
                <unify>
                    <feature id="case"/><feature id="gender"/><feature id="number"/>
                    <token postag="adj.*" postag_regexp="yes" inflected="yes" regexp="yes">nowy|pierwszy</token>
                    <token postag="subst.*" postag_regexp="yes"/>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="nową[nowa/subst:sg:acc:f,nowa/subst:sg:inst:f,nowy/adj:sg:acc:f:pos,nowy/adj:sg:inst:f:pos]"
                     outputform="nową[nowy/adj:sg:acc:f:pos]">Obmyślał był <marker>nową</marker> zdradę.</example>
        </rule>
    </rulegroup>

    <rule id="albo_complex" name="albo w spójniku złożonym - spójnik na pewno">
        <pattern>
            <marker><token>albo</token></marker>
            <token regexp="yes">więc|i|też</token>
        </pattern>
        <disambig postag="conj"/>
    </rule>

    <rule id="ALE_ALE" name="Ale, ale jako wykrzyknik (za Innym słownikiem)">
        <pattern case_sensitive="yes">
            <token postag="SENT_START"/>
            <marker>
            <token>Ale</token>
            <token>,</token>
            <token>ale</token>
            </marker>
            <token regexp="yes">[!,]</token>
        </pattern>
        <disambig action="replace"><wd pos="interj" lemma="ale"/><wd pos="interp:comma" lemma=","/><wd pos="interj" lemma="ale"/></disambig>
        <example type="untouched">Ale to nieprawda.</example>
        <example type="ambiguous" inputform="Ale[Al/depr:pl:nom:m2,Al/depr:pl:voc:m2,Ala/subst:pl:acc:f,Ala/subst:pl:nom:f,Ala/subst:pl:voc:f,Ale/comp:comma,Ali/depr:pl:nom:m2,Ali/depr:pl:voc:m2,Alo/depr:pl:nom:m2,Alo/depr:pl:voc:m2,ale/conj,ale/qub]"
                 outputform="Ale[ale/interj]"><marker>Ale</marker>, ale, byłbym zapomniał!</example>
    </rule>

    <rule id="ALE" name="Ale to pewnie spójnik">
        <pattern case_sensitive="yes">
            <token postag="SENT_START"/>
            <marker><token>Ale<exception postag="interj"/></token></marker>
        </pattern>
        <disambig action="remove" postag="(?:subst|depr).*"/>
        <example type="untouched">To prawda, ale co z tego?</example>
        <example type="ambiguous" inputform="Ale[Al/depr:pl:nom:m2,Al/depr:pl:voc:m2,Ala/subst:pl:acc:f,Ala/subst:pl:nom:f,Ala/subst:pl:voc:f,Ale/comp:comma,Ali/depr:pl:nom:m2,Ali/depr:pl:voc:m2,Alo/depr:pl:nom:m2,Alo/depr:pl:voc:m2,ale/conj,ale/qub]"
                 outputform="Ale[Ale/comp:comma,ale/conj,ale/qub]"><marker>Ale</marker> są głupcami.</example>
    </rule>

    <rule id="JESLI_TO" name="jeśli/jeżeli, to...">
        <pattern>
            <token skip="-1" regexp="yes">jeśli|jeżeli<exception scope="next" postag="comp:comma"/></token>
            <token>,</token>
            <marker><token>to</token></marker>
        </pattern>
        <disambig postag="conj"/>
    </rule>

    <rulegroup name="lecz" id="lecz">
        <rule>
            <pattern>
                <marker>
                    <token>lecz</token>
                </marker>
                <token>się</token>
                <token>sam</token>
                <token regexp="yes">[\.!,-—…]+</token>
            </pattern>
            <disambig action="filter" postag="verb:impt.*"/>
        </rule>
        <rule>
            <pattern>
                <token>,</token>
                <marker>
                    <token>lecz</token>
                </marker>
            </pattern>
            <disambig postag="conj"/>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <marker>
                    <token>lecz</token>
                </marker>
                <token regexp="yes">też|również|i</token>
            </pattern>
            <disambig postag="conj"/>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <marker>
                    <token>lecz</token>
                </marker>
                <token>za</token>
                <token>to</token>
            </pattern>
            <disambig postag="conj"/>
        </rule>
    </rulegroup>

    <rule name="lub" id="lub">
        <pattern>
            <marker><token>lub</token></marker>
            <token postag="(adj|pact|ppas|ger|subst|depr|ppron).*" postag_regexp="yes"><exception postag=".*acc.*" postag_regexp="yes"/></token>
        </pattern>
        <disambig action="filter" postag="conj|comp:comma"/>
        <example type="ambiguous" inputform="lub[lub/comp:comma,lub/conj,lubić/verb:impt:sg:sec:imperf:nonrefl,lubić/verb:impt:sg:sec:imperf:refl.nonrefl]"
                 outputform="lub[lub/comp:comma,lub/conj]">Objawy cofają się <marker>lub</marker> stają się bardzo łagodne.</example>
    </rule>

    <rule name="lub bez wołacza" id="lub_1">
        <pattern>
            <token><exception postag=".*voc|SENT_START" postag_regexp="yes"></exception></token>
            <marker><token>lub</token></marker>
        </pattern>
        <disambig action="filter" postag="conj|comp:comma"/>
        <example type="untouched">Lub robić coś!</example>
        <example type="untouched">Człowieku lub coś!</example>
    </rule>


    <rule name="Bądź i lub jako spójnik w konstrukcji „bądź x, bądź y”" id="badz_koordynacja_2">
        <pattern>
            <marker><token regexp="yes">bądź|lub</token></marker>
            <unify>
                <feature id="case"><type id="acc"/><type id="inst"/><type id="gen"/><type id="dat"/><type id="loc"/><type id="nom"/></feature>
                <token postag="(?:adj|pact|ppas|subst|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|ppas|subst|ger).*"/></token>
                <unify-ignore>
                    <token min="0" max="1">,</token>
                    <token regexp="yes">bądź|lub</token>
                </unify-ignore>
                <token postag="(?:adj|pact|ppas|subs|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|ppas|subst|ger).*"/></token>
            </unify>
        </pattern>
        <disambig action="filter" postag="conj"/>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[bądź/conj]">Dojadę tam <marker>bądź</marker> rowerem, bądź hulajnogą.</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[bądź/conj]">Dojadę tam <marker>bądź</marker> rowerem bądź hulajnogą.</example>
    </rule>

    <rule name="bądź i lub jako spójnik między liczbami" id="badz_num">
        <pattern>
            <token postag="num:.*" postag_regexp="yes"/>
            <marker><token regexp="yes">bądź|lub</token></marker>
            <token postag="num:.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="conj"/>
        <example type="untouched">Bądź pozdrowiony!</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[bądź/conj]">Dawkę leku powtarzamy co dwa <marker>bądź</marker> trzy tygodnie.</example>
        <example type="ambiguous" inputform="lub[lub/comp:comma,lub/conj]"
                 outputform="lub[lub/conj]">Dawkę leku powtarzamy co dwa <marker>lub</marker> trzy tygodnie.</example>
    </rule>

    <rule name="i między liczbami" id="i_conj_num">
            <pattern>
                <token postag="num:.*" postag_regexp="yes"><exception>więcej</exception></token>
                <marker><token>i</token></marker>
                <token postag="num:.*" postag_regexp="yes"/>
            </pattern>
            <disambig postag="conj"/>
        <example type="untouched">Takich spraw do „wyodrębniania” jest znacznie więcej i wiele z nich (na przykład związki gospodarki narodowej z gospodarką światową) sprawia znacznie większe trudności z punktu widzenia stworzenia odpowiednich przepisów regulujących postępowanie przedsiębiorstw.</example>
        <example type="ambiguous" inputform="i[i/comp:comma,i/conj,i/interj,i/qub]" outputform="i[i/conj]">Piętnaście <marker>i</marker> szesnaście.</example>
    </rule>

    <rule name="lub że" id="lub_ze">
        <pattern>
            <marker>
                <token regexp="yes">l(?:ub|ecz)</token>
            </marker>
            <token>że</token>
        </pattern>
        <disambig action="filter" postag="conj|comp:comma"/>
        <example type="ambiguous" inputform="Lecz[Lecz/comp:comma,lecz/conj,leczo/subst:pl:gen:n2,leczyć/verb:impt:sg:sec:imperf:refl.nonrefl]"
                 outputform="Lecz[Lecz/comp:comma,lecz/conj]"><marker>Lecz</marker> że żaba była chora, nie chodziła do doktora.</example>
    </rule>

    <rule id="badz_ze" name="bądź że">
        <pattern>
            <token>,</token>
            <marker>
                <token>bądź</token>
            </marker>
            <token skip="-1">że<exception postag="SENT_END|&lt;ELLIPSIS&gt;|comp:comma|interp:comma" postag_regexp="yes" scope="next"></exception></token>
            <token postag="pred|verb:.*(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="conj"/>
        <example type="untouched">Ludwiku, bądż że rozsądny!</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[bądź/conj]">Aby podkreślić ładne powiedzenie siostry, <marker>bądź</marker> że zazdrościła Swannowi, ...</example>
    </rule>

    <rule name="bądź co bądź" id="BADZ_CO_BADZ">
        <pattern>
            <marker>
                <token postag="qub">bądź</token>
                <token postag="qub">co</token>
                <token postag="qub">bądź</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Bądź pozdrowiony!</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]" outputform="bądź[bądź/qub]">Nie wypadało mu mówić głupstw, <marker>bądź</marker> co bądź reprezentował parlament.</example>
    </rule>

    <rule name="bądź jak bądź" id="BADZ_JAK_BADZ">
        <pattern>
            <marker>
                <token postag="qub">bądź</token>
                <token postag="adv">jak</token>
                <token postag="qub">bądź</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Bądź pozdrowiony!</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]" outputform="bądź[bądź/qub]">„Bądź jak <marker>bądź</marker> – mówił do siebie Rzecki...</example>
    </rule>


    <rule name="bądź zdrów" id="BADZ_VERB">
        <pattern>
            <marker>
                <token postag="verb:impt:sg:sec:imperf:nonrefl">bądź</token>
                <token postag="adjc">zdrów</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Bądź co bądź to prawda.</example>
        <example type="ambiguous" inputform="Bądź[Bądź/comp:comma,być/verb:impt:sg:sec:imperf:nonrefl,bądź/conj,bądź/qub]" outputform="Bądź[być/verb:impt:sg:sec:imperf:nonrefl]"><marker>Bądź</marker> zdrów.</example>
    </rule>

    <rule name="bądź to (inspiracja z puddle)" id="badz_to">
        <pattern>
            <token postag="conj|comp:comma" postag_regexp="yes">bądź<exception scope="previous">co</exception></token>
            <token postag="qub" regexp="yes">to|też</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Bądź co bądź to prawda.</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[bądź/comp:comma,bądź/conj]">Bądź to czysta serweta, <marker>bądź</marker> to brudna ścierka.</example>
    </rule>

    <rule name="jak bądź" id="jak_badz">
        <pattern>
            <token postag="adv" regexp="yes">jak|gdzie|kiedy</token>
            <token postag="qub">bądź</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Bądź co bądź to prawda.</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[bądź/qub]">Wstał z łóżka, ubrał się jak <marker>bądź</marker> i bez kołnierzyka zbiegł czym prędzej do hallu.</example>
    </rule>

    <rule name="bądź jako spójnik w okolicach czasownika" id="badz_conj_verb">
        <pattern>
            <marker><token postag="verb:impt:sg:sec:imperf:nonrefl" skip="-1">bądź<exception scope="next" postag_regexp="yes" postag="(?:comp|interp):comma|SENT_END"/></token></marker>
            <token postag="verb:.*(sg|pl).*|verb:imp[ts].*|pred" postag_regexp="yes"/>
        </pattern>
        <disambig action="filter" postag="conj|comp:comma"/>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[bądź/comp:comma,bądź/conj]">Mówił <marker>bądź</marker> milczał.</example>
        <example type="untouched">Bądź co bądź to prawda.</example>
    </rule>

    <rule name="bądź więc" id="badz_wiec">
        <pattern>
            <marker><token>bądź</token></marker>
            <token regexp="yes">więc|pan</token>
        </pattern>
        <disambig postag="verb:impt:sg:sec:imperf:nonrefl"/>
        <example type="untouched">Bądź zdrów!</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl]">List ten piszę własną ręką, <marker>bądź</marker> więc ostrożny.</example>
    </rule>

    <rule name="bądź cicho" id="badz_cicho">
    <pattern>
        <marker><token>bądź</token></marker>
        <token>cicho</token>
        <token regexp="yes">[!,]</token>
    </pattern>
    <disambig postag="verb:impt:sg:sec:imperf:nonrefl"/>
    </rule>


    <rule name="inst + bądź + inst => spójnik" id="inst_badz_inst">
        <pattern>
            <token postag=".*inst.*" postag_regexp="yes"><exception postag="(?:adj|subst|depr|pact|ppas).*" postag_regexp="yes" negate_pos="yes"/></token>
            <marker><token>bądź</token></marker>
            <token postag=".*inst.*" postag_regexp="yes"><exception postag="(?:adj|subst|depr|pact|ppas).*" postag_regexp="yes" negate_pos="yes"/></token>
        </pattern>
        <disambig postag="conj"></disambig>
        <example type="untouched">Bądź zdrów!</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[bądź/conj]">To wszystko bez względu na przynależność rasową <marker>bądź</marker> wyznaniową.</example>
    </rule>

    <rule name="rad jestem" id="rad_jestem">
        <pattern>
            <marker><token>rad</token></marker>
            <token regexp="yes">jest(?:e[mś])?|był(?:e[mś])?|będę|byłby[mś]?|będzie(?:sz)?</token>
        </pattern>
        <disambig postag="adj:sg:nom:m1:pos"/>
        <example type="ambiguous" inputform="rad[rad/adj:sg:nom:m1.m2.m3:pos,rad/subst:sg:acc:m3,rad/subst:sg:nom:m3,rada/subst:pl:gen:f]" outputform="rad[rad/adj:sg:nom:m1:pos]">Leżał, patrząc na otaczające go spustoszenie i <marker>rad</marker> był, że nie potrzebuje iść na pokład.</example>
        <example type="untouched">Nie potrzebuję twoich rad!</example>
    </rule>

    <rule name="być z narzędnikiem dla orzecznika" id="BYC_INST">
        <pattern>
            <token inflected="yes" postag="(?:verb|pact).*" postag_regexp="yes">być</token>
            <token postag=".*inst.*" postag_regexp="yes"><exception postag="(?:adj|subst|depr|pact|ppas).*" postag_regexp="yes" negate_pos="yes"/></token>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">On wart jest stu takich drabów.</example>
        <example type="ambiguous" inputform="eleganckim[elegancki/adj:pl:dat:m1.m2.m3.f.n1.n2.p1.p2.p3:pos,elegancki/adj:sg:inst:m1.m2.m3.n1.n2:pos,elegancki/adj:sg:loc:m1.m2.m3.n1.n2:pos]"
                 outputform="eleganckim[elegancki/adj:sg:inst:m1.m2.m3.n1.n2:pos]">Nie sposób być <marker>eleganckim</marker>.</example>
    </rule>

    <rule name="być z narzędnikiem dla orzecznika" id="BYC_INST_2">
        <pattern>
            <token postag=".*inst.*" postag_regexp="yes"><exception postag="(?:adj|subst|depr|pact|ppas).*" postag_regexp="yes" negate_pos="yes"/></token>
            <token inflected="yes" postag="(?:verb|pact).*" postag_regexp="yes">być</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">On wart jest stu takich drabów.</example>
        <example type="ambiguous" inputform="eleganckim[elegancki/adj:pl:dat:m1.m2.m3.f.n1.n2.p1.p2.p3:pos,elegancki/adj:sg:inst:m1.m2.m3.n1.n2:pos,elegancki/adj:sg:loc:m1.m2.m3.n1.n2:pos]"
                 outputform="eleganckim[elegancki/adj:sg:inst:m1.m2.m3.n1.n2:pos]">Człowiekiem <marker>eleganckim</marker> był Ludwik.</example>
    </rule>

    <rule name="być z narzędnikiem dla orzecznika" id="BYC_INST_3">
        <pattern>
            <token postag=".*inst.*" postag_regexp="yes"><exception postag="(?:adj|subst|depr|pact|ppas).*" postag_regexp="yes" negate_pos="yes"/></token>
            <token/>
            <token inflected="yes" postag="(?:verb|pact).*" postag_regexp="yes">być</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">On wart jest stu takich drabów.</example>
        <example type="ambiguous" inputform="eleganckim[elegancki/adj:pl:dat:m1.m2.m3.f.n1.n2.p1.p2.p3:pos,elegancki/adj:sg:inst:m1.m2.m3.n1.n2:pos,elegancki/adj:sg:loc:m1.m2.m3.n1.n2:pos]"
                 outputform="eleganckim[elegancki/adj:sg:inst:m1.m2.m3.n1.n2:pos]">Człowiekiem <marker>eleganckim</marker> dawniej był Ludwik.</example>
    </rule>

    <rule name="ppas + była" id="ppas_byla">
        <pattern>
            <marker>
                <token postag_regexp="yes" postag="ppas:sg:nom.voc:f:(im)?perf:aff"/>
                <token postag="verb:praet:sg:f:ter:imperf:nonrefl">była</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">To jest moja była.</example>
        <example type="ambiguous" inputform="była[być/verb:praet:sg:f:ter:imperf:nonrefl,była/subst:sg:nom:f,była/subst:sg:voc:f,były/adj:sg:nom.voc:f:pos]"
                 outputform="była[być/verb:praet:sg:f:ter:imperf:nonrefl]">Postulowana <marker>była</marker> pierwotność intencjonalności.</example>
    </rule>

    <rule name="ppas + była" id="byla_ppas">
        <pattern>
            <marker>
                <token postag="verb:praet:sg:f:ter:imperf:nonrefl">była</token>
                <token postag_regexp="yes" postag="ppas:sg:nom.voc:f:(im)?perf:aff"/>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">To jest moja była.</example>
        <example type="ambiguous" inputform="była[być/verb:praet:sg:f:ter:imperf:nonrefl,była/subst:sg:nom:f,była/subst:sg:voc:f,były/adj:sg:nom.voc:f:pos]"
                 outputform="była[być/verb:praet:sg:f:ter:imperf:nonrefl]">Wczoraj <marker>była</marker> postulowana pierwotność intencjonalności.</example>
    </rule>


    <rule name="ppas + były" id="ppas_byly">
        <pattern>
            <marker>
                <token postag="ppas:pl:nom.acc.voc:m2.m3.f.n1.n2.p2.p3:imperf:aff"/>
                <token postag="verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:nonrefl">były</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">One były tutaj.</example>
        <example type="ambiguous" inputform="były[być/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:nonrefl,były/adj:sg:acc:m3:pos,były/adj:sg:nom.voc:m1.m2.m3:pos,były/subst:sg:nom:m1,były/subst:sg:voc:m1]"
                 outputform="były[być/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:nonrefl]">Tam robione <marker>były</marker> przekręty.</example>
    </rule>

    <rule name="ppas + były" id="byly_ppas">
        <pattern>
            <marker>
                <token postag="verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:nonrefl">były</token>
                <token postag="ppas:pl:nom.acc.voc:m2.m3.f.n1.n2.p2.p3:imperf:aff"/>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">One pijane były.</example>
        <example type="ambiguous" inputform="były[być/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:nonrefl,były/adj:sg:acc:m3:pos,były/adj:sg:nom.voc:m1.m2.m3:pos,były/subst:sg:nom:m1,były/subst:sg:voc:m1]"
                 outputform="były[być/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:nonrefl]">Tam <marker>były</marker> robione przekręty.</example>
    </rule>

    <rule name="ppas + jest/są" id="ppas_jest">
        <pattern>
            <unify>
                <feature id="number"/>
                <token inflected="yes" postag="verb:fin.*:ter:imperf:nonrefl" postag_regexp="yes">być</token>
                <token postag="ppas:.*nom\..*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="robione[robiony/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,robiony/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,robiony/adj:sg:acc:n1.n2:pos,robiony/adj:sg:nom.voc:n1.n2:pos,robić/ppas:pl:nom.acc.voc:m2.m3.f.n1.n2.p2.p3:imperf:aff,robić/ppas:sg:nom.acc.voc:n1.n2:imperf:aff]"
                 outputform="robione[robić/ppas:pl:nom.acc.voc:m2.m3.f.n1.n2.p2.p3:imperf:aff]">Tam są <marker>robione</marker> przekręty.</example>
    </rule>

    <rule name="ppas + jest/są" id="jest_ppas">
        <pattern>
            <unify>
                <feature id="number"/>
                <token postag="ppas:.*nom\..*" postag_regexp="yes"/>
                <token inflected="yes" postag="verb:fin.*:ter:imperf:nonrefl" postag_regexp="yes">być</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>

    <rule name="jest to..." id="jest_to_nom">
        <pattern>
            <unify>
                <feature id="number"/>
                <marker>
                <token postag="verb:fin.*:ter:imperf:nonrefl" inflected="yes" postag_regexp="yes">być</token>
                    <unify-ignore>
                        <token>to</token>
                    </unify-ignore>
                <token postag=".*nom[:\.].*" postag_regexp="yes"/>
            </marker>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="niewielki[niewielki/adj:sg:acc:m3:pos,niewielki/adj:sg:nom.voc:m1.m2.m3:pos]"
                 outputform="niewielki[niewielki/adj:sg:nom.voc:m1.m2.m3:pos]">Jest to <marker>niewielki</marker> elektromagnes.</example>
    </rule>

    <rule name="był to..." id="byl_to">
        <pattern>
            <unify>
                <feature id="gender"/><feature id="number"/>
                <token postag_regexp="yes" inflected="yes" postag="verb:praet.*">być</token>
                <unify-ignore>
                    <token>to</token>
                </unify-ignore>
                <token postag=".*nom[\.:].*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Był to czasami wyjątkowo uciążliwy dureń.</example>
        <example type="ambiguous" inputform="niewielki[niewielki/adj:sg:acc:m3:pos,niewielki/adj:sg:nom.voc:m1.m2.m3:pos]"
                 outputform="niewielki[niewielki/adj:sg:nom.voc:m1.m2.m3:pos]">Był to <marker>niewielki</marker> elektromagnes.</example>
    </rule>

    <rule name="przeciw byli" id="przeciw_byli">
        <pattern>
            <token>przeciw</token>
            <marker><token regexp="yes">była|byli</token></marker>
        </pattern>
        <disambig action="filter" postag="verb:praet.*"/>
        <example type="ambiguous" inputform="byli[być/verb:praet:pl:m1.p1:ter:imperf:nonrefl,były/adj:pl:nom.voc:m1.p1:pos,były/subst:pl:nom:m1,były/subst:pl:voc:m1]"
                 outputform="byli[być/verb:praet:pl:m1.p1:ter:imperf:nonrefl]">Przeciw <marker>byli</marker> Schmid i Leuwerik.</example>
    </rule>

    <rule name="głosować przeciw" id="glosowac_przeciw">
    	<pattern>
    		<token regexp="yes" inflected="yes">głosować|wystąpić</token>
    		<marker><token>przeciw</token></marker>
    	</pattern>
    	<disambig postag="prep:dat"/>
    	<example type="untouched">Przeciw się przemocy!</example>
    	<example type="ambiguous" inputform="przeciw[przeciw/prep:dat,przeciwić/verb:impt:sg:sec:imperf:refl]" outputform="przeciw[przeciw/prep:dat]">Głosujemy <marker>przeciw</marker> tej propozycji.</example>
    </rule>

    <rule name="też jako kublik" id="tez_qub">
        <pattern>
            <marker><token>też</token></marker>
            <token postag_regexp="yes" postag="prep:.*"/>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="też[tenże/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,tenże/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,też/qub]"
                 outputform="też[też/qub]">Nie masz <marker>też</marker> o co się martwić.</example>
    </rule>

    <rule name="wszędzie dokoła" id="dokoła_adv">
        <pattern>
            <token>wszędzie</token>
            <marker><token>dokoła</token></marker>
        </pattern>
        <disambig postag="adv"/>
        <example type="ambiguous" outputform="dokoła[dokoła/adv]"
                 inputform="dokoła[dokoła/adv,dokoła/prep:gen]">Wszędzie <marker>dokoła</marker> co za blask!</example>
        <example type="untouched">Tańczą dokoła drzewa.</example>
    </rule>

    <rule id="rozdzial_subst" name="Rozdział to rzeczownik">
        <pattern>
            <marker>
                <token regexp="yes">(?:roz)?dział</token>
            </marker>
            <token regexp="yes">\d+|((X{0,2})(V?I{0,3}|I[VX]))(-(X{0,2})(V?I{0,3}|I[VX]))?</token>
        </pattern>
        <disambig action="remove"><wd pos="verb:praet:sg:m1.m2.m3:ter:perf:refl.nonrefl"/></disambig>
        <example type="untouched">Rozdział się pospiesznie.</example>
        <example type="ambiguous" inputform="Rozdział[rozdziać/verb:praet:sg:m1.m2.m3:ter:perf:refl.nonrefl,rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]" outputform="Rozdział[rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]"><marker>Rozdział</marker> XXIV</example>
    </rule>

    <rulegroup id="rozdzial_dzial_subst" name="Rozdział i dział to rzeczowniki">
    <rule>
        <pattern>
            <marker>
                <unify>
                  <feature id="gender"/><feature id="case"/><feature id="number"/>
                    <token regexp="yes">(?:roz|po|prze|u)?dział</token>
                    <token postag_regexp="yes" postag="adj.*"/>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Rozdział się pospiesznie.</example>
        <example type="ambiguous" inputform="Rozdział[rozdziać/verb:praet:sg:m1.m2.m3:ter:perf:refl.nonrefl,rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]" outputform="Rozdział[rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]"><marker>Rozdział</marker> pierwszy</example>
    </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="gender"/><feature id="case"/><feature id="number"/>
                        <token postag_regexp="yes" postag="adj.*"/>
                        <token regexp="yes">(?:roz|po|prze|u)?dział</token>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">Rozdział się pospiesznie.</example>
            <example type="ambiguous" inputform="rozdział[rozdziać/verb:praet:sg:m1.m2.m3:ter:perf:refl.nonrefl,rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]" outputform="rozdział[rozdział/subst:sg:acc:m3,rozdział/subst:sg:nom:m3]">Drugi <marker>rozdział</marker> opisuje przyrodę Kaukazu.</example>
        </rule>
    </rulegroup>


    <rule id="INF_MUSZA" name="Muszą jako czasownik">
        <pattern>
            <token postag="verb:inf.*" postag_regexp="yes"/>
            <marker><token>muszą</token></marker>
        </pattern>
        <disambig postag="verb:fin:pl:ter:imperf:nonrefl"/>
        <example type="untouched">Zabawiał się muszą nóżką.</example>
        <example type="ambiguous" inputform="muszą[musieć/verb:fin:pl:ter:imperf:nonrefl,musić/verb:fin:pl:ter:imperf:refl.nonrefl,musza/subst:sg:inst:f,muszy/adj:sg:acc:f:pos,muszy/adj:sg:inst:f:pos]" outputform="muszą[musieć/verb:fin:pl:ter:imperf:nonrefl]">Oni zarabiać <marker>muszą</marker>.</example>
    </rule>

    <rule id="INF_MUSZA_2" name="Muszą jako czasownik">
        <pattern>
            <marker><token>muszą</token></marker>
            <token postag="verb:inf.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="verb:fin:pl:ter:imperf:nonrefl"/>
        <example type="untouched">Zabawiał się muszą nóżką.</example>
        <example type="ambiguous" inputform="muszą[musieć/verb:fin:pl:ter:imperf:nonrefl,musić/verb:fin:pl:ter:imperf:refl.nonrefl,musza/subst:sg:inst:f,muszy/adj:sg:acc:f:pos,muszy/adj:sg:inst:f:pos]" outputform="muszą[musieć/verb:fin:pl:ter:imperf:nonrefl]">Oni <marker>muszą</marker> zarabiać.</example>
    </rule>

    <rule id="mosci" name="mości jako wołacz">
        <pattern>
            <unify>
                <feature id="case"><type id="voc"/></feature>
                <feature id="gender"><type id="m1"/><type id="f"/></feature>
                <feature id="number"><type id="sg"/></feature>
                <token>mości</token>
                <token postag="subst:sg.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Jaskółka mości sobie gniazdko.</example>
        <example type="ambiguous" inputform="mości[mości/burk,mościć/verb:fin:sg:ter:imperf:refl.nonrefl,mość/subst:pl:gen:f,mość/subst:sg:acc:m1,mość/subst:sg:dat:f,mość/subst:sg:dat:m1,mość/subst:sg:gen:f,mość/subst:sg:gen:m1,mość/subst:sg:loc:f,mość/subst:sg:loc:m1,mość/subst:sg:voc:f,mość/subst:sg:voc:m1]"
                 outputform="mości[mość/subst:sg:voc:f]">A <marker>mości</marker> brzytewko, miły skrobibrodo!</example>
    </rule>

    <rulegroup id="MNA" name="mną">
     <rule>
        <pattern>
            <token inflected="yes" postag="verb:.*(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*" postag_regexp="yes" skip="-1">mieć<exception scope="current">miano</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|comp:comma|interp:comma" postag_regexp="yes" scope="next"/><exception scope="next" regexp="yes">&interp;</exception></token>
            <marker>
                <token>mną</token>
            </marker>
        </pattern>
        <disambig postag="ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri"/>
         <example type="untouched">Oni mną papiery.</example>
         <example type="ambiguous" inputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri,miąć/verb:fin:pl:ter:imperf:refl.nonrefl]"
                  outputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri]">Masz się <marker>mną</marker> zająć.</example>
    </rule>
        <rule>
            <pattern>
                <token postag="verb:.*(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*" postag_regexp="yes" skip="-1"><exception postag="subst:.*|adj.*|ppron.*|verb:inf.*|verb:bedzie.*|adv:com|prep.*|qub|adv.*|conj|comp|&lt;/TO_(ZNACZY|JEST)&gt;" postag_regexp="yes" scope="current"></exception><exception scope="current">może</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma" postag_regexp="yes" scope="next"/><exception scope="next" regexp="yes">&interp;</exception></token>
                <marker>
                    <token>mną</token>
                </marker>
            </pattern>
            <disambig postag="ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri"/>
            <example type="untouched">Oni mną papiery.</example>
            <example type="ambiguous" inputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri,miąć/verb:fin:pl:ter:imperf:refl.nonrefl]"
                     outputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri]">Zajmij się <marker>mną</marker>.</example>
        </rule>
        <rule>
        <pattern>
            <marker>
                <token skip="-1">mną<exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma" postag_regexp="yes" scope="next"/><exception scope="next" regexp="yes">&interp;</exception></token>
            </marker>
            <token postag="verb:.*(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*" postag_regexp="yes"><exception postag="subst:.*|adj.*|ppron.*|verb:inf.*|verb:bedzie.*|adv:com|prep.*|qub|adv.*|conj|comp|&lt;/TO_(ZNACZY|JEST)&gt;" postag_regexp="yes" scope="current"/><exception scope="current">może</exception></token>
        </pattern>
            <disambig postag="ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri"/>
            <example type="ambiguous" inputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri,miąć/verb:fin:pl:ter:imperf:refl.nonrefl]"
                     outputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri]">Czemu się <marker>mną</marker> zajmujesz?</example>
            <example type="untouched">Oni mną papiery.</example>
        </rule>
    </rulegroup>

    <rule id="WALESA" name="Wałęsa to nazwisko">
        <pattern case_sensitive="yes">
            <token>Wałęsa<exception scope="previous" postag="SENT_END"/></token>
        </pattern>
        <disambig action="replace"><wd pos="subst:sg:nom:m1" lemma="Wałęsa"/></disambig>
        <example type="ambiguous" inputform="Wałęsa[&lt;/S&gt;,Wałęsa/subst:sg:nom:m1,wałęsa/subst:sg:nom:m1,wałęsać/verb:fin:sg:ter:imperf:refl]" outputform="Wałęsa[&lt;/S&gt;,Wałęsa/subst:sg:nom:m1]">Lech <marker>Wałęsa</marker></example>
    </rule>

    <rule id="MIESZKA" name="Mieszka to dopełniacz od Mieszko">
        <pattern case_sensitive="yes">
            <token>Mieszka<exception scope="previous" postag="SENT_END"/></token>
        </pattern>
        <disambig action="filter" postag="subst:sg:.*:m1"/>
        <example type="ambiguous" inputform="Mieszka[Mieszko/subst:sg:acc:m1,Mieszko/subst:sg:gen:m1,mieszek/subst:sg:gen:m3,mieszkać/verb:fin:sg:ter:imperf:nonrefl]"
                 outputform="Mieszka[Mieszko/subst:sg:acc:m1,Mieszko/subst:sg:gen:m1]">
            W tym samym roku władca Polski przywołał z węgierskiego wygnania swego bratanka <marker>Mieszka</marker> Bolesławowica.</example>
    </rule>


    <rule id="SWOJE_LATA" name="Swoje lata -> rzeczownik">
        <pattern>
            <token postag="adj:pl.*" postag_regexp="yes" regexp="yes">pierwsze|swoje|ostatnie|młode|złe</token>
            <token postag="subst:pl.*" postag_regexp="yes">lata</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="DOBRE_JADŁO" name="jadło - rzeczownik">
        <pattern>
            <token postag="adj.*" regexp="yes" postag_regexp="yes">chłopskie|swojskie|dobre|nowe</token>
            <token postag="subst.*" postag_regexp="yes">jadło</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>
    
    <rule id="PETA" name="te pęta - nie czasownik">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/>
                <feature id="gender"/>
            <token postag="adj.*" postag_regexp="yes"/>
            <token postag="subst.*" postag_regexp="yes">pęta</token>
            </unify>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">On zwierzęta pęta.</example>
        <example type="ambiguous" inputform="pęta[pęta/subst:pl:acc:p3,pęta/subst:pl:nom:p3,pęta/subst:pl:voc:p3,pętać/verb:fin:sg:ter:imperf:refl,pętać/verb:fin:sg:ter:imperf:refl.nonrefl,pęto/subst:pl:acc:n2,pęto/subst:pl:nom:n2,pęto/subst:pl:voc:n2,pęto/subst:sg:gen:n2]"
                 outputform="pęta[pęta/subst:pl:acc:p3,pęta/subst:pl:nom:p3,pęta/subst:pl:voc:p3,pęto/subst:pl:acc:n2,pęto/subst:pl:nom:n2,pęto/subst:pl:voc:n2,pęto/subst:sg:gen:n2]">Do czego służą te <marker>pęta</marker>?</example>
    </rule>

    <rulegroup id="powiesc" name="powieść">
        <rule>
        <pattern>
            <token skip="1" regexp="yes" inflected="yes">s?kończyć|zacząć|zaczynać</token>
            <marker><token>powieść</token></marker>
        </pattern>
        <disambig postag="subst:sg:acc:f"></disambig>
        <example type="ambiguous" inputform="powieść[powieść/subst:sg:acc:f,powieść/subst:sg:nom:f,powieść/verb:inf:perf:refl.nonrefl]"
                 outputform="powieść[powieść/subst:sg:acc:f]">Muszę skończyć <marker>powieść</marker>.</example>
        <example type="untouched">Wszystko musi mi się powieść.</example>
    </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="case"/><feature id="gender"><type id="f"/></feature><feature id="number"><type id="sg"/></feature>
                    <token>powieść</token>
                    <token postag="adj.*" postag_regexp="yes"/>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="ta[ta/qub,ten/adj:sg:nom.voc:f:pos]"
                     outputform="ta[ten/adj:sg:nom.voc:f:pos]">Powieść <marker>ta</marker> jest interesująca.</example>
        </rule>
    </rulegroup>


    <rule id="POSTAC" name="postać jako rzeczownik z przymiotnikiem">
        <pattern>
            <unify>
                <feature id="case"/><feature id="gender"><type id="f"/></feature><feature id="number"><type id="sg"/></feature>
                <token postag="adj.*" postag_regexp="yes"/>
                <token>postać</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="postać[postać/subst:sg:acc:f,postać/subst:sg:nom:f,postać/verb:inf:perf:nonrefl]"
                 outputform="postać[postać/subst:sg:nom:f]">To historyczna <marker>postać</marker>.</example>
        <example type="untouched">Dziękuję, wolę postać.</example>
    </rule>

    <rule id="POSTAC_2" name="postać jako rzeczownik z przymiotnikiem">
        <pattern>
            <unify>
                <feature id="case"/><feature id="gender"><type id="f"/></feature><feature id="number"><type id="sg"/></feature>
                <token>postać</token>
                <token postag="adj.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="postać[postać/subst:sg:acc:f,postać/subst:sg:nom:f,postać/verb:inf:perf:nonrefl]"
                 outputform="postać[postać/subst:sg:nom:f]">To <marker>postać</marker> historyczna.</example>
        <example type="untouched">Dziękuję, wolę postać.</example>
    </rule>


    <rule id="ON_ONA_MA" name="Ona/on ma...">
        <pattern>
            <token regexp="yes" postag="ppron3.*" postag_regexp="yes">ona?</token>
            <token postag="verb:fin:sg:ter:imperf:refl.nonrefl">ma</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="SIEC_ROZLEGLA" name="sieć rozległa > nie czasownik">
        <pattern>
            <token postag="subst:sg:nom:f">sieć</token>
            <token postag="adj:sg:nom.voc:f:pos">rozległa</token>
        </pattern>
        <disambig action="filterall"></disambig>
    </rule>

    <rule id="DZISIAJ_GOSCI" name="dzisiaj gości">
        <pattern>
            <marker>
                <token>dzisiaj</token>
            </marker>
            <token>gości</token>
        </pattern>
        <disambig postag="adv"/>
    </rule>

    <rule id="STARA_ADJ" name="stara to przymiotnik przed rzeczownikiem r. ż.">
        <pattern>
            <token postag="adj:sg:nom.voc:f:pos">stara</token>
            <token postag="subst:sg:nom:f|adj:sg:nom.voc:f.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="BABIEJ_ADJ" name="babiej to przymiotnik przed rzeczownikiem r.ż.">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"><type id="sg"/></feature><feature id="gender"><type id="f"/></feature>
                <token>babiej</token>
                <token postag="(subst|depr|adj|pact|ppas):.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Nie chcesz, to sobie tutaj babiej!</example>
        <example type="ambiguous" inputform="Babiej[babi/adj:sg:dat:f:pos,babi/adj:sg:gen:f:pos,babi/adj:sg:loc:f:pos,babieć/verb:impt:sg:sec:imperf:nonrefl]"
                 outputform="Babiej[babi/adj:sg:gen:f:pos]">Okolice <marker>Babiej</marker> Góry</example>
    </rule>

    <rule id="OKAZYWAC_UCZUC" name="okazywać + uczuć -> ger">
        <pattern>
            <token regexp="yes" inflected="yes">okazać|okazywać</token>
            <marker><token>uczuć</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="uczuć"/></disambig>
    </rule>

    <rule id="NOWE_MYSLI" name="myśli to rzeczownik">
        <pattern>
            <token postag="adj.*" postag_regexp="yes" regexp="yes">nowe|podłe</token>
            <token postag="subst.*" postag_regexp="yes">myśli</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="n2_mysli" name="rzeczownik nieożywiony + myśli => myśl w dopełniaczu">
        <pattern>
            <token postag="subst:sg:nom.*(?:[mn]2|m3)" postag_regexp="yes"><exception postag_regexp="yes" postag="subst:sg:nom.*m1"/></token>
            <marker><token>myśli</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"/>
        <example type="untouched">Filozof myśli.</example>
        <example type="ambiguous" inputform="myśli[myśl/subst:pl:acc:f,myśl/subst:pl:gen:f,myśl/subst:pl:nom:f,myśl/subst:pl:voc:f,myśl/subst:sg:dat:f,myśl/subst:sg:gen:f,myśl/subst:sg:loc:f,myśl/subst:sg:voc:f,myśleć/verb:fin:sg:ter:imperf:nonrefl,myślić/verb:fin:sg:ter:imperf:nonrefl]"
                 outputform="myśli[myśl/subst:sg:gen:f]">Łączyło je samo tylko czyste uczucie i porozumienie <marker>myśli</marker>.</example>
    </rule>

    <rule id="n2_mysla" name="gerundium wymagające narzędnika + myślą => myśl w narzędniku">
        <pattern>
            <token postag="ger.*" postag_regexp="yes" inflected="yes" regexp="yes">&verb_obj_inst;</token>
            <marker><token>myślą</token></marker>
        </pattern>
        <disambig postag="subst:sg:inst:f"/>
    </rule>
    <rule id="ger_refl_mysla" name="gerundium wymagające narzędnika, zwrotne + się + myślą => myśl w narzędniku">
        <pattern>
            <token postag="ger.*:refl(\.nonrefl)?" postag_regexp="yes" inflected="yes" regexp="yes">&verb_obj_inst;</token>
            <token>się</token>
            <marker><token>myślą</token></marker>
        </pattern>
        <disambig postag="subst:sg:inst:f"/>
    </rule>


    <rulegroup id="JE_JESC" name="„je” jako forma „jeść”">
    <rule>
        <pattern>
            <token regexp="yes">zupę|danie|pizzę|mięso|loda</token>
            <marker>
                <token>je</token>
            </marker>
        </pattern>
        <disambig postag="verb:fin:sg:ter:imperf:refl.nonrefl"></disambig>
    </rule>
    <rule>
        <pattern>
            <token postag="subst:sg.*nom.*" postag_regexp="yes"><exception postag="subst.*" postag_regexp="yes" negate_pos="yes"/></token>
            <token postag="verb:fin:sg:ter:imperf:refl.nonrefl">je</token>
            <token postag="subst.*acc.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="je[jeść/verb:fin:sg:ter:imperf:refl.nonrefl,on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:npraep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:npraep]"
                 outputform="je[jeść/verb:fin:sg:ter:imperf:refl.nonrefl]">Krowa <marker>je</marker> trawę.</example>
        <example type="untouched">On je zabierze do kina.</example>
    </rule>
    </rulegroup>

    <rulegroup id="JE_PPRON" name="„je” jako zaimek">
        <rule>
            <pattern>
                <token postag="verb.*" postag_regexp="yes"/>
                <marker><token>je</token></marker>
            </pattern>
            <disambig action="filter" postag="ppron3.*"></disambig>
            <example type="ambiguous" inputform="je[jeść/verb:fin:sg:ter:imperf:refl.nonrefl,on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:npraep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:npraep]"
                     outputform="je[on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:npraep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:npraep]">Łączy <marker>je</marker> postać tajemniczej Melindy.</example>
        </rule>
        <rule>
            <pattern>
                <marker><token>je</token></marker>
                <token postag="verb.*" postag_regexp="yes"/>
            </pattern>
            <disambig action="filter" postag="ppron3.*"/>
            <example type="ambiguous" inputform="je[jeść/verb:fin:sg:ter:imperf:refl.nonrefl,on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:npraep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:npraep]"
                     outputform="je[on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:npraep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:npraep]">On <marker>je</marker> lubi.</example>
        </rule>
    </rulegroup>

    <rule id="DOSYC" name="dosyć nie jako dosycić">
        <pattern>
            <marker>
                <token postag="qub">dosyć</token>
                <token postag="(?:adj|ger|subst).*gen.*" postag_regexp="yes"/>
            </marker>
        </pattern>
        <disambig action="filterall" postag=".*gen.*"/>
        <example type="untouched">Mam wiele do zrobienia.</example>
        <example type="ambiguous" inputform="ludzi[człowiek/subst:pl:acc:m1,człowiek/subst:pl:gen:m1,ludzie/subst:pl:acc:p1,ludzie/subst:pl:gen:p1]" outputform="ludzi[człowiek/subst:pl:gen:m1,ludzie/subst:pl:gen:p1]">Tu było dosyć <marker>ludzi</marker>.</example>
    </rule>
    
    <rule id="STALY_ADJ" name="stały wzrost itp.">
        <pattern>
            <unify>
                <feature id="case"><type id="nom"/><type id="acc"/><type id="voc"/></feature>
                <feature id="number"><type id="sg"/></feature>
                <feature id="gender"><type id="m1"></type><type id="m2"/><type id="m3"/></feature>
                <token>stały</token>
                <token postag="subst.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="stały[stać/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:nonrefl,stać/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:refl,stały/adj:sg:acc:m3:pos,stały/adj:sg:nom.voc:m1.m2.m3:pos]"
                 outputform="stały[stały/adj:sg:acc:m3:pos,stały/adj:sg:nom.voc:m1.m2.m3:pos]">Trzeba jednak stwierdzić <marker>stały</marker> wzrost zainteresowania radzieckich naukowców omawianą problematyką.</example>
        <example type="untouched">Tam stały czołgi.</example>
    </rule>

    <rule id="LACZY_NIZ_DZIELI_1" name="łączy jako czasownik">
        <pattern>
            <marker>
            <token postag="verb:fin:sg:ter:imperf:refl.nonrefl">łączy</token>
            <token>niż</token>
            <token postag="verb:fin:sg:ter:imperf:refl.nonrefl">dzieli</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="LACZY_NIZ_DZIELI_2" name="łączy jako czasownik">
        <pattern>
            <marker>
                <token postag="verb:fin:sg:ter:imperf:refl.nonrefl">łączy</token>
                <token>,</token>
                <token>niż</token>
                <token postag="verb:fin:sg:ter:imperf:refl.nonrefl">dzieli</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rulegroup id="NUM_CONGR" name="liczebnik ze związkiem zgody">
        <rule>
            <pattern>
                <unify>
                    <feature id="case"/><feature id="number"/><feature id="gender"/>
                    <token postag="num.*:congr" postag_regexp="yes"/>
                    <token postag="num.*:congr" postag_regexp="yes"/>
                    <token postag="num.*:congr" postag_regexp="yes"/>
                    <token postag="(subst|adj|pact|ppas).*" postag_regexp="yes"/>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">Chyba nie chcesz, żebyśmy się rozdziały przy ludziach?</example>
            <example type="ambiguous" inputform="mężczyzn[mężczyzna/subst:pl:acc:m1,mężczyzna/subst:pl:gen:m1]"
                     outputform="mężczyzn[mężczyzna/subst:pl:gen:m1]">Stu czterdziestu ośmiu <marker>mężczyzn</marker> jadło lody.</example>
        </rule>
        <rule>
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"/>
                <token postag="num.*:congr" postag_regexp="yes"/>
                <token postag="num.*:congr" postag_regexp="yes"/>
                <token postag="(subst|adj|pact|ppas).*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Chyba nie chcesz, żebyśmy się rozdziały przy ludziach?</example>
        <example type="ambiguous" inputform="mężczyzn[mężczyzna/subst:pl:acc:m1,mężczyzna/subst:pl:gen:m1]"
                 outputform="mężczyzn[mężczyzna/subst:pl:gen:m1]">Czterdziestu ośmiu <marker>mężczyzn</marker> jadło lody.</example>
        </rule>
        <rule>
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"/>
                <token postag="num.*:congr" postag_regexp="yes"/>
                <token postag="(subst|adj|pact|ppas).*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Chyba nie chcesz, żebyśmy się rozdziały przy ludziach?</example>
        <example type="ambiguous" inputform="rozdziały[rozdziać/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:refl.nonrefl,rozdział/subst:pl:acc:m3,rozdział/subst:pl:nom:m3,rozdział/subst:pl:voc:m3]"
                 outputform="rozdziały[rozdział/subst:pl:acc:m3,rozdział/subst:pl:nom:m3,rozdział/subst:pl:voc:m3]">Dwa <marker>rozdziały</marker> książki.</example>
        </rule>
</rulegroup>

    <rule id="NUM_SUBST_GEN" name="gen, też sg po num:rec">
        <pattern>
            <marker>
                <token postag="num.*:rec|subst:.*" postag_regexp="yes" regexp="yes">dużo|mało|mnóstwo|parę|trochę|część|niewiele|wiele|kilka|ćwierć|para</token>
                <token postag="(?:adj|ger|subst).*gen.*" postag_regexp="yes"/>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Mam wiele do zrobienia.</example>
        <example type="ambiguous" inputform="ludzi[człowiek/subst:pl:acc:m1,człowiek/subst:pl:gen:m1,ludzie/subst:pl:acc:p1,ludzie/subst:pl:gen:p1]" outputform="ludzi[człowiek/subst:pl:gen:m1,ludzie/subst:pl:gen:p1]">Tu było mnóstwo <marker>ludzi</marker>.</example>
    </rule>

    <rule id="NUM_REC" name="gen pl po liczebniku bez związku zgody">
        <pattern>
            <marker>
                <token postag="num.*:rec" postag_regexp="yes"/>
                <token postag="(?:adj|ger|subst):pl.*gen.*" postag_regexp="yes">
                        <exception regexp="yes">wat|gram|amper|kilowat|kilogram|kiloamper|wolt|kilowolt|złoty|kilometr|metr|centymetr</exception>
                </token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Mam wiele do zrobienia.</example>
        <example type="ambiguous" inputform="ludzi[człowiek/subst:pl:acc:m1,człowiek/subst:pl:gen:m1,ludzie/subst:pl:acc:p1,ludzie/subst:pl:gen:p1]" outputform="ludzi[człowiek/subst:pl:gen:m1,ludzie/subst:pl:gen:p1]">Tu było tysiąc <marker>ludzi</marker>.</example>
    </rule>

    <rule id="SPORO_NUM_GEN" name="gen po sporo/num">
        <pattern>
            <marker>
                <token postag="num.*" postag_regexp="yes">sporo</token>
                <token postag="(?:adj|ger|subst).*gen.*" postag_regexp="yes"/>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="NAPOJ_WYROB" name="napój/wyrób + przymiotnik -> rzeczownik">
        <pattern>
            <marker>
            <unify>
                <feature id="number"><type id="sg"/></feature>
                <feature id="gender"><type id="m3"/></feature><feature id="case"/>
                    <token regexp="yes">napój|wyrób</token>
                     <token postag="(adj|pact).*" postag_regexp="yes"/>
            </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Napój swojego konia!</example>
        <example type="ambiguous" inputform="Napój[napoić/verb:impt:sg:sec:perf:refl.nonrefl,napój/subst:sg:acc:m3,napój/subst:sg:nom:m3]" outputform="Napój[napój/subst:sg:acc:m3,napój/subst:sg:nom:m3]"><marker>Napój</marker> miłosny</example>
    </rule>


    <rule id="na_tyle" name="na tyle + adj|adv -> adv">
        <pattern>
            <token>na</token>
            <marker><token postag="adv">tyle</token></marker>
            <token postag="ad[jv].*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="adv"/>
        <example type="ambiguous" inputform="tyle[tyle/adv,tyle/num:pl:nom.acc.voc:m2.m3.f.n1.n2.p1.p2:rec,tyle/num:pl:nom.acc:m1.m2.m3.f.n1.n2.p1.p2:rec,tyli/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,tyli/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,tyli/adj:sg:acc:n1.n2:pos,tyli/adj:sg:nom.voc:n1.n2:pos,tył/subst:sg:loc:m3,tył/subst:sg:voc:m3]"
                 outputform="tyle[tyle/adv]">Gdy Mowgli był już na <marker>tyle</marker> silny, by móc znosić szorstką nieco musztrę...</example>
    </rule>

    <rule id="na_tyle_tyli" name="tyle to nie tyli">
        <pattern>
            <token postag="prep:acc">na</token>
            <token postag="adv|num.*" postag_regexp="yes">tyle</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <!--
    <rule id="na_tyle_num" name="na tyle + subst -> num">
        <pattern>
            <token>na</token>
            <unify>
                <feature id="gender"/><feature id="number"/>
                <marker>
                    <token>tyle</token>
                    <token postag="subst:pl.*gen.*" postag_regexp="yes"></token>
                </marker>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="tyle[tyle/adv,tyle/num:pl:nom.acc.voc:m2.m3.f.n1.n2.p1.p2:rec,tyle/num:pl:nom.acc:m1.m2.m3.f.n1.n2.p1.p2:rec]"
                 outputform="tyle[tyle/num:pl:nom.acc.voc:m2.m3.f.n1.n2.p1.p2:rec,tyle/num:pl:nom.acc:m1.m2.m3.f.n1.n2.p1.p2:rec]">Kleks radzi sobie z gotowaniem na <marker>tyle</marker> osób.</example>
    </rule>
    -->

    <rule id="prep_gen_co" name="co to nie genetiwus po przyimku">
        <pattern>
            <token postag="prep:gen.*" postag_regexp="yes"/>
            <marker><token postag="subst:sg:gen:n2">co</token></marker>
        </pattern>
        <disambig action="remove" postag="subst:sg:gen:n2"/>
    </rule>

    <rulegroup name="Przyimek z rzeczownikiem, poprzedzony zaimkiem w funkcji dzierżawczej" id="PREP_PPRON_SUBST"> <!-- z zaimkiem w środku -->
        <rule>
            <pattern>
                <unify> <feature id="case"/>
                    <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*" negate_pos="yes" postag_regexp="yes"/><exception>co</exception></token>
                    <unify-ignore>
                        <token regexp="yes">jego|ich|jej</token>
                    </unify-ignore>
                    <token postag="(?:adj|depr|ger|num|subst|ppas|pact):.*" postag_regexp="yes"><exception>co</exception><exception postag="qub"/></token>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">Tu mamy piękny przykład.</example>
            <example type="untouched">Łaciny używamy na co dzień.</example>
            <example type="ambiguous" inputform="samoloty[samolot/subst:pl:acc:m3,samolot/subst:pl:nom:m3,samolot/subst:pl:voc:m3]"
                     outputform="samoloty[samolot/subst:pl:acc:m3]">Patrzę na jej <marker>samoloty</marker>.</example>
        </rule>
        <rule>
            <pattern>
                <unify> <feature id="case"/>
                    <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*" negate_pos="yes" postag_regexp="yes"/><exception>co</exception></token>
                    <unify-ignore>
                        <marker><token regexp="yes">jego|ich|jej</token></marker>
                    </unify-ignore>
                    <token postag="(?:adj|depr|ger|num|subst|ppas|pact):.*" postag_regexp="yes"><exception>co</exception><exception postag="qub"/></token>
                </unify>
            </pattern>
            <disambig action="filter" postag="ppron.*:gen:.*"/>
            <example type="ambiguous" inputform="jego[on/ppron3:sg:acc:m1.m2.m3:ter:akc:npraep,on/ppron3:sg:gen:m1.m2.m3:ter:akc:npraep,on/ppron3:sg:gen:n1.n2:ter:akc:npraep]"
                     outputform="jego[on/ppron3:sg:gen:m1.m2.m3:ter:akc:npraep,on/ppron3:sg:gen:n1.n2:ter:akc:npraep]">Patrzę na <marker>jego</marker> samoloty.</example>
        </rule>
    </rulegroup>


    <rulegroup name="prep + czasownik -> ~ czasownik" id="prep_verb">
        <!--  przyimki zawsze z tym samym przypadkiem --> 
        <rule>
            <pattern>
                <token postag="prep:[^\.]+" postag_regexp="yes"><exception>co</exception><exception>a</exception><exception>jak</exception></token>
                <marker>
                    <and>
                        <token><match no="0" postag_regexp="yes" postag="prep:(.*)" postag_replace="(ad[jv]|subst|ppron):[^ ]*$1[^ ]*" setpos="yes"/></token>
                        <token postag="verb.*" postag_regexp="yes"/>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="adj.*|adv.*|subst.*|ppron.*"/>
            <example type="untouched">Tu mamy piękny przykład sztuki barokowej.</example>
            <example type="untouched">A ma o czym marzyć.</example>
            <example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f,mieć/verb:fin:pl:pri:imperf:refl.nonrefl]" outputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]">Spotykaliśmy się u <marker>mamy</marker>.</example>
        </rule>

       <rule>
       	<pattern>
       		<unify>
       			<feature id="case"/>
       			<token postag="prep:.*" postag_regexp="yes"><exception postag="prep.*|adv" negate_pos="yes" postag_regexp="yes"/></token>
                <token postag_regexp="yes" postag="(adj|subst|ppron).*"><exception>pewne</exception></token>
       		</unify>
       	</pattern>
       	<disambig action="unify"/>
       	<example type="untouched">Oni mną papiery.</example>
       	<example type="ambiguous" inputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri,miąć/verb:fin:pl:ter:imperf:refl.nonrefl]" outputform="mną[ja/ppron12:sg:inst:m1.m2.m3.f.n1.n2:pri]">Oczywiście, że ze <marker>mną</marker>!</example>
           <example type="ambiguous" inputform="chęci[chęcić/verb:fin:sg:ter:imperf:refl.nonrefl,chęć/subst:pl:acc:f,chęć/subst:pl:gen:f,chęć/subst:pl:nom:f,chęć/subst:pl:voc:f,chęć/subst:sg:dat:f,chęć/subst:sg:gen:f,chęć/subst:sg:loc:f,chęć/subst:sg:voc:f]"
                    outputform="chęci[chęć/subst:sg:dat:f]">Żeglarze biegną w stronę wiatru i wbrew <marker>chęci</marker> nawracają wstecz.</example>
       </rule>
    </rulegroup>

    <rule id="A_NON_PREP" name="a + czasownik -> nie przyimek">
        <pattern>
            <marker>
                <token postag="conj">a</token>
            </marker>
            <token postag="(?:verb|pcon|pact).*" postag_regexp="yes"/>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="MNIE" name="mnie to nie miąć; bardzo ostra reguła, ale praktycznie nie zdarza się w uzusie...">
        <pattern>
            <marker><token postag="verb:fin:sg:ter:imperf:refl.nonrefl">mnie</token></marker>
        </pattern>
        <disambig action="filter" postag="ppron12.*"/>
    </rule>
    
    <rule id="rozmaicie" name="rozmaicie to przysłówek; reguła bezwarunkowa, ale uzus naprawdę uzasadnia">
        <pattern>
            <marker><token>rozmaicie</token></marker>
        </pattern>
        <disambig postag="adv:pos"/>
    </rule>

    <rule id="stawac_nonrefl" name="stawać niezwrotne">
        <pattern>
            <marker><token regexp="yes" inflected="yes">stać|stawać<exception>stanie</exception></token></marker>
            <token regexp="yes">tyłem|profilem|kępami|bokiem|twarzą|otworem|okoniem|mi|go|we|rzędem|rzędami|pustkami|godzinami|kwadransami|kwaterą</token>
        </pattern>
        <disambig action="filter" postag=".*nonrefl.*"/>
        <example type="untouched">Karol, który stał się aktorem.</example>
        <example type="ambiguous" inputform="stały[stać/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:nonrefl,stać/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:refl,stały/adj:sg:acc:m3:pos,stały/adj:sg:nom.voc:m1.m2.m3:pos]"
                 outputform="stały[stać/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:nonrefl]">Piwnice <marker>stały</marker> pustkami.</example>
    </rule>


    <rule id="bardzo_wolno" name="bardzo wolno to nie predykatyw">
        <pattern>
            <token>bardzo</token>
            <marker><token>wolno</token></marker>
        </pattern>
        <disambig postag="adv:pos"/>
        <example type="untouched">Co wolno wojewodzie, to nie tobie, dziki smrodzie!</example>
        <example type="ambiguous" inputform="wolno[wolno/adv:pos,wolno/pred]"
                 outputform="wolno[wolno/adv:pos]">Trzeba się tam posuwać bardzo <marker>wolno</marker>.</example>
    </rule>

    <rule id="PO_ADJP" name="po polsku">
        <pattern>
            <token>po</token>
            <token postag="adjp"/>
        </pattern>
        <disambig postag="prep:loc"/>
    </rule>

    <rule id="OBOK_ADV" name="eliminacja obok:prep">
        <pattern>
            <marker>
                <token regexp="yes">obok|wokół</token>
            </marker>
            <token regexp="yes">[,.;]</token>
        </pattern>
        <disambig postag="adv"/>
    </rule>

    <rulegroup id="MAJA_ONE_1" name="czasownik pl + one - zaimek">
        <rule>
            <pattern>
                <token postag="verb.*pl.*:ter.*" postag_regexp="yes"/>
                <token postag="ppron3:pl:nom:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep.npraep">one</token>
            </pattern>
            <disambig action="filterall"/>
            <example type="ambiguous" inputform="one[on/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,on/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,on/ppron3:pl:nom:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep.npraep]"
                     outputform="one[on/ppron3:pl:nom:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep.npraep]">Mają <marker>one</marker> niemałe znaczenie.
            </example>
        </rule>
        <rule>
            <pattern>
                <token postag="ppron3:pl:nom:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep.npraep">one</token>
                <token postag="verb.*pl.*:ter.*" postag_regexp="yes"/>
            </pattern>
            <disambig action="filterall"/>
        </rule>
    </rulegroup>

    <rule id="verb_adjverb_adj" name="czasownik + czasownik/adv -> adv">
        <pattern>
            <token postag_regexp="yes" postag="verb:.*"/>
            <marker>
                <and>
                    <token postag="verb.*" postag_regexp="yes"><exception postag_regexp="yes" postag="(?:ger|prep).*"/><exception postag="verb.*inf" postag_regexp="yes"/><exception>wręcz</exception></token>
                    <token postag="adv.*" postag_regexp="yes"/>
                </and>
            </marker>
        </pattern>
        <disambig action="filter" postag="adv.*"/>
        <example type="ambiguous" inputform="śmiało[śmiać/verb:praet:sg:n1.n2:ter:imperf:refl,śmiało/adv:pos,śmieć/verb:praet:sg:n1.n2:ter:imperf:nonrefl]"
                 outputform="śmiało[śmiało/adv:pos]">Chodź <marker>śmiało</marker>.</example>
        <example type="untouched">Zaczęła wręcz nawoływać do utworzenia wspólnej listy.</example>
    </rule>

    <rule name="Warsz" id="IMIE_WARSZ">
        <pattern case_sensitive="yes">
            <token inflected="yes">imię</token>
            <marker><token>Warsz</token></marker>
        </pattern>
        <disambig action="replace"><wd lemma="Warsz" pos="subst:sg:nom.voc:m1"/></disambig>
    </rule>

    <rule id="PO_DZIS_DZIEN" name="po dziś dzień - wersja z ręcznie anotowanego NKJP">
        <pattern>
            <token postag="prep:acc">po</token>
            <token postag="subst:sg:acc:n2">dziś</token>
            <token postag="subst:sg:acc:m3">dzień</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="PREP_LADA_QUB" name="lada jako kublik">
        <pattern>
            <token postag="prep.*" postag_regexp="yes"><exception postag="prep:nom.*" postag_regexp="yes"/></token>
            <marker>
                <token>lada</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="lada[lada/prep:nom,lada/qub,lada/subst:sg:nom:f]"
                 outputform="lada[lada/qub]">Rozmawiali o <marker>lada</marker> błahostce.</example>
    </rule>

    <rule id="LADA_CO" name="lada co jako kublik">
        <pattern>
            <token postag="qub">lada</token>
            <token postag="subst.*" postag_regexp="yes" inflected="yes">co</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="lada[lada/prep:nom,lada/qub,lada/subst:sg:nom:f]"
                 outputform="lada[lada/qub]">Zajmują się <marker>lada</marker> czym.</example>
    </rule>

    <rule id="NIE_LADA" name="nie lada jako kublik">
        <pattern>
            <token postag="qub">nie</token>
            <token postag="qub">lada</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="SKLADAC_DZIEKI" name="składać dzięki > nie prep">
        <pattern>
            <token inflected="yes">składać</token>
            <marker><token>dzięki</token></marker>
        </pattern>
        <disambig action="filter" postag="subst:pl:acc:p3"/>
    </rule>

    <rule id="BOGU_DZIEKI" name="Bogu dzięki > nie prep">
        <pattern case_sensitive="yes">
            <token skip="-1">Bogu</token>
            <marker><token>dzięki</token></marker>
        </pattern>
        <disambig action="filter" postag="subst:pl:nom:p3"/>
        <example type="ambiguous" outputform="dzięki[dzięki/subst:pl:nom:p3]" inputform="dzięki[dzięk/subst:pl:acc:m3,dzięk/subst:pl:nom:m3,dzięk/subst:pl:voc:m3,dzięka/subst:pl:acc:f,dzięka/subst:pl:nom:f,dzięka/subst:pl:voc:f,dzięka/subst:sg:gen:f,dzięki/prep:dat,dzięki/subst:pl:acc:p3,dzięki/subst:pl:nom:p3,dzięki/subst:pl:voc:p3]">Bogu Najwyższemu niechaj będą <marker>dzięki</marker>, że nas tu w łasce swojej raczył obrócić!</example>
    </rule>

    <rule id="DZIEKI_COMMA" name="dzięki + przecinek > nie prep">
        <pattern>
            <marker><token postag="prep:dat">dzięki</token></marker>
            <token regexp="yes">[:,;!]</token>
        </pattern>
        <disambig action="remove" postag="prep:dat"/>
    </rule>

    <rule id="ZONA_KAPITANA" name="żona kapitana > to nie nom.">
        <pattern>
            <token inflected="yes">żona</token>
            <marker>
                <token>kapitana</token>
            </marker>
        </pattern>
        <disambig postag="subst:sg:gen:m1"/>
        <example type="untouched">W porcie stoi kapitana.</example>
        <example type="ambiguous" inputform="kapitana[kapitan/subst:sg:acc:m1,kapitan/subst:sg:gen:m1,kapitana/subst:sg:nom:f]"
                 outputform="kapitana[kapitan/subst:sg:gen:m1]">Czy jest żoną <marker>kapitana</marker>?</example>
    </rule>

    <rule id="PRZYRODA_SINGULARE_TANTUM" name="Przyrody to raczej singulare">
        <pattern>
            <token>przyrody</token>
        </pattern>
        <disambig postag="subst:sg:gen:f"/>
        <example type="ambiguous" inputform="przyrody[przyroda/subst:pl:acc:f,przyroda/subst:pl:nom:f,przyroda/subst:pl:voc:f,przyroda/subst:sg:gen:f]"
                outputform="przyrody[przyroda/subst:sg:gen:f]">To pomnik <marker>przyrody</marker>.</example>
    </rule>

    <rule id="MIMO_ACC" name="Mimo z biernikiem">
        <pattern>
            <marker>
                <token regexp="yes">(?:po)?mimo</token>
            </marker>
            <token postag=".*acc.*" postag_regexp="yes"><exception postag=".*gen.*" postag_regexp="yes"></exception></token>
        </pattern>
        <disambig postag="prep:acc"/>
    </rule>

    <rule id="PO_NIESPODZIEWANIE" name="po niespodziewanie">
        <pattern>
            <token>po</token>
            <marker><token>niespodziewanie</token></marker>
        </pattern>
        <disambig postag="adv:pos"/>
        <example type="ambiguous" inputform="niespodziewanie[niespodziewanie/adv:pos,spodziewać/ger:sg:nom.acc:n2:imperf:neg:refl]"
                 outputform="niespodziewanie[niespodziewanie/adv:pos]">W lipcu 1940, po <marker>niespodziewanie</marker> łatwym zwycięstwie nad Francją...</example>
    </rule>

    <rulegroup name="Przyimek z rzeczownikiem" id="PREP_SUBST">
    <rule>
        <pattern>
            <unify> <feature id="case"/>
                <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*|burk" negate_pos="yes" postag_regexp="yes"/><exception>co</exception></token>
                <token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"><exception>co</exception><exception postag="qub"/></token>
            </unify>
        </pattern>
        <disambig action="unify"/>        
        <example type="untouched">Tu mamy piękny przykład.</example>
        <example type="untouched">Łaciny używamy na co dzień.</example>        
        <!-- example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]" outputform="mamy[mama/subst:sg:gen:f]">Idę do <marker>mamy</marker>.</example>  -->
    </rule>
    <rule>
        <pattern>
            <unify> <feature id="case"/>
                <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*|brev.*" negate_pos="yes" postag_regexp="yes"/><exception>co</exception></token>
                <token inflected="yes">to</token>
            </unify>
        </pattern>
        <disambig action="unify"></disambig>
        <example type="untouched">Tu mamy piękny przykład.</example>
        <example type="untouched">Łaciny używamy na co dzień.</example>
                        
        <!-- example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]" outputform="mamy[mama/subst:sg:gen:f]">Idę do <marker>mamy</marker>.</example>  -->
    </rule>
        <rule id="PREP_ADV_SUBST_2">
            <pattern>
                <unify> <feature id="case"/>
                    <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*" negate_pos="yes" postag_regexp="yes"/><exception>co</exception></token>
                    <unify-ignore><token postag="adv.*" postag_regexp="yes"/></unify-ignore>
                    <token postag="(adj|ppas|pact):.*" postag_regexp="yes"><exception>co</exception><exception postag="qub"/></token>
                    <token postag="(subst|ger|depr).*" postag_regexp="yes"/>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">Tu mamy piękny przykład.</example>
            <example type="untouched">Łaciny używamy na co dzień.</example>
            <example type="ambiguous" inputform="impertynencji[impertynencja/subst:pl:gen:f,impertynencja/subst:sg:dat:f,impertynencja/subst:sg:gen:f,impertynencja/subst:sg:loc:f,impertynencje/subst:pl:gen:p3]"
                     outputform="impertynencji[impertynencja/subst:pl:gen:f,impertynencja/subst:sg:gen:f,impertynencje/subst:pl:gen:p3]">Posunął się do daleko idącej <marker>impertynencji</marker>.</example>
            <!-- example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]" outputform="mamy[mama/subst:sg:gen:f]">Idę do <marker>mamy</marker>.</example>  -->
        </rule>
        <rule>
        <pattern>
            <unify> <feature id="case"/>
                <token regexp="yes" postag="prep.*" postag_regexp="yes">przeciw|poza|o?koło|za</token>
                <token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"><exception>co</exception><exception postag="qub"/></token>
            </unify>
        </pattern>
        <disambig action="unify"></disambig>
        <example type="untouched">Tu mamy piękny przykład.</example>
        <example type="untouched">Łaciny używamy na co dzień.</example>
        <example type="ambiguous" inputform="krzywdzie[krzywda/subst:sg:dat:f,krzywda/subst:sg:loc:f]" 
        	outputform="krzywdzie[krzywda/subst:sg:dat:f]">Występuję przeciw <marker>krzywdzie</marker>.</example>                
    </rule>    
    <rule>
    	<pattern>
    		<marker><token regexp="yes">jako?|a|niż|niczym</token></marker> <!-- jeśli a, jak, jako, niczym, niż nie występuje z mianownikiem, to nie jest przyimkiem -->
    		<token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"><exception postag=".*nom.*|conj|adv.*" postag_regexp="yes"></exception><exception regexp="yes">.*um</exception></token>
    	</pattern>
    	<disambig><match no="1" postag="^(?!prep:nom).*" postag_regexp="yes"></match></disambig> 
    	<example type="untouched">Mówię dziś jako rzecznik samorządu przedszkolnego.</example>
    	<example type="ambiguous" inputform="jako[jaka/subst:sg:voc:f,jako/adv,jako/conj,jako/prep:nom]" outputform="jako[jaka/subst:sg:voc:f,jako/adv,jako/conj]">Można to określić <marker>jako</marker> ewolucję.</example>
    </rule>
    <rule> <!-- złożone wyrażenie przyimkowe ze związkiem rządu: na mocy, na podstawie-->
            <pattern>
                <token>na</token>
                <token regexp="yes">mocy|podstawie|spodzie|działanie</token>
                <marker>
                    <token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"/>
                </marker>
            </pattern>
            <disambig action="filter" postag=".*gen.*"/>
            <example type="ambiguous" inputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:dat:f,stymulacja/subst:sg:gen:f,stymulacja/subst:sg:loc:f]"
                     outputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:gen:f]">Na mocy <marker>stymulacji</marker> cytokinowej następuje ich swoiste uczulenie.</example>
    </rule>
    <rule> <!-- złożone wyrażenia przyimkowe ze związkiem rządu: w razie, w wyniku, w rezultacie, w efekcie -->
        <pattern>
            <token>w</token>
            <token regexp="yes">braku|ciągu|czasie|efekcie|myśl|razie|rezultacie|trakcie|wyniku|wypadku|przypadku</token>
            <marker>
                <token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"/>
            </marker>
        </pattern>
        <disambig action="filter" postag=".*gen.*"/>
        <example type="ambiguous" inputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:dat:f,stymulacja/subst:sg:gen:f,stymulacja/subst:sg:loc:f]"
                 outputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:gen:f]">W wyniku <marker>stymulacji</marker> cytokinowej następuje ich swoiste uczulenie.</example>
    </rule>
    <rule> <!-- złożone wyrażenia przyimkowe ze związkiem rządu: z powodu, z przyczyny, z wyjątkiem, z pomocą -->
            <pattern>
                <token>z</token>
                <token regexp="yes">nadejściem|początkiem|pomocą|powodu|przyczyny|wyjątkiem</token>
                <marker>
                    <token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"/>
                </marker>
            </pattern>
            <disambig action="filter" postag=".*gen.*"/>
            <example type="ambiguous" inputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:dat:f,stymulacja/subst:sg:gen:f,stymulacja/subst:sg:loc:f]"
                     outputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:gen:f]">Z powodu <marker>stymulacji</marker> cytokinowej następuje ich swoiste uczulenie.</example>
    </rule>
     <rule> <!-- złożone wyrażenie przyimkowe ze związkiem rządu: za pomocą -->
      <pattern>
            <token>za</token>
                <token>pomocą</token>
                <marker>
                    <token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"/>
                </marker>
            </pattern>
            <disambig action="filter" postag=".*gen.*"/>
            <example type="ambiguous" inputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:dat:f,stymulacja/subst:sg:gen:f,stymulacja/subst:sg:loc:f]"
                     outputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:gen:f]">Za pomocą <marker>stymulacji</marker> cytokinowej następuje ich swoiste uczulenie.</example>
      </rule>
     <rule> <!-- złożone wyrażenia przyimkowe ze związkiem rządu: pod pretekstem, pod względem -->
            <pattern>
                <token>pod</token>
                <token regexp="yes">pretekstem|względem</token>
                <marker>
                    <token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"/>
                </marker>
            </pattern>
            <disambig action="filter" postag=".*gen.*"/>
            <example type="ambiguous" inputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:dat:f,stymulacja/subst:sg:gen:f,stymulacja/subst:sg:loc:f]"
                     outputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:gen:f]">Pod pretekstem <marker>stymulacji</marker> cytokinowej następuje ich swoiste uczulenie.</example>
     </rule>
        <rule> <!-- złożone wyrażenia przyimkowe ze związkiem rządu: à propos -->
            <pattern>
                <token regexp="yes">[aà]</token>
                <token>propos</token>
                <marker>
                    <token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*gen.*" postag_regexp="yes"/>
                </marker>
            </pattern>
            <disambig action="filter" postag=".*gen.*"/>
            <example type="ambiguous" inputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:dat:f,stymulacja/subst:sg:gen:f,stymulacja/subst:sg:loc:f]"
                     outputform="stymulacji[stymulacja/subst:pl:gen:f,stymulacja/subst:sg:gen:f]">Mówisz to a propos <marker>stymulacji</marker> cytokinowej?</example>
        </rule>
        <rule>
            <pattern>
                <token skip="-1" regexp="yes">(?:po)?między</token>
                <token>a</token>
                <marker><token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*inst.*" postag_regexp="yes"/>
                </marker>
            </pattern>
            <disambig action="filter" postag=".*inst.*"/>
            <example type="ambiguous" inputform="tym[ten/adj:pl:dat:m1.m2.m3.f.n1.n2.p1.p2.p3:pos,ten/adj:sg:inst:m1.m2.m3.n1.n2:pos,ten/adj:sg:loc:m1.m2.m3.n1.n2:pos,to/subst:sg:inst:n2,to/subst:sg:loc:n2,tym/adv,tym/conj]"
                     outputform="tym[ten/adj:sg:inst:m1.m2.m3.n1.n2:pos,to/subst:sg:inst:n2]">Jest to jeszcze gra pomiędzy nią a <marker>tym</marker> młodym i pięknym jak dziewczyna mędrcem.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token postag="prep:gen">śród</token>
                    <token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*gen.*" postag_regexp="yes"/>
                </marker>
            </pattern>
            <disambig action="filterall"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token postag="prep:gen">względem<exception scope="previous">pod</exception></token>
                    <token postag="(?:adj|depr|ger|num|subst|ppron.*|ppas|pact):.*gen.*" postag_regexp="yes"/>
                </marker>
            </pattern>
            <disambig action="filterall"/>
        </rule>
    </rulegroup>

    <rule id="ZA_POMOCA_M1_M2" name="za pomocą + m1/m2/m3 -> m2/m3">
        <pattern>
            <token>za</token>
            <token>pomocą</token>
            <marker>
                <and>
                    <token postag="subst:sg:gen:m1"/>
                    <token postag="subst:sg:gen:(m[23]|f|n[12])" postag_regexp="yes"/>
                </and>
            </marker>
        </pattern>
        <disambig action="remove"><wd pos="subst:sg:gen:m1"/></disambig>
        <example type="ambiguous" inputform="bambusa[bambus/subst:sg:gen:m1,bambus/subst:sg:gen:m2]" outputform="bambusa[bambus/subst:sg:gen:m2]">Kali przedstawił im za pomocą <marker>bambusa</marker> całą niewłaściwość ich postępku.</example>
        <example type="ambiguous" inputform="edytora[edytor/subst:sg:gen:m1,edytor/subst:sg:gen:m3]"
                 outputform="edytora[edytor/subst:sg:gen:m3]">Redaguję tekst za pomocą <marker>edytora</marker> tekstów.</example>
    </rule>

    <rule id="PREP_CD_ROKU_GEN" name="W xxx + 'roku' -> unify">
        <pattern>
            <marker>
                <unify><feature id="case"/>
                <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*" negate_pos="yes" postag_regexp="yes"/><exception>co</exception></token>
                    <unify-ignore>
                        <token regexp="yes">\d{1,4}</token>
                    </unify-ignore>
                <token inflected="yes">rok</token>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"></disambig>
        <example type="untouched">Byłem tam w tym roku.</example>
        <example type="ambiguous" inputform="roku[rok/subst:sg:gen:m3,rok/subst:sg:loc:m3,rok/subst:sg:voc:m3]"
                 outputform="roku[rok/subst:sg:loc:m3]">Byłem tam w 1994 <marker>roku</marker>.</example>
    </rule>

    <rule id="NP_GEN_teoria" name="teoria x-a">
        <pattern>
            <token inflected="yes" regexp="yes">teoria|proces|opis|obraz</token>
            <marker><token postag="subst:sg.*gen.*" postag_regexp="yes"/></marker>
        </pattern>
        <disambig action="filter" postag="subst:sg.*gen.*"/>
        <example type="ambiguous" inputform="względności[względność/subst:pl:acc:f,względność/subst:pl:gen:f,względność/subst:pl:nom:f,względność/subst:pl:voc:f,względność/subst:sg:dat:f,względność/subst:sg:gen:f,względność/subst:sg:loc:f,względność/subst:sg:voc:f]"
                 outputform="względności[względność/subst:sg:gen:f]">Nie lubię teorii <marker>względności</marker>.</example>
    </rule>

    <rule id="NP_GEN_skutek" name="skutek x-a">
        <pattern>
            <token inflected="yes" regexp="yes">przyczyna|skutek|efekt|owoc|powód|wynik</token>
            <marker>
                <and>
                    <token postag="subst:.*gen.*" postag_regexp="yes"/>
                    <token negate_pos="yes" postag="subst:.*gen.*" postag_regexp="yes"/>
                </and>
            </marker>
        </pattern>
        <disambig action="filter" postag="subst:.*gen.*"/>
        <example type="ambiguous" inputform="względności[względność/subst:pl:acc:f,względność/subst:pl:gen:f,względność/subst:pl:nom:f,względność/subst:pl:voc:f,względność/subst:sg:dat:f,względność/subst:sg:gen:f,względność/subst:sg:loc:f,względność/subst:sg:voc:f]"
                 outputform="względności[względność/subst:pl:gen:f,względność/subst:sg:gen:f]">To wszystko skutek <marker>względności</marker>.</example>
    </rule>

    <rule id="NP_GEN_teren" name="obszar x-a">
        <pattern>
            <token inflected="yes" regexp="yes">obszar|teren|region|strona<exception scope="previous" inflected="yes">ten</exception></token>
            <marker><token postag="subst:sg.*gen.*" postag_regexp="yes"/></marker>
        </pattern>
        <disambig action="filter" postag="subst:sg.*gen.*"/>
        <example type="ambiguous" inputform="Polski[Polska/subst:pl:acc:f,Polska/subst:pl:nom:f,Polska/subst:pl:voc:f,Polska/subst:sg:gen:f,Polski/subst:sg:nom:m1,Polski/subst:sg:voc:m1,polski/adj:sg:acc:m3:pos,polski/adj:sg:nom.voc:m1.m2.m3:pos,polski/subst:sg:acc:m3,polski/subst:sg:nom:m3,polski/subst:sg:voc:m3]"
                 outputform="Polski[Polska/subst:sg:gen:f]">Cały teren <marker>Polski</marker> narażony jest na powodzie.</example>
    </rule>


    <rule id="NP_GEN_architektura" name="architektura von Neumanna">
        <pattern>
            <token inflected="yes">architektura</token>
            <token>von</token>
            <marker><token>Neumanna</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:m1"/>
    </rule>

    <rule id="EDWARDA_GIERKA" name="Edwarda + nazwisko męskie -> imię męskie">
        <pattern case_sensitive="yes">
            <unify>
                <feature id="case"><type id="acc"/><type id="gen"/></feature>
                <feature id="number"><type id="sg"/></feature>
                <feature id="gender"><type id="m1"/></feature>
                <and>
                    <token postag="subst:sg:(gen|acc):m1" postag_regexp="yes" inflected="yes" regexp="yes">\p{Lu}\p{Ll}+</token>
                    <token postag="subst:sg:nom:f"/>
                </and>
                <token postag="subst:sg:(gen|acc):m1" postag_regexp="yes" inflected="yes" regexp="yes">\p{Lu}\p{Ll}+</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="Edwarda[Edward/subst:sg:acc:m1,Edward/subst:sg:gen:m1,Edwarda/subst:sg:nom:f]"
                 outputform="Edwarda[Edward/subst:sg:acc:m1,Edward/subst:sg:gen:m1]">Spotkałem <marker>Edwarda</marker> Gierka.</example>
        <example type="untouched">W roli głównej Ryszarda Hanin.</example>
    </rule>

    <rule id="NP_GEN_zona" name="żona/córka + genetiwus">
        <pattern>
            <token inflected="yes" regexp="yes">żona|córka</token>
            <marker><token postag="subst:sg:gen:m1"/></marker>
        </pattern>
        <disambig postag="subst:sg:gen:m1"/>
        <example type="ambiguous" inputform="Edwarda[Edward/subst:sg:acc:m1,Edward/subst:sg:gen:m1]"
                 outputform="Edwarda[Edward/subst:sg:gen:m1]">To była żona <marker>Edwarda</marker> Gierka.</example>
    </rule>

    <rule id="NIE_MA_GEN" name="nie ma + dopełniacz">
        <pattern>
            <token>nie</token>
            <marker>
                <token inflected="yes" postag="verb.*" postag_regexp="yes">mieć</token>
                <token postag=".*gen.*" postag_regexp="yes"><exception postag="verb:inf.*" postag_regexp="yes"/></token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="braterstwa[braterstwo/subst:pl:acc:n2,braterstwo/subst:pl:acc:p1,braterstwo/subst:pl:gen:p1,braterstwo/subst:pl:nom:n2,braterstwo/subst:pl:voc:n2,braterstwo/subst:sg:gen:n2]"
                 outputform="braterstwa[braterstwo/subst:pl:gen:p1,braterstwo/subst:sg:gen:n2]">Nie ma <marker>braterstwa</marker>.</example>
        <example type="untouched">Nic nie jest skrytego, co by nie miało być objawione.</example>
    </rule>

    <rule id="GEN_IMPS" name="Dopełniacz przed czasownikiem wymagającym dopełniacza w formie bezosobowej">
        <pattern>
            <marker><token postag=".*gen.*" postag_regexp="yes"/></marker>
            <token regexp="yes">używano|przestrzegano|wymagano</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Miejscami używano także krów.</example>
        <example type="ambiguous" inputform="Pieczęci[pieczęć/subst:pl:gen:f,pieczęć/subst:sg:dat:f,pieczęć/subst:sg:gen:f,pieczęć/subst:sg:loc:f,pieczęć/subst:sg:voc:f]"
                 outputform="Pieczęci[pieczęć/subst:pl:gen:f,pieczęć/subst:sg:gen:f]"><marker>Pieczęci</marker> używano dosyć często.</example>
    </rule>

    <rule id="ADV_COM_NIZ" name="niż po przysłówku w stopniu wyższym">
        <pattern>
            <token skip="3" postag="adj.*:com|adv:com" postag_regexp="yes"></token>
            <marker><token>niż</token></marker>
        </pattern>
        <disambig postag="conj"/>
    </rule>

    <rule id="tylko_ze" name="tylko że">
        <pattern>
            <marker><token postag="conj">tylko</token>
                <token postag="comp.*" postag_regexp="yes">że</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="tylko[tylko/conj,tylko/qub]"
                 outputform="tylko[tylko/conj]">Chętnie was odprowadzę, <marker>tylko</marker> że nie mam parasola.</example>
        <example type="untouched">Goście tylko co wyjechali.</example>
    </rule>

    <rule id="tyle_tylko_ze" name="tyle tylko, że">
        <pattern>
            <marker>
                <token postag="adv">tyle</token>
                <token postag="conj">tylko</token>
                <token min="0" max="1">,</token>
                <token postag="comp.*" postag_regexp="yes">że</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="tylko[tylko/conj,tylko/qub]"
                 outputform="tylko[tylko/conj]">Chętnie was odprowadzę, tyle <marker>tylko</marker>, że nie mam parasola.</example>
        <example type="untouched">Goście tylko co wyjechali.</example>
    </rule>

    <rule id="ZYCIE_SG_TANTUM" name="życie to prawie singulare tantum">
        <pattern>
            <and>
            <token inflected="yes" postag="subst:sg.*" postag_regexp="yes">życie</token>
            <token inflected="yes" postag="subst:pl.*" postag_regexp="yes">życie</token>
            </and>
        </pattern>
        <disambig action="remove" postag="subst:pl.*"></disambig>
        <example type="ambiguous" inputform="życia[życie/subst:pl:acc:n2,życie/subst:pl:nom:n2,życie/subst:pl:voc:n2,życie/subst:sg:gen:n2,żyć/ger:sg:gen:n2:imperf:aff:nonrefl]"
                 outputform="życia[życie/subst:sg:gen:n2,żyć/ger:sg:gen:n2:imperf:aff:nonrefl]">Nie miała słodkiego <marker>życia</marker>.</example>
    </rule>

    <rule id="PREP_GEN_SUBST_MAMY" name="mamy na końcu wypowiedzenia po wyrażeniu przyimkowym to zwykle rzeczownik">
        <pattern>
            <token postag="prep:gen.*" postag_regexp="yes"/>
            <token postag="subst.*gen.*" postag_regexp="yes"/>
            <marker><token>mamy</token></marker>
            <token postag_regexp="yes" postag="conj|interp:comma|SENT_END"><exception>zarówno</exception></token>
        </pattern>
        <disambig postag="subst:sg:gen:f"/>
        <example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f,mieć/verb:fin:pl:pri:imperf:refl.nonrefl]"
                 outputform="mamy[mama/subst:sg:gen:f]">To było za życia <marker>mamy</marker>.</example>
        <example type="untouched">Wśród autorów mamy wielu ważnych polityków.</example>
    </rule>

    <rule id="BRONIA" name="bronią + przymiotnik -> rzeczownik">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"/>
                <token>bronią</token>
                <token postag="(?:adj|pact|ppas|subst).*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="bronią[bronić/verb:fin:pl:ter:imperf:refl.nonrefl,broń/subst:sg:inst:f]"
                 outputform="bronią[broń/subst:sg:inst:f]">Chwalił się <marker>bronią</marker> asyryjską.</example>
    </rule>

    <rule id="SWOJA_INST" name="swoją > adj">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"/>
                <token>swoją</token>
                <token postag="(?:adj|pact|ppas|subst).*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="swoją[swoić/verb:fin:pl:ter:imperf:refl.nonrefl,swój/adj:sg:acc:f:pos,swój/adj:sg:inst:f:pos]"
                 outputform="swoją[swój/adj:sg:acc:f:pos]">Mam tu <marker>swoją</marker> teorię.</example>
    </rule>

    <rulegroup name="rzadkie rzeczowniki" id="subst_rarum">
        <rule>
            <pattern>
                <token regexp="yes">taka|taką</token>
            </pattern>
            <disambig action="filter" postag="adj.*"/>
        </rule>
        <rule>
            <pattern>
                <token regexp="yes">kłamie|czekał</token>
            </pattern>
            <disambig action="filter" postag="verb.*"/>
        </rule>
        <rule>
            <pattern>
                <token>nic</token>
            </pattern>
            <disambig action="remove"><wd lemma="nica" pos="subst:pl:gen:f">nic</wd></disambig>
        </rule>
        <rule>
            <pattern>
                <token>szczerze</token>
            </pattern>
            <disambig action="remove"><wd lemma="szczerza"/></disambig>
        </rule>
    </rulegroup>

    <rule id="LUFA_DZIALA" name="lufa działa -> subst">
        <pattern>
            <token inflected="yes">lufa</token>
            <marker><token>działa</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:n2"></disambig>
    </rule>

    <rule id="BO_DZIALA" name="bo/jak/czy działa -> verb">
        <pattern>
            <token regexp="yes">bo|czy|jak|gdzie|dopóki</token>
            <marker><token>działa</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="działo"/></disambig>
    </rule>

    <rule id="KLADZIE" name="kładzie to kłaść">
        <pattern>
            <token>kładzie</token>
        </pattern>
        <disambig postag="verb:fin:sg:ter:imperf:refl.nonrefl"/>
    </rule>

    <rule id="SWOJA_2" name="swoją to nie swoić">
        <pattern>
            <token postag="verb:fin:pl:ter:imperf:refl.nonrefl">swoją</token>
        </pattern>
        <disambig action="remove"><wd lemma="swoić"/></disambig>
    </rule>

    <rule id="OCZY" name="oczy to nie oczyć">
        <pattern>
            <token>oczy</token>
        </pattern>
        <disambig action="remove"><wd lemma="oczyć"/></disambig>
    </rule>

    <rule id="CHECI" name="chęci to nie chęcić">
        <pattern>
            <token>chęci</token>
        </pattern>
        <disambig action="remove"><wd lemma="chęcić"/></disambig>
    </rule>

    <rule id="JESIENIA" name="jesienią to nie jesienić">
        <pattern>
            <token>jesienią</token>
        </pattern>
        <disambig action="remove"><wd lemma="jesienić"/></disambig>
    </rule>

    <rule id="SLABI" name="słabi to nie słabić">
        <pattern>
            <token>słabi</token>
        </pattern>
        <disambig action="remove"><wd lemma="słabić"/></disambig>
    </rule>

    <rule id="BOZY" name="boży to nie bożyć">
        <pattern>
            <token>boży</token>
        </pattern>
        <disambig action="remove"><wd lemma="bożyć"/></disambig>
    </rule>

    <rule id="CISZY" name="ciszy to nie ciszyć">
        <pattern>
            <token>ciszy</token>
        </pattern>
        <disambig action="remove"><wd lemma="ciszyć"/></disambig>
    </rule>

    <rule id="SLONI" name="słoni to nie słonić">
        <pattern>
            <token>słoni</token>
        </pattern>
        <disambig action="remove"><wd lemma="słonić"/></disambig>
    </rule>

    <rule id="SMOKA" name="smoka to nie smokać">
        <pattern>
            <token>smoka</token>
        </pattern>
        <disambig action="remove"><wd lemma="smokać"/></disambig>
    </rule>

    <rule id="STALI" name="stali to nie stalić">
        <pattern>
            <token>stali</token>
        </pattern>
        <disambig action="remove"><wd lemma="stalić"/></disambig>
    </rule>

    <rule id="SWIEZY" name="świeży to nie świeżyć">
        <pattern>
            <token>świeży</token>
        </pattern>
        <disambig action="remove"><wd lemma="świeżyć"/></disambig>
    </rule>

    <rule id="BOLI" name='boli to nie bola'>
        <pattern>
            <token>boli</token>
        </pattern>
        <disambig action="remove"><wd lemma="bola"/></disambig>
    </rule>

    <rule id="BRACI" name="braci to nie bracić">
        <pattern>
            <token>braci</token>
        </pattern>
        <disambig action="remove"><wd lemma="bracić"/></disambig>
    </rule>

    <rule id="BRUDNI" name="brudni to nie brudnić">
        <pattern>
            <token>brudni</token>
        </pattern>
        <disambig action="remove"><wd lemma="brudnić"/></disambig>
    </rule>

    <rule id="CHEC" name="chęć to nie chęcić">
        <pattern>
            <token>chęć</token>
        </pattern>
        <disambig action="remove"><wd lemma="chęcić"/></disambig>
    </rule>

    <rule id="CIESNI" name="cieśni to nie cieśnić">
        <pattern>
            <marker><token>cieśni</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="cieśnić"/></disambig>
    </rule>

    <rule id="CIEZEJ" name="ciężej to nie ciężeć">
        <pattern>
            <marker><token>ciężej</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="ciężeć"/></disambig>
    </rule>

    <rule id="DLUZEJ" name="dłużej to nie dłużeć">
        <pattern>
            <token>dłużej</token>
        </pattern>
        <disambig action="remove"><wd lemma="dłużeć"/></disambig>
    </rule>

    <rule id="DOMOWI" name="domowi to nie domowić">
        <pattern>
            <token>domowi</token>
        </pattern>
        <disambig action="remove"><wd lemma="domowić"/></disambig>
    </rule>

    <rule id="DOROSLA" name="osoba dorosła">
        <pattern>
            <token postag="subst:sg:nom:f">osoba</token>
            <token postag="adj:sg:nom.voc:f:pos">dorosła</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="DOSTAWA" name="dostawa to nie dostawać">
        <pattern>
            <token>dostawa</token>
        </pattern>
        <disambig action="remove"><wd lemma="dostawać"/></disambig>
    </rule>

    <rule id="DUZA" name="duża to nie dużać">
        <pattern>
            <token>duża</token>
        </pattern>
        <disambig action="remove"><wd lemma="dużać"/></disambig>
    </rule>

    <rule id="DUZE" name="duże to nie duha">
        <pattern>
            <token>duże</token>
        </pattern>
        <disambig action="remove"><wd lemma="duha"/></disambig>
    </rule>

    <rule id="FURMANI" name="furmani to nie furmanić">
        <pattern>
            <token>furmani</token>
        </pattern>
        <disambig action="remove"><wd lemma="furmanić"/></disambig>
    </rule>

    <rule id="GLEBI" name="głębi to nie głębić">
        <pattern>
            <token>głębi</token>
        </pattern>
        <disambig action="remove"><wd lemma="głębić"/></disambig>
    </rule>

    <rule id="GODNE" name="godne to nie „godne”, tylko „godny”">
        <pattern>
            <marker><token inflected="yes">godne</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="godne"/></disambig>
    </rule>

    <rule id="GOTOWI" name="gotowi to nie gotowić">
        <pattern>
            <token>gotowi</token>
        </pattern>
        <disambig action="remove"><wd lemma="gotowić"/></disambig>
    </rule>

    <rule id="JESIENI" name="jesieni to nie jesienić">
        <pattern>
            <token>jesieni</token>
        </pattern>
        <disambig action="remove"><wd lemma="jesienić"/></disambig>
    </rule>

    <rule id="KLESKA" name="klęska to nie klęskać">
        <pattern>
            <token>klęska</token>
        </pattern>
        <disambig action="remove"><wd lemma="klęskać"/></disambig>
    </rule>

    <rule id="KORALI" name="korali to nie koralić">
        <pattern>
            <token>korali</token>
        </pattern>
        <disambig action="remove"><wd lemma="koralić"/></disambig>
    </rule>

    <rule id="KALI" name="Kali to nie kalić">
        <pattern case_sensitive="yes">
            <token>Kali</token>
        </pattern>
        <disambig action="remove"><wd lemma="kalić"/></disambig>
    </rule>

    <rule id="SKALI" name="skali to skalić">
        <pattern>
            <marker><token>skali</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="skalić"/></disambig>
    </rule>

    <rule id="KREWNI" name="krewni to nie krewnić">
        <pattern>
            <token>krewni</token>
        </pattern>
        <disambig action="remove"><wd lemma="krewnić"/></disambig>
    </rule>

    <rule id="KRWAWE" name="krwawe to nie rzeczownik">
        <pattern>
            <marker><token inflected="yes">krwawe</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="krwawe"/></disambig>
    </rule>

    <rule id="KULA" name="kula to nie kulać">
        <pattern>
            <token>kula</token>
        </pattern>
        <disambig action="remove"><wd lemma="kulać"/></disambig>
    </rule>

    <rule id="MAJ" name="maj to nie maić">
        <pattern>
            <token>maj</token>
        </pattern>
        <disambig action="remove"><wd lemma="maić"/></disambig>
    </rule>

    <rule id="MILI" name="mili to nie milić">
        <pattern>
            <marker><token>mili</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="milić"/></disambig>
    </rule>

    <rule id="MLODZI" name="młodzi to nie młodzić">
        <pattern>
            <token>młodzi</token>
        </pattern>
        <disambig action="remove"><wd lemma="młodzić"/></disambig>
    </rule>

    <rule id="MOCNIEJ" name="mocniej to nie mocnieć">
        <pattern>
            <marker><token>mocniej</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="mocnieć"/></disambig>
    </rule>

    <rule id="MUSI" name="musi to nie muszy">
        <pattern>
            <marker><token>musi</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="muszy"/></disambig>
    </rule>

    <rule id="MUSZE" name="muszę to nie musza">
        <pattern>
            <marker><token>muszę</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="musza"/></disambig>
    </rule>

    <rule id="NACZYN" name="naczyń to nie czasownik">
        <pattern>
            <token>naczyń</token>
        </pattern>
        <disambig action="remove"><wd lemma="naczynić"/></disambig>
    </rule>

    <rule id="NIKCZEMNI" name="nikczemni to nie nikczemnić">
        <pattern>
            <token>nikczemni</token>
        </pattern>
        <disambig action="remove"><wd lemma="nikczemnić"/></disambig>
    </rule>

    <rule id="NIZ" name="niż to nie nizać ani niżyć">
        <pattern>
            <token>niż</token>
        </pattern>
        <disambig action="remove" postag="verb.*"/>
    </rule>

    <rule id="OGNI" name="ogni to nie ognić">
        <pattern>
            <marker><token>ogni</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="ognić"/></disambig>
    </rule>

    <rule id="OGNIWA" name="ogniwa to nie ogniwać">
        <pattern>
            <token>ogniwa</token>
        </pattern>
        <disambig action="remove"><wd lemma="ogniwać"/></disambig>
    </rule>

    <rule id="PACA" name="Paca to nie pacać">
        <pattern case_sensitive="yes">
            <token>Paca</token>
        </pattern>
        <disambig action="remove"><wd lemma="pacać"/></disambig>
    </rule>

    <rule id="PAPA" name="papa to nie papać">
        <pattern>
            <token>papa</token>
        </pattern>
        <disambig action="remove"><wd lemma="papać"/></disambig>
    </rule>

    <rule id="PASTERZY" name="pasterzy to nie pasterzyć">
        <pattern>
            <token>pasterzy</token>
        </pattern>
        <disambig action="remove"><wd lemma="pasterzyć"/></disambig>
    </rule>

    <rule id="PATRZY" name="patrzy to nie pater">
        <pattern>
            <token>patrzy</token>
        </pattern>
        <disambig action="remove"><wd lemma="pater"/></disambig>
    </rule>

    <rule id="PLOMIENI" name="płomieni to nie płomienić">
        <pattern>
            <token>płomieni</token>
        </pattern>
        <disambig action="remove"><wd lemma="płomienić"/></disambig>
    </rule>

    <rule id="PODZIW" name="podziw to nie podziwić">
        <pattern>
            <token>podziw</token>
        </pattern>
        <disambig action="remove"><wd lemma="podziwić"/></disambig>
    </rule>

    <rule id="PORECZY_SCHODOW" name="poręczy schodów to nie poręczyć">
        <pattern>
            <marker><token>poręczy</token></marker>
            <token>schodów</token>
        </pattern>
        <disambig action="remove"><wd lemma="poręczyć"/></disambig>
    </rule>

    <rule id="PROMIENI" name="promieni to nie promienić">
        <pattern>
            <token>promieni</token>
        </pattern>
        <disambig action="remove"><wd lemma="promienić"/></disambig>
    </rule>

    <rule id="PROROCZY" name="proroczy to nie proroczyć">
        <pattern>
            <token>proroczy</token>
        </pattern>
        <disambig action="remove"><wd lemma="proroczyć"/></disambig>
    </rule>

    <rule id="PROZNIACZY" name="próźniaczy to nie próźniaczyć">
        <pattern>
            <token>próżniaczy</token>
        </pattern>
        <disambig action="remove"><wd lemma="próżniaczyć"/></disambig>
    </rule>

    <rule id="PRZECIW" name="przeciw to nie przeciwić">
        <pattern>
            <token>przeciw</token>
        </pattern>
        <disambig action="remove"><wd lemma="przeciwić"/></disambig>
    </rule>

    <rule id="PRZESTRZENI" name="przestrzeni(ą) to nie przestrzenić">
        <pattern>
            <token regexp="yes">przestrzenią?</token>
        </pattern>
        <disambig action="remove"><wd lemma="przestrzenić"/></disambig>
    </rule>

    <rule id="PRZETRWANIA" name="przetrwania to nie przetrwaniać">
        <pattern>
            <token>przetrwania</token>
        </pattern>
        <disambig action="remove"><wd lemma="przetrwaniać"/></disambig>
    </rule>

    <rule id="ROZSTROJ" name="rozstrój to nie rozstroić (AdamP)">
        <pattern>
            <token>rozstrój</token>
        </pattern>
        <disambig action="remove"><wd lemma="rozstroić"/></disambig>
    </rule>

    <rule id="SPOKOJ" name="spokój to nie spokoić">
        <pattern>
            <token>spokój</token>
        </pattern>
        <disambig action="remove"><wd lemma="spokoić"/></disambig>
    </rule>

    <rule id="SLOW" name="słów to nie słowić">
        <pattern>
            <token>słów</token>
        </pattern>
        <disambig action="remove"><wd lemma="słowić"/></disambig>
    </rule>

    <rule id="STARZY" name="starzy to nie starzyć">
        <pattern>
            <token>starzy</token>
        </pattern>
        <disambig action="remove"><wd lemma="starzyć"/></disambig>
    </rule>

    <rule id="STEPA" name="stępa to nie stępać">
        <pattern>
            <token>stępa</token>
        </pattern>
        <disambig action="remove"><wd lemma="stępać"/></disambig>
    </rule>

    <rule id="SZALBIERZY" name="szalbierzy to nie szalbierzyć">
        <pattern>
            <token>szalbierzy</token>
        </pattern>
        <disambig action="remove"><wd lemma="szalbierzyć"/></disambig>
    </rule>

    <rule id="SZLI" name="szli to nie szla">
        <pattern>
            <token>szli</token>
        </pattern>
        <disambig action="remove"><wd lemma="szla"/></disambig>
    </rule>

    <rule id="SWIETNI" name="świetni to nie świetnić">
        <pattern>
            <token>świetni</token>
        </pattern>
        <disambig action="remove"><wd lemma="świetnić"/></disambig>
    </rule>

    <rule id="TRUPIA" name="trupi(ą) to nie trupić">
        <pattern>
            <token regexp="yes">trupią?</token>
        </pattern>
        <disambig action="remove"><wd lemma="trupić"/></disambig>
    </rule>

    <rule id="UCZESTNICZY" name="uczestniczy to nie uczestniczy">
        <pattern>
            <token>uczestniczy</token>
        </pattern>
        <disambig action="remove"><wd lemma="uczestniczy"/></disambig>
    </rule>

    <rule id="UDZIAL" name="udział to nie udziać">
        <pattern>
            <token>udział</token>
        </pattern>
        <disambig action="remove"><wd pos="udziać"/></disambig>
    </rule>

    <rule id="UROCZA" name="uroczą/y to nie uroczyć">
        <pattern>
            <token regexp="yes">urocz[yą]</token>
        </pattern>
        <disambig action="remove"><wd lemma="uroczyć"/></disambig>
    </rule>

    <rule id="WALNIE_VERB" name="walnie pięścią to walnąć">
        <pattern>
            <marker><token>walnie</token></marker>
            <token>pięścią</token>
        </pattern>
        <disambig action="remove"><wd lemma="walnie"/></disambig>
    </rule>

    <rule id="WALNIE_ADV_1" name="walnie przyczynić">
        <pattern>
            <marker><token skip="2" postag="adv:pos">walnie</token></marker>
            <token inflected="yes">przyczynić</token>
        </pattern>
        <disambig action="remove"><wd lemma="walnąć"/></disambig>
    </rule>

    <rule id="WALNIE_ADV_2" name="przyczynić walnie">
        <pattern>
            <token skip="4" inflected="yes">przyczynić</token>
            <marker><token postag="adv:pos">walnie</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="walnąć"/></disambig>
        <example type="untouched">On walnie pięścią.</example>
        <example type="ambiguous" inputform="walnie[walnie/adv:pos,walnąć/verb:fin:sg:ter:perf:refl.nonrefl]" outputform="walnie[walnie/adv:pos]">Przyczynił się do tego <marker>walnie</marker> Jan Dzban.</example>
    </rule>

    <rule id="WARTA" name="warta to nie wartać">
        <pattern>
            <token>warta</token>
        </pattern>
        <disambig action="remove"><wd lemma="wartać"/></disambig>
    </rule>

    <rule id="WEGLI" name="węgli to nie węglić">
        <pattern>
            <token>węgli</token>
        </pattern>
        <disambig action="remove"><wd lemma="węglić"/></disambig>
    </rule>

    <rule id="WILGOCI" name="wilgoci to nie wilgocić">
        <pattern>
            <token>wilgoci</token>
        </pattern>
        <disambig action="remove"><wd lemma="wilgocić"/></disambig>
    </rule>

    <rule id="WISNIE" name="wiśnie to nie wisnąć">
        <pattern>
            <token>wiśnie</token>
        </pattern>
        <disambig action="remove"><wd lemma="wisnąć"/></disambig>
    </rule>

    <rule id="WOLNIEJ" name="wolniej to nie wolnieć">
        <pattern>
            <marker><token>wolniej</token></marker>
        </pattern>
        <disambig postag="adv:com"/>
    </rule>

    <rule id="WONIA" name="woni(ą) to nie wonić">
        <pattern>
            <token regexp="yes">wonią?</token>
        </pattern>
        <disambig action="remove"><wd lemma="wonić"/></disambig>
    </rule>

    <rule id="WYBRZEZA" name="wybrzeża to nie wybrzeżać">
        <pattern>
            <token>wybrzeża</token>
        </pattern>
        <disambig action="remove"><wd lemma="wybrzeżać"/></disambig>
    </rule>

    <rule id="ZAWISCI" name="zawiści to nie zawiścić">
        <pattern>
            <token>zawiści</token>
        </pattern>
        <disambig action="remove"><wd lemma="zawiścić"/></disambig>
    </rule>

    <rule id="ZNAJOMI" name="znajomi to nie znajomić">
        <pattern>
            <token>znajomi</token>
        </pattern>
        <disambig action="remove"><wd lemma="znajomić"/></disambig>
    </rule>

    <rule id="ZOLI" name="Zoli to nie zolić">
        <pattern case_sensitive="yes">
            <token>Zoli</token>
        </pattern>
        <disambig action="remove"><wd lemma="zolić"/></disambig>
    </rule>

    <rule id="ZOLCI" name="żółci to nie żółcić">
        <pattern>
            <token>żółci</token>
        </pattern>
        <disambig action="remove"><wd lemma="żółcić"/></disambig>
    </rule>

    <rule name="swój to nie swoić" id="SWOJ">
        <pattern>
            <token inflected="yes">swój</token>
        </pattern>
        <disambig action="remove"><wd lemma="swoić"/></disambig>
    </rule>

    <rule id="WIELKI_SWOJ_ADJ" name="wielki, swój, piękny, dobry to nie rzeczownik">
        <pattern>
            <token inflected="yes" regexp="yes">wielki|swój|dobry|piękny</token>
        </pattern>
        <disambig action="filter" postag="adj.*"/>
    </rule>

    <rule id="PELNIA_ZYCIA" name="pełnią życia/księżyca to rzeczownik">
        <pattern>
            <marker>
                <token postag="subst:sg:inst:f">pełnią</token>
                <token regexp="yes" postag=".*gen.*" postag_regexp="yes">życia|księżyca|szczęścia|władzy|praw</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="PELNIA_FUNKCJE" name="pełnią funkcję -> czasownik">
        <pattern>
            <marker>
                <token postag="verb:fin:pl:ter:imperf:refl.nonrefl">pełnią</token>
                <token regexp="yes" postag=".*acc|nom.*" postag_regexp="yes">funkcję|dyżur|rolę|wartę|służbę|misję|obowiązki</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="CO_TWIERDZA" name="jak/co twierdzą -> czasownik">
        <pattern>
            <token regexp="yes">co|jak</token>
            <marker><token>twierdzą</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="twierdza"/></disambig>
    </rule>

    <rule id="TWIERDZA_ZE" name="twierdzą, że -> czasownik">
        <pattern>
            <marker><token>twierdzą</token></marker>
            <token>,</token>
            <token regexp="yes">że|iż</token>
        </pattern>
        <disambig action="remove"><wd lemma="twierdza"/></disambig>
    </rule>

    <rule id="SWIECI" name="święci garnki -> nie czasownik">
        <pattern>
            <marker><token>święci</token></marker>
            <token>garnki</token>
            <token>lepią</token>
        </pattern>
        <disambig postag="subst:pl:nom:m1"/>
        <example type="ambiguous" inputform="święci[święcić/verb:fin:sg:ter:imperf:refl.nonrefl,święty/adj:pl:nom.voc:m1.p1:pos,święty/subst:pl:nom:m1,święty/subst:pl:voc:m1]"
                 outputform="święci[święty/subst:pl:nom:m1]">Nie <marker>święci</marker> garnki lepią.</example>

    </rule>

    <rule id="SWIECI_ADJ" name="świeci + rzeczownik => przymiotnik">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"/>
                <token postag="adj.*" postag_regexp="yes">święci</token>
                <token postag="subst.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Nie wiem, co tam się święci.</example>
        <example type="ambiguous" inputform="święci[święcić/verb:fin:sg:ter:imperf:refl.nonrefl,święty/adj:pl:nom.voc:m1.p1:pos,święty/subst:pl:nom:m1,święty/subst:pl:voc:m1]"
                 outputform="święci[święty/adj:pl:nom.voc:m1.p1:pos]">Co ci <marker>święci</marker> ludzie mają tam do roboty?</example>
    </rule>

    <rule id="SKALA" name="skala jako rzeczownik">
        <pattern>
            <marker><token>skala</token></marker>
            <token>1</token>
            <token>:</token>
        </pattern>
        <disambig action="remove"><wd lemma="skalać"/></disambig>
    </rule>

    <rule id="BRONI_SUBST" name="broni jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">zawieszenie|nierozprzestrzenianie|braterstwo|posiadać|użyć|towarzysz|noszenie|dostawa|rodzaj|magazyn|eksport|skład</token>
            <marker><token>broni</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"/>
    </rule>

    <rule id="BURZY_SUBST" name="burzy jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">pomruk|odgłos|początek|grzmot|epilog|czas|nadejście|ryk|okres|skutek|metoda|trakt|środek|przejście|premiera</token>
            <marker><token>burzy</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"/>
    </rule>

    <rule id="Burzy_subst_2" name="burzy jako genetiwus">
        <pattern>
            <marker><token>burzy</token></marker>
            <token regexp="yes">mózgów|oklasków|Szekspira</token>
        </pattern>
        <disambig postag="subst:sg:gen:f"/>
    </rule>
    
    <rule id="CIAZY_SUBST" name="ciąży jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">oświadczenie|zakończenie|przery?wanie|trymestr|zaawansowany|niechciany|niepożądany|zapobiegać|nieślubny|miesiąc|patologia|tydzień|okres</token>
            <marker><token>ciąży</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
    </rule>

    <rule id="GADA_SUBST" name="gada jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">prehistoryczny|zabić|spojrzenie</token>
            <marker><token>gada</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:m2"></disambig>
        <example type="untouched">Dobrze gada!</example>
    </rule>

    <rule id="GOSC_SUBST" name="gość jako rzeczownik">
        <pattern>
            <marker><token>gość</token></marker>
            <token postag="(?:subst|ger|depr).*gen.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="subst:sg:nom:m1"/>
    </rule>

    <rule id="KULI_SUBST" name="kuli jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">świst|zakątek|kształt|promień|obszar|powierzchnia|rejon|efekt|obwód|środek|uderzenie|punkt|lot|wnętrze|ruch|miejsce|objętość</token>
            <marker><token>kuli</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
    </rule>

    <rule id="DOBRZE_GADA" name="gada jako czasownik">
        <pattern>
            <token postag="adv.*" postag_regexp="yes"></token>
            <marker><token>gada</token></marker>
        </pattern>
        <disambig postag="verb:fin:sg:ter:imperf:refl.nonrefl"/>
        <example type="ambiguous" inputform="gada[gad/subst:sg:acc:m1,gad/subst:sg:acc:m2,gad/subst:sg:gen:m1,gad/subst:sg:gen:m2,gadać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                 outputform="gada[gadać/verb:fin:sg:ter:imperf:refl.nonrefl]">Dobrze <marker>gada</marker>!</example>
    </rule>

    <rule id="KLUCZY_SUBST" name="kluczy jako genetiwus pluralis">
        <pattern>
            <token regexp="yes" inflected="yes">pęk|komplet|brzęk|dorabianie|para|oddanie|kradzież|zestaw|wymiana</token>
            <marker><token>kluczy</token></marker>
        </pattern>
        <disambig postag="subst:pl:gen:m3"></disambig>
    </rule>

    <rule id="ZIELENI_SUBST" name="zieleni jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">architektura|pas|oaza|odcień|pielęgnacja|pasmo|skrawek|zarząd|teren|klin|enklawa|aranżacja|zakład|kępa|skupisko|architekt|wydział|pracownik|plama|kawałek</token>
            <marker><token>zieleni</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
    </rule>

    <rule id="OPIEKA_SUBST" name="opieka jako rzeczownik">
        <pattern>
            <marker><token regexp="yes">opiek[ąa]</token></marker>
            <token>nad</token>
            <token regexp="yes" inflected="yes">dziecko|potomstwo|zabytek|pacjent|bezdomny|wnuk|klient|starszy|matka|kobieta|człowiek|on|Polonia</token>
        </pattern>
        <disambig action="remove" postag="verb.*"/>
        <example type="ambiguous" inputform="opieka[opieka/subst:sg:nom:f,opiekać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                 outputform="opieka[opieka/subst:sg:nom:f]">Obrona, <marker>opieka</marker> nad potomstwem</example>
    </rule>

    <rule id="PIEKLA_SUBST" name="piekła jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">obawa|dno|obraz|wizja|przedsionek|przedsmak|krąg|istnienie|obraza|otchłań|wrota|brama|środek</token>
            <marker><token>piekła</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:n2"/>
    </rule>

    <rule id="PIEKLO_SUBST" name="piekło jako nominatiwus/akuzatyw">
        <pattern>
            <token>niebo</token>
            <token>i</token>
            <marker><token>piekło</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="piec"/></disambig>
    </rule>

    <rule id="POWODZI_SUBST" name="powodzi jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">klęska|zalew|katastrofa|ofiara}wynik|niebezpieczeństwo|czas|ryzyko|trakt|przyczyna</token>
            <marker><token>powodzi</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
    </rule>

    <rulegroup id="PRZYJAZNI_SUBST" name="przyjaźni jako genetiwus">
        <rule>
        <pattern>
            <token regexp="yes" inflected="yes">order|wyraz|pomnik|towarzystwo|więź|pakt|deklaracja|dowód|atmosfera|symbol|manifestacja|osiedle|szlak|granica</token>
            <marker><token>przyjaźni</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
    </rule>
    </rulegroup>

    <rule id="ROWNA_ADJ" name="równa jako przymiotnik">
        <pattern>
            <marker><token>równa<exception scope="previous">się</exception></token></marker>
            <token postag=".*dat:.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="adj:sg:nom.voc:f:pos"/>
        <example type="untouched">Ta obelga się równa temu, czego doświadczyłem wczoraj.</example>
        <example type="ambiguous" inputform="równa[równać/verb:fin:sg:ter:imperf:refl.nonrefl,równy/adj:sg:nom.voc:f:pos]" outputform="równa[równy/adj:sg:nom.voc:f:pos]">Ta obelga jest <marker>równa</marker> temu, czego doświadczyłem wczoraj.</example>
    </rule>

    <rule id="SOLI_SUBST" name="soli jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">szczypta|brak|niedostatek|kopalnia|warzelnia|łyżeczka|słup|baryłka|roztwór|kryształek|beczka|łyżka|pokład|tona|kilo|odrobina|spożycie|kryształ|grudka|bryła</token>
            <marker><token>soli</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
        <example type="ambiguous" inputform="soli[sol/subst:pl:gen:m2,sola/subst:pl:gen:f,sola/subst:sg:dat:f,sola/subst:sg:gen:f,sola/subst:sg:loc:f,solić/verb:fin:sg:ter:imperf:refl.nonrefl,sól/subst:pl:gen:f,sól/subst:sg:dat:f,sól/subst:sg:gen:f,sól/subst:sg:loc:f,sól/subst:sg:voc:f]"
                 outputform="soli[sól/subst:sg:gen:f]">Mam szczyptę <marker>soli</marker>.</example>
    </rule>

    <rule id="SOLI_SUBST_2" name="soli wapnia, potasu, magnezu = subst">
        <pattern>
            <marker><token>soli</token></marker>
            <token regexp="yes">wapnia|potasu|magnezu|żelaza|metali|srebra|kwasu</token>
        </pattern>
        <disambig action="remove"><wd lemma="solić"/></disambig>
    </rule>

    <rule id="SUTO" name="suto to nie suć">
        <pattern>
            <marker><token>suto</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="suć"/></disambig>
    </rule>

    <rule id="SWOBODNIEJ" name="swobodniej to nie swobodnieć">
        <pattern>
            <marker><token>swobodniej</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="swobodnieć"/></disambig>
    </rule>

    <rule id="SMIECI_SUBST" name="śmieci jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">kupa|wysypisko|wywóz|segregacja|sterta|spalarnia|sortownia|wywózka|utylizacja|usypisko|hałda|worek|składowisko|kontener|tona|spalanie|stos</token>
            <marker><token>śmieci</token></marker>
        </pattern>
        <disambig action="filter" postag="subst:pl:gen.*"></disambig>
        <example type="ambiguous" inputform="śmieci[śmiecie/subst:pl:gen:n2,śmiecić/verb:fin:sg:ter:imperf:nonrefl,śmieć/subst:pl:acc:m3,śmieć/subst:pl:gen:m2,śmieć/subst:pl:gen:m3,śmieć/subst:pl:nom:m3,śmieć/subst:pl:voc:m3]"
                 outputform="śmieci[śmiecie/subst:pl:gen:n2,śmieć/subst:pl:gen:m2,śmieć/subst:pl:gen:m3]">Tu leży kupa <marker>śmieci</marker>.</example>
    </rule>

    <rule id="WIEZI_BRONI_SUBST" name="więzi i broni jako subst">
        <pattern>
            <unify>
                <feature id="number"/><feature id="case"/><feature id="gender"><type id="f"/></feature>
                <token regexp="yes">więzi|broni</token>
                <token postag="adj:.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="więzi[więzić/verb:fin:sg:ter:imperf:refl.nonrefl,więź/subst:pl:acc:f,więź/subst:pl:gen:f,więź/subst:pl:nom:f,więź/subst:pl:voc:f,więź/subst:sg:dat:f,więź/subst:sg:gen:f,więź/subst:sg:loc:f,więź/subst:sg:voc:f]"
                 outputform="więzi[więź/subst:sg:dat:f,więź/subst:sg:gen:f,więź/subst:sg:loc:f]">Mam poczucie <marker>więzi</marker> grupowej.</example>
    </rule>

    <rule id="WOLI_SUBST" name="woli jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">choroba|wolność|wybuch|siła|akt|słabość|potęga</token>
            <marker>
                <token>woli</token>
            </marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
    </rule>

    <rule id="WOLI_SUBST_2" name="woli swej">
        <pattern>
            <marker>
                <unify>
                    <feature id="case"/><feature id="gender"><type id="f"/></feature><feature id="number"/>
                <token>woli</token>
                <token>swej</token>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
    </rule>

    <rule id="WRECZ_QUB" name="walka wręcz ->adv">
        <pattern>
            <marker><token>wręcz</token></marker>
            <token postag="adv.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="qub"/>
    </rule>

    <rule id="ZAZDROSCI_SUBST" name="zazdrości jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">ukłucie|scena|nutka|drgnienie|uczucie|odrobina|nuta|odcień|przedmiot|męka|wybuch</token>
            <marker>
                <token>zazdrości</token>
            </marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
    </rule>

    <rule id='ZNAJDZIE_VERB' name="znajdzie się -> verb">
        <pattern>
            <marker>
                <token postag="verb:fin:sg:ter:perf:refl.nonrefl">znajdzie</token>
                <token postag="qub">się</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="ZOLCI_SUBST" name="żółci jako genetiwus">
        <pattern>
            <token regexp="yes" inflected="yes">odcień|kropla|smak|wytwarzanie|wydzielanie</token>
            <marker>
                <token>żółci</token>
            </marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"></disambig>
    </rule>

    <rule id="ZWYKLA_ADJ" name="zwykła jako przymiotnik">
        <pattern>
            <unify>
                <feature id="number"><type id="sg"/></feature>
                <feature id="gender"><type id="f"/></feature>
                <feature id="case"/>
                <token postag="subst:sg.*" postag_regexp="yes"/>
                <token>zwykła</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="zwykła[zwyknąć/verb:praet:sg:f:ter:perf:nonrefl,zwykły/adj:sg:nom.voc:f:pos]"
                 outputform="zwykła[zwykły/adj:sg:nom.voc:f:pos]">To jest akcja <marker>zwykła</marker> znanej korporacji.</example>
        <example type="untouched">Ona zwykła robić na drutach.</example>
    </rule>

    <rule id="BOGACI_ADJ" name="bogaci + rzeczownik => przymiotnik">
        <pattern>
            <unify><feature id="number"><type id="pl"/></feature><feature id="gender"><type id="m1"/><type id="p1"/></feature>
                <feature id="case"><type id="nom"/><type id="voc"/></feature>
                <marker>
                    <token postag="adj:pl:nom.voc:m1.p1:pos">bogaci</token>
                    <token postag="subst.*" postag_regexp="yes"/>
                </marker>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="bogaci[bogacić/verb:fin:sg:ter:imperf:refl.nonrefl,bogaty/adj:pl:nom.voc:m1.p1:pos,bogaty/subst:pl:nom:m1,bogaty/subst:pl:voc:m1]"
                 outputform="bogaci[bogaty/adj:pl:nom.voc:m1.p1:pos]">Tylko <marker>bogaci</marker> mieszczanie kupują lody.</example>
        <example type="untouched">Cały kraj się bogaci.</example>
    </rule>

    <rule id="TONA_STALI" name="tona stali -> subst">
        <pattern>
            <token inflected="yes" regexp="yes">szczęk|tona</token>
            <marker><token>stali</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:f"/>
    </rule>

    <rule id="WIDMO" name="widmo światła -> nie widma">
        <pattern>
            <marker>
                <token postag=".*nom.*|.*acc.*" postag_regexp="yes">widmo</token>
                <token postag="subst:sg:gen:n2">światła</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="rzadzaca_klika" name="rządząca klika">
        <pattern>
            <marker>
                <token postag="adj:sg:nom.voc:f:pos">rządząca</token>
                <token postag="subst:sg:nom:f">klika</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="BYLA_SERIO" name="być serio">
        <pattern>
        <token inflected="yes">być</token>
        <marker><token>serio</token></marker>
        </pattern>
        <disambig postag="adv"/>
        <example type="ambiguous" inputform="serio[seria/subst:sg:voc:f,serio/adj:pl:acc:m1.p1:pos,serio/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,serio/adj:pl:dat:m1.m2.m3.f.n1.n2.p1.p2.p3:pos,serio/adj:pl:gen:m1.m2.m3.f.n1.n2.p1.p2.p3:pos,serio/adj:pl:inst:m1.m2.m3.f.n1.n2.p1.p2.p3:pos,serio/adj:pl:loc:m1.m2.m3.f.n1.n2.p1.p2.p3:pos,serio/adj:pl:nom.voc:m1.p1:pos,serio/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,serio/adj:sg:acc:f:pos,serio/adj:sg:acc:m1.m2:pos,serio/adj:sg:acc:m3:pos,serio/adj:sg:acc:n1.n2:pos,serio/adj:sg:dat:f:pos,serio/adj:sg:dat:m1.m2.m3.n1.n2:pos,serio/adj:sg:gen:f:pos,serio/adj:sg:gen:m1.m2.m3.n1.n2:pos,serio/adj:sg:inst:f:pos,serio/adj:sg:inst:m1.m2.m3.n1.n2:pos,serio/adj:sg:loc:f:pos,serio/adj:sg:loc:m1.m2.m3.n1.n2:pos,serio/adj:sg:nom.voc:f:pos,serio/adj:sg:nom.voc:m1.m2.m3:pos,serio/adj:sg:nom.voc:n1.n2:pos,serio/adv]"
                 outputform="serio[serio/adv]">To było <marker>serio</marker>.</example>
    </rule>

    <rule id="BYLA_INST" name="była + przymiotnik/czasownik w narzędniku">
        <pattern>
            <token postag="verb:praet:sg:f:ter:imperf:nonrefl">była</token>
            <token postag_regexp="yes" postag="(?:adj|ppas|subst):sg:inst:f.*"/>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rulegroup id="ZAIMKI_SENT_START" name="Zaimki nie są w miejscowniku, chyba że po odpowiednim przyimku">
        <rule>
            <pattern>
                <token><exception postag=".*loc.*" postag_regexp="yes"/></token>
                <marker><token postag="(?:ppron.*|siebie.*).*loc.*" postag_regexp="yes"/></marker>
            </pattern>
            <disambig action="remove" postag=".*loc.*"/>
            <example type="ambiguous" inputform="Sobie[się/siebie:dat,się/siebie:loc]"
                     outputform="Sobie[się/siebie:dat]"><marker>Sobie</marker> robisz tę jajecznicę?</example>
            <example type="untouched">O sobie to mówisz?</example>
        </rule>
    </rulegroup>

    <rule id="SENT_START_BYLA_ADJ_NOM" name="była + przymiotnik/czasownik w narzędniku">
        <pattern>
            <token postag="SENT_START"/>
            <marker>
                <token postag="verb:praet:sg:f:ter:imperf:nonrefl">była</token>
                <token postag_regexp="yes" postag="(?:adj|ppas):sg:nom.voc:f:.*"/>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="Była[być/verb:praet:sg:f:ter:imperf:nonrefl,była/subst:sg:nom:f,była/subst:sg:voc:f,były/adj:sg:nom.voc:f:pos]"
                 outputform="Była[być/verb:praet:sg:f:ter:imperf:nonrefl]"><marker>Była</marker> piękna jak nigdy.</example>
    </rule>

    <rule id="WINIEN_BYLA" name="powinien + była -> czasownik">
        <pattern>
            <token postag="verb:winien.*" postag_regexp="yes"/>
            <marker><token>była</token></marker>
        </pattern>
        <disambig postag="verb:praet:sg:f:ter:imperf:nonrefl"/>
        <example type="ambiguous" inputform="była[być/verb:praet:sg:f:ter:imperf:nonrefl,była/subst:sg:nom:f,była/subst:sg:voc:f,były/adj:sg:nom.voc:f:pos]"
                 outputform="była[być/verb:praet:sg:f:ter:imperf:nonrefl]">Powinna <marker>była</marker> to zrobić.</example>
        <example type="untouched">Moja była kupiła jaguara.</example>
    </rule>

    <rulegroup id="WINNY_JEST" name="winny + czasownik sg => przymiotnik">
        <rule>
        <pattern>
            <token skip="-1" postag="adj:sg.*" postag_regexp="yes">winny<exception scope="next" postag="verb:inf.*" postag_regexp="yes"/><exception scope="next" regexp="yes">&interp;</exception></token>
            <token postag="verb.*sg:.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Sądzę, że współczesne pokolenia winny	- w świecie chaosu i nihilizmu - podjąć próbę tworzenia porządku.</example>
        <example type="ambiguous" inputform="winny[winien/verb:winien:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:nonrefl,winny/adj:sg:acc:m3:pos,winny/adj:sg:nom.voc:m1.m2.m3:pos,winny/subst:sg:nom:m1,winny/subst:sg:voc:m1]"
                 outputform="winny[winny/adj:sg:acc:m3:pos,winny/adj:sg:nom.voc:m1.m2.m3:pos]">Wiadomo, że <marker>winny</marker> jest kucharz.</example>
        </rule>
        <rule>
            <pattern>
                <token skip="-1" postag="verb.*sg:.*" postag_regexp="yes"><exception scope="next" regexp="yes">&interp;</exception></token>
                <marker><token>winny</token></marker>
            </pattern>
            <disambig action="filter" postag="adj:sg.*"></disambig>
            <example type="untouched">Sądzę, że współczesne pokolenia winny	- w świecie chaosu i nihilizmu - podjąć próbę tworzenia porządku.</example>
            <example type="ambiguous" inputform="winny[winien/verb:winien:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:nonrefl,winny/adj:sg:acc:m3:pos,winny/adj:sg:nom.voc:m1.m2.m3:pos,winny/subst:sg:nom:m1,winny/subst:sg:voc:m1]"
                     outputform="winny[winny/adj:sg:acc:m3:pos,winny/adj:sg:nom.voc:m1.m2.m3:pos]">Kucharz był <marker>winny</marker>.</example>
        </rule>
    </rulegroup>

    <rule id="przecie_qub" name="przecie jako kublik">
        <pattern>
            <marker><token>przecie</token></marker>
            <token postag="verb.*|pant.*|pcon.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="qub"/>
        <example type="untouched">Do czego przecie?</example>
        <example type="ambiguous" inputform="przecie[przecie/qub,przeć/verb:fin:pl:sec:imperf:refl.nonrefl]"
                 outputform="przecie[przecie/qub]">Ale nie będzie <marker>przecie</marker> strzelał ze swej trąby do zwierzyny tak jak ja ze sztucera.</example>
    </rule>

    <rulegroup id="VERBFIN_FUT" name="forma przeszła po „będzie”">
     <rule>
        <pattern>
            <unify>
                <feature id="number"/>
                <token postag="verb:bedzie.*" postag_regexp="yes"/>
                <token postag="verb:praet.*:imperf.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="jedli[jedla/subst:pl:gen:f,jedla/subst:sg:dat:f,jedla/subst:sg:gen:f,jedla/subst:sg:loc:f,jeść/verb:praet:pl:m1.p1:ter:imperf:refl.nonrefl]"
                 outputform="jedli[jeść/verb:praet:pl:m1.p1:ter:imperf:refl.nonrefl]">Będziemy <marker>jedli</marker>.</example>
    </rule>
        <rule> <!-- FIXME: in this pattern, min="0" max="2" does not work in <unify-ignore/> -->
            <pattern>
                <unify>
                    <feature id="number"/>
                    <token postag="verb:bedzie.*" postag_regexp="yes"/>
                    <unify-ignore>
                        <token postag="adv.*|qub" postag_regexp="yes"/>
                    </unify-ignore>
                    <token postag="verb:praet.*:imperf.*" postag_regexp="yes"/>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="jedli[jedla/subst:pl:gen:f,jedla/subst:sg:dat:f,jedla/subst:sg:gen:f,jedla/subst:sg:loc:f,jeść/verb:praet:pl:m1.p1:ter:imperf:refl.nonrefl]"
                     outputform="jedli[jeść/verb:praet:pl:m1.p1:ter:imperf:refl.nonrefl]">Będziemy nawet <marker>jedli</marker>.</example>
        </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="number"/>
                    <token postag="verb:bedzie.*" postag_regexp="yes"/>
                    <unify-ignore>
                        <token postag="adv.*|qub" postag_regexp="yes"/>
                        <token postag="adv.*|qub" postag_regexp="yes"/>
                    </unify-ignore>
                    <token postag="verb:praet.*:imperf.*" postag_regexp="yes"/>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="jedli[jedla/subst:pl:gen:f,jedla/subst:sg:dat:f,jedla/subst:sg:gen:f,jedla/subst:sg:loc:f,jeść/verb:praet:pl:m1.p1:ter:imperf:refl.nonrefl]"
                     outputform="jedli[jeść/verb:praet:pl:m1.p1:ter:imperf:refl.nonrefl]">Będziemy nawet dzisiaj <marker>jedli</marker>.</example>
        </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="number"/>
                    <marker>
                    <token postag="verb:bedzie.*" postag_regexp="yes"/>
                    <unify-ignore>
                        <token min="0" max="2" postag="prep.*|subst.*" postag_regexp="yes"/>
                    </unify-ignore>
                    <token postag="verb:praet.*:imperf.*" postag_regexp="yes"/>
                    </marker>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="jedli[jedla/subst:pl:gen:f,jedla/subst:sg:dat:f,jedla/subst:sg:gen:f,jedla/subst:sg:loc:f,jeść/verb:praet:pl:m1.p1:ter:imperf:refl.nonrefl]"
                     outputform="jedli[jeść/verb:praet:pl:m1.p1:ter:imperf:refl.nonrefl]">Będziemy po uczcie <marker>jedli</marker>.</example>
        </rule>
    </rulegroup>

    <rule id="W_SZTUCE_BIEGŁY" name="w sztuce biegły">
        <pattern>
            <token postag="prep:loc:nwok"/>
            <token postag="subst:sg:loc:f">sztuce</token>
            <token postag="adj:sg:nom.voc:m1.m2.m3:pos">biegły</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="pora_subst" name="pora na => rzeczownik">
        <pattern>
            <marker><token>pora</token></marker>
            <token>na</token>
        </pattern>
        <disambig action="remove"><wd lemma="porać"/></disambig>
        <example type="ambiguous" inputform="Pora[por/subst:sg:acc:m2,por/subst:sg:gen:m2,por/subst:sg:gen:m3,pora/pred,pora/subst:sg:nom:f,porać/verb:fin:sg:ter:imperf:refl]"
                 outputform="Pora[por/subst:sg:acc:m2,por/subst:sg:gen:m2,por/subst:sg:gen:m3,pora/pred,pora/subst:sg:nom:f]"><marker>Pora</marker> na Colgate!</example>
    </rule>

    <rule id="pora_subst_inf" name="pora + bezokolicznik => rzeczownik">
        <pattern>
            <marker><token>pora</token></marker>
            <token postag="verb:inf.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="remove"><wd lemma="porać"/></disambig>
        <example type="ambiguous" inputform="Pora[por/subst:sg:acc:m2,por/subst:sg:gen:m2,por/subst:sg:gen:m3,pora/pred,pora/subst:sg:nom:f,porać/verb:fin:sg:ter:imperf:refl]"
                 outputform="Pora[por/subst:sg:acc:m2,por/subst:sg:gen:m2,por/subst:sg:gen:m3,pora/pred,pora/subst:sg:nom:f]"><marker>Pora</marker> umierać!</example>
    </rule>

    <rule id="PORA" name="pora jako genetiwus od por">
        <pattern>
            <token regexp="yes" inflected="yes">kawałek|część</token>
            <marker><token>pora</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:m3"/>
        <example type="untouched">Pora iść do szkoły!</example>
        <example type="ambiguous" inputform="pora[por/subst:sg:acc:m2,por/subst:sg:gen:m2,por/subst:sg:gen:m3,pora/pred,pora/subst:sg:nom:f]"
                 outputform="pora[por/subst:sg:gen:m3]"> Kawałek białej części <marker>pora</marker> oczyścić, przekroić wzdłuż i pokroić w makaroniki.</example>
    </rule>

    <rulegroup id="PARA" name="para jako rzeczownik">
        <rule>
            <pattern>
                <marker>
                <token postag="adj:sg:nom.voc:f:pos"/>
                <token postag="subst:sg:nom:f">para</token>
                </marker>
            </pattern>
            <disambig action="filterall"/>
            <example type="ambiguous" inputform="para[par/subst:sg:acc:m1,par/subst:sg:gen:m1,para/subst:sg:nom:f,parać/verb:fin:sg:ter:imperf:refl]"
                     outputform="para[para/subst:sg:nom:f]">Wiwat młoda <marker>para</marker>!</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token postag="subst:sg:nom:f">para</token>
                </marker>
                    <token postag="adj:sg:nom.voc:f:pos">wodna</token>
            </pattern>
            <disambig action="filterall"/>
        </rule>
    </rulegroup>

    <rulegroup id="PASA" name="pasa jako rzeczownik">
        <rule id="PASA_SUBST" name="pasa jako genetivus">
            <pattern>
                <marker>
                    <token postag="subst:sg:gen:m3">pasa</token>
                    <token postag=".*sg.*gen.*" postag_regexp="yes" regexp="yes">ruchu|startowego|nadbrzeżnego|nadmorskiego|barkowego|transmisyjnego|betonowego|biodrowego|ochronnego|neutralnego|zieleni|drogi|jezdni|granicznego</token>
                </marker>
            </pattern>
            <disambig action="filterall"/>
            <example type="untouched">Jasio pasa gąski.</example>
        </rule>
        <rule id="PASA_SUBST2" name="pasa jako genetivus">
            <pattern>
                <token regexp="yes" inflected="yes">zaciskać|zacisnąć|mistrzowski|zająć|popuścić|skórzany|zapiąć|wydzielić|szerokość|szeroki|sięgać|wydłużyć|zmiana</token>
                <marker><token>pasa</token></marker>
            </pattern>
            <disambig postag="subst:sg:gen:m3"/>
            <example type="untouched">Jasio pasa gąski.</example>
            <example type="ambiguous" inputform="pasa[pas/subst:sg:gen:m3,pasać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                     outputform="pasa[pas/subst:sg:gen:m3]">Musimy zacisnąć <marker>pasa</marker>.</example>
        </rule>
        <rule>
            <pattern>
                <token>do</token>
                <token>samego</token>
                <marker><token>pasa</token></marker>
            </pattern>
            <disambig postag="subst:sg:gen:m3"></disambig>
            <example type="ambiguous" inputform="pasa[pas/subst:sg:gen:m3,pasać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                     outputform="pasa[pas/subst:sg:gen:m3]">Miała dekolt do samego <marker>pasa</marker>.</example>
        </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="gender"><type id="m3"/></feature><feature id="case"><type id="gen"></type></feature>
                    <feature id="number"><type id="sg"></type></feature>
                    <token>pasa</token>
                    <token postag_regexp="yes" postag="(?:adj|ppas|pact):sg.*"/>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="pasa[pas/subst:sg:gen:m3,pasać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                     outputform="pasa[pas/subst:sg:gen:m3]">Nie posiadają <marker>pasa</marker> drogowego.</example>
        </rule>
    </rulegroup>

    <rule name="tłum jako rzeczownik" id="tlum_subst">
        <pattern>
            <marker><token>tłum</token></marker>
            <token postag_regexp="yes" postag="subst.*gen.*(?:f|m1)"/>
        </pattern>
        <disambig action="filter" postag="subst.*"/>
        <example type="untouched">Tłum powstania, dyktatorze!</example>
        <example type="ambiguous" inputform="tłum[tłum/subst:sg:acc:m3,tłum/subst:sg:nom:m3,tłumić/verb:impt:sg:sec:imperf:refl.nonrefl]"
                 outputform="tłum[tłum/subst:sg:acc:m3,tłum/subst:sg:nom:m3]">Był tam <marker>tłum</marker> gości.</example>
    </rule>

    <rulegroup id="NASZA_ADJ" name="nasza jako przymotnik">
    <rule>
        <pattern>
            <token postag="subst:sg:nom:f"/>
            <token postag="adj:sg:nom.voc:f:pos">nasza</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>
    <rule>
        <pattern>
            <token postag="adj:sg:nom.voc:f:pos">nasza</token>
             <token postag="subst:sg:nom:f"/>
            </pattern>
       <disambig action="filterall"/>
    </rule>
        <rule>
            <pattern>
                <token postag="adj:sg:nom.voc:f:pos">nasza</token>
                <token postag="adj:sg:nom.voc:f:pos"/>
                <token postag="subst:sg:nom:f"/>
            </pattern>
            <disambig action="filterall"/>
        </rule>
    </rulegroup>

    <rule id="NASZE_ADJ" name="nasze jako przymiotnik">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"><type id="pl"/></feature><feature id="gender"/>
                <token postag="adj:pl.*" postag_regexp="yes">nasze</token>
                <token postag="subst:pl.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
    </rule>

    <rule id="NAZWIE_SUBST" name="nazwie jako rzeczownik">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"><type id="sg"/></feature><feature id="gender"/>
                <token postag="adj:sg.*" postag_regexp="yes"/>
                <token>nazwie</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Jurek nazwie ją „grzybkiem”.</example>
        <example type="ambiguous" inputform="nazwie[nazwa/subst:sg:dat:f,nazwa/subst:sg:loc:f,nazwać/verb:fin:sg:ter:perf:refl.nonrefl]"
                 outputform="nazwie[nazwa/subst:sg:loc:f]">Okręty o tej <marker>nazwie</marker> są ładne.</example>
    </rule>

    <rule id="MOJE" name="moje to nie „moja” ani „moje” plurale tantum">
        <pattern>
            <token>moje</token>
        </pattern>
        <disambig action="filter" postag="adj.*"/>
    </rule>

    <rule id="MOJA_STARA" name="stara to nie zawsze czasownik">
        <pattern>
            <token>moja</token>
            <marker><token>stara</token></marker>
        </pattern>
        <disambig postag="subst:sg:nom:f"/>
        <example type="ambiguous" inputform="stara[star/subst:sg:gen:m3,stara/subst:sg:nom:f,stara/subst:sg:voc:f,starać/verb:fin:sg:ter:imperf:refl,stary/adj:sg:nom.voc:f:pos]"
                 outputform="stara[stara/subst:sg:nom:f]">A moja <marker>stara</marker> już się wyprawiła w drogę.</example>
    </rule>

    <rule id="ZWYKLY_ADJ" name="zwykły to przymiotnik przed rzeczownikiem">
        <pattern>
            <unify>
                <feature id="case"/><feature id="gender"/><feature id="number"/>
                <token>zwykły</token>
                <token postag="subst.*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="zwykły[zwyknąć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:nonrefl,zwykły/adj:sg:acc:m3:pos,zwykły/adj:sg:nom.voc:m1.m2.m3:pos]"
                 outputform="zwykły[zwykły/adj:sg:acc:m3:pos,zwykły/adj:sg:nom.voc:m1.m2.m3:pos]">Toż to <marker>zwykły</marker> oportunizm.</example>
        <example type="untouched">Tak to zwykły czynić puchacze.</example>
    </rule>

    <rule id="ZWYKLY_INF" name="zwykły jako czasownik">
        <pattern>
            <marker><token>zwykły</token></marker>
            <token postag="verb:inf.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:nonrefl"/>
        <example type="ambiguous" inputform="zwykły[zwyknąć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:nonrefl,zwykły/adj:sg:acc:m3:pos,zwykły/adj:sg:nom.voc:m1.m2.m3:pos]"
                 outputform="zwykły[zwyknąć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:perf:nonrefl]">Policjantki <marker>zwykły</marker> oznaczać swój teren.</example>
        <example type="untouched">To zwykły bandyta.</example>
    </rule>

    <rule id="DZIALY" name="te działy">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/> <feature id="gender"/>
                <token postag="adj.*" postag_regexp="yes"/>
                <token regexp="yes">(?:roz)?działy</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="działy[dziać/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl,dziać/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl,dział/subst:pl:acc:m3,dział/subst:pl:nom:m3,dział/subst:pl:voc:m3]"
                 outputform="działy[dział/subst:pl:acc:m3,dział/subst:pl:nom:m3,dział/subst:pl:voc:m3]">Oba te <marker>działy</marker> poezji zrodziły się z bólu.</example>
    </rule>

    <rule id="JEDNA_Z_GEN" name="„jedna z” -> przymiotnik">
        <pattern>
            <marker><token>jedna</token></marker>
            <token skip="1" inflected="yes" regexp="yes">z|wśród|spośród</token>
            <token postag="adj:pl:gen.*f.*|num:pl:gen.*|subst:pl:gen:f" postag_regexp="yes"/>
        </pattern>
        <disambig postag="adj:sg:nom.voc:f:pos"/>
        <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                 outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">Oto <marker>jedna</marker> z najpiękniejszych dziewic na świecie.</example>
        <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                 outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">Oto <marker>jedna</marker> ze sztuk, jakiej karzełka gdzieś w cyrku wyuczono.
        </example>
        <example type="untouched">Tyran jedna się z narodem.</example>
    </rule>

    <rule id="JEDNA_DRUGA" name="„jedna, druga” – przymiotnik">
        <pattern>
            <marker><token>jedna</token></marker>
            <token min="0" max="1">,</token>
            <token>druga</token>
        </pattern>
        <disambig postag="adj:sg:nom.voc:f:pos"/>
        <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                 outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">Powtórzyła to <marker>jedna</marker>, druga...</example>
    </rule>

    <rule id="TYLKO_JEDEN" name="tylko jako kublik">
        <pattern>
            <marker><token postag="qub">tylko</token>
                <token inflected="yes" postag="adj.*" postag_regexp="yes">jeden</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="Tylko[Tylka/subst:sg:voc:f,Tylka/subst:sg:voc:m1,tylko/conj,tylko/qub]"
                 outputform="Tylko[tylko/qub]"><marker>Tylko</marker> jedna Natalka nic się nie zdziwiła.</example>
        <example type="untouched">Jedź, tylko żebyś nikogo nie zabił!</example>
    </rule>

    <rulegroup id="JEDNA_UNIFY" name="„jedna” jako przymiotnik przed przymotnikiem lub rzeczownikiem">
    <rule>
        <pattern>
            <marker>
            <unify>
                <feature id="case"/><feature id="number"><type id="sg"/></feature>
                <feature id="gender"><type id="f"/></feature>
                <token>jedna</token>
                <token max="2" postag="adj.*|subst.*" postag_regexp="yes"/>
            </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                 outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">Widząc to <marker>jedna</marker> szpetna starucha...</example>
        <example type="untouched">Dyktator jedna się z narodem co czwartek.</example>
        <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]" outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">To jest <marker>jedna</marker> osoba.</example>
        <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]" outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">To jest ta <marker>jedna</marker> jedyna.</example>
    </rule>
    <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="case"/><feature id="number"><type id="sg"/></feature>
                        <feature id="gender"><type id="f"/></feature>
                        <token postag="adj.*|subst.*" postag_regexp="yes"><exception>tylko</exception></token>
                        <token skip="-1">jedna<exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma" postag_regexp="yes" scope="next"/><exception scope="next" regexp="yes">&interp;</exception></token>
                    </unify>
                </marker>
                <token postag="verb:.*(?:sg|pl|imp[st]).*|pred" postag_regexp="yes"/>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                     outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">Kooperacja <marker>jedna</marker> tylko niweczy sprzeczność  między egoizmem a miłością bliźniego.</example>
            <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                 outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">Ada <marker>jedna</marker> jest spokojna.</example>
            <example type="untouched">Dyktator jedna się z narodem co czwartek.</example>
            <example type="untouched">Tylko jedna Natalka nic się nie zdziwiła.</example>
    </rule>
        <rule>
            <pattern>
                <token skip="-1" postag="verb:.*(?:sg|pl|imp[st]).*|pred" postag_regexp="yes"><exception postag="(?:subst|adj).*" postag_regexp="yes"/><exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma" postag_regexp="yes" scope="next"/><exception scope="next" regexp="yes">&interp;</exception></token>
                <marker>
                   <token>jedna</token>
                </marker>
            </pattern>
            <disambig postag="adj:sg:nom.voc:f:pos"/>
            <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                     outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">Otoczyła mię całą od stóp do głów wiosenka <marker>jedna</marker>, dawno, dawno, przed laty w Głogach spędzona.</example>
            <example type="untouched">Dyktator jedna się z narodem co czwartek.</example>
        </rule>
    </rulegroup>

    <rule id="JEDNA_VERB" name="jedna + czasownik -> przymiotnik">
        <pattern>
            <marker><token skip="-1" postag="adj:sg:nom.voc:f:pos">jedna<exception postag="SENT_END|interp:comma|comp:comma" postag_regexp="yes" scope="next"/><exception scope="next" regexp="yes">&interp;</exception></token></marker>
            <token postag="verb.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="jedna[jeden/adj:sg:nom.voc:f:pos,jednać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                 outputform="jedna[jeden/adj:sg:nom.voc:f:pos]">Chyba <marker>jedna</marker> jest spokojna.</example>
    </rule>

    <rule id="MIEC_NADZIEJE" name="mieć + nadzieję -> rzeczownik">
        <pattern>
            <token skip="10" inflected="yes">mieć<exception postag="SENT_END|interp:comma|comp:comma" postag_regexp="yes" scope="next"/><exception scope="next" regexp="yes">&interp;</exception></token>
            <marker><token>nadzieję</token></marker>
        </pattern>
        <disambig postag="subst:sg:acc:f"/>
        <example type="untouched">Nadzieję kurczaka granatami.</example>
        <example type="ambiguous" inputform="nadzieję[nadziać/verb:fin:sg:pri:perf:refl.nonrefl,nadzieja/subst:sg:acc:f]"
                 outputform="nadzieję[nadzieja/subst:sg:acc:f]">Miałem <marker>nadzieję</marker>, że nadziejesz kurczaka granatami.</example>
    </rule>

    <rule id="SWOJE_NADZIEJE" name="nadzieje, dzieje i kraje jako rzeczownik">
        <pattern>
            <marker>
            <unify>
                <feature id="case"/><feature id="number"><type id="pl"/></feature>
                <feature id="gender"/>
                <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"/>
                <token postag="subst.*" postag_regexp="yes" regexp="yes">(?:na)?dzieje|kraje</token>
            </unify>
            </marker>
        </pattern>
        <disambig action="unify"></disambig>
        <example type="untouched">Jurek nadzieje kurczaka granatami.</example>
        <example type="ambiguous" inputform="nadzieje[nadziać/verb:fin:sg:ter:perf:refl.nonrefl,nadzieja/subst:pl:acc:f,nadzieja/subst:pl:nom:f,nadzieja/subst:pl:voc:f]"
                 outputform="nadzieje[nadzieja/subst:pl:acc:f,nadzieja/subst:pl:nom:f,nadzieja/subst:pl:voc:f]">W tobie lud egipski złożył swoje <marker>nadzieje</marker>.</example>
    </rule>

    <rule id="DZIEJE_NARODU" name="dzieje + genetiwus -> rzeczownik">
        <pattern>
            <marker><token>dzieje</token></marker>
            <token postag=".*gen.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="remove" postag="verb.*"/>
        <example type="ambiguous" inputform="Dzieje[dziać/verb:fin:sg:ter:imperf:refl,dziać/verb:fin:sg:ter:imperf:refl.nonrefl,dzieje/subst:pl:acc:p3,dzieje/subst:pl:nom:p3,dzieje/subst:pl:voc:p3]"
                 outputform="Dzieje[dzieje/subst:pl:acc:p3,dzieje/subst:pl:nom:p3,dzieje/subst:pl:voc:p3]"><marker>Dzieje</marker> Rosji</example>
        <example type="untouched">Co się dzieje?</example>
    </rule>

    <rule id="NADZIEJA_ZE" name="nadzieją, że -> rzeczownik">
        <pattern>
            <marker>
                <token>nadzieją</token>
            </marker>
            <token>,</token>
            <token regexp="yes">iż|że</token>
        </pattern>
        <disambig postag="subst:sg:inst:f"/>
        <example type="untouched">Prosiaka nadzieją orzechami.</example>
        <example type="ambiguous" inputform="nadzieją[nadziać/verb:fin:pl:ter:perf:refl.nonrefl,nadzieja/subst:sg:inst:f]"
                 outputform="nadzieją[nadzieja/subst:sg:inst:f]">Prostacze serce jego zakołatało po raz ostatni <marker>nadzieją</marker>, że może czeka go krzyż.</example>
    </rule>

    <rule id="GRA_ADJ" name="gra + przymiotnik = subst">
        <pattern>
            <unify>
                <feature id="case"><type id="nom"/></feature><feature id="number"><type id="sg"/></feature>
                    <feature id="gender"><type id="f"/></feature>
                <token>gra</token>
                <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Jarek gra w szachy z Alikiem.</example>
        <example type="ambiguous" inputform="gra[gra/subst:sg:nom:f,grać/verb:fin:sg:ter:imperf:refl.nonrefl]" outputform="gra[gra/subst:sg:nom:f]">Alpha Centauri - <marker>gra</marker> komputerowa</example>
    </rule>

    <rule id="KRAJE_UBOGIE" name="nadzieje, dzieje i kraje jako rzeczownik">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"/>
                <token regexp="yes">(?:na)?dzieje|kraje</token>
                <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="unify"></disambig>
        <example type="untouched">Jurek nadzieje kurczaka granatami.</example>
        <example type="ambiguous" inputform="kraje[kraj/subst:pl:acc:m3,kraj/subst:pl:nom:m3,kraj/subst:pl:voc:m3,krajać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                 outputform="kraje[kraj/subst:pl:acc:m3,kraj/subst:pl:nom:m3,kraj/subst:pl:voc:m3]">Nawet <marker>kraje</marker> ubogie potrzebują wsparcia.</example>
    </rule>

    <rule id="KRAJE_NATO" name="kraje NATO => rzeczownik">
        <pattern>
            <marker><token postag="verb:fin:sg:ter:imperf:refl.nonrefl">kraje</token></marker>
            <token>NATO</token>
        </pattern>
        <disambig action="remove"><wd lemma="krajać"/></disambig>
        <example type="ambiguous" inputform="kraje[kraj/subst:pl:acc:m3,kraj/subst:pl:nom:m3,kraj/subst:pl:voc:m3,krajać/verb:fin:sg:ter:imperf:refl.nonrefl]"
                 outputform="kraje[kraj/subst:pl:acc:m3,kraj/subst:pl:nom:m3,kraj/subst:pl:voc:m3]">To były <marker>kraje</marker> NATO.</example>
    </rule>

    <rule id="PANSTWO_MLODZI" name="państwo młodzi">
        <pattern>
            <token postag="subst.*" postag_regexp="yes" inflected="yes">państwo</token>
            <token postag="adj.*" postag_regexp="yes" inflected="yes">młody</token>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rule id="SWIETA_RZEKA" name="święta rzeka - adj + subst">
        <pattern>
            <token postag="adj:sg:nom.voc:f:pos">święta</token>
            <token postag="subst:sg:nom:f">rzeka</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="święta[święta/subst:pl:acc:p3,święta/subst:pl:nom:p3,święta/subst:pl:voc:p3,święta/subst:sg:nom:f,święta/subst:sg:voc:f,święto/subst:pl:acc:n2,święto/subst:pl:nom:n2,święto/subst:pl:voc:n2,święto/subst:sg:gen:n2,święty/adj:sg:nom.voc:f:pos]"
                 outputform="święta[święty/adj:sg:nom.voc:f:pos]">Ganges to <marker>święta</marker> rzeka.</example>
    </rule>

    <rule id="RZEKA_W" name="rzeka w... = subst">
        <pattern>
            <marker><token>rzeka</token></marker>
            <token>w</token>
        </pattern>
        <disambig action="remove"><wd lemma="rzekać"/></disambig>
    </rule>


    <rule id="MOJ_BLIZNI" name="bliźni - zwykle nie czasownik">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"/>
                <token postag_regexp="yes" postag="adj.*"/>
                <token postag="subst.*" postag_regexp="yes">bliźni</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="bliźni[bliźni/adj:pl:nom.voc:m1.p1:pos,bliźni/adj:sg:acc:m3:pos,bliźni/adj:sg:nom.voc:m1.m2.m3:pos,bliźni/subst:pl:nom:m1,bliźni/subst:pl:voc:m1,bliźni/subst:sg:nom:m1,bliźni/subst:sg:voc:m1,bliźnić/verb:fin:sg:ter:imperf:refl,bliźny/adj:pl:nom.voc:m1.p1:pos,bliźny/subst:pl:nom:m1,bliźny/subst:pl:voc:m1]"
                 outputform="bliźni[bliźni/subst:sg:nom:m1,bliźni/subst:sg:voc:m1]">To jest mój <marker>bliźni</marker>.</example>
    </rule>

    <rule id="TAJEMNICZA_MINA" name="tajemniczą miną => rzeczownik">
        <pattern>
            <token postag="adj:sg:inst:f.*" postag_regexp="yes"></token>
            <marker><token>miną</token></marker>
        </pattern>
        <disambig postag="subst:sg:inst:f"/>
        <example type="ambiguous" inputform="miną[mina/subst:sg:inst:f,minąć/verb:fin:pl:ter:perf:refl.nonrefl]"
                 outputform="miną[mina/subst:sg:inst:f]">Patrzył na nich ze smutną <marker>miną</marker>.</example>
    </rule>

    <rule id="PIETRA_NIE_MIEC" name="pietra jako dopełniacz">
        <pattern>
            <marker>
            <token skip="5">pietra</token>
            </marker>
            <token inflected="yes">mieć</token>
        </pattern>
        <disambig postag="subst:sg:gen:m1"/>
    </rule>

    <rule id="PIETRA_NIE_MIEC_2" name="pietra jako dopełniacz">
        <pattern>
            <token inflected="yes" skip="4">mieć</token>
            <marker>
                <token>pietra</token>
            </marker>
        </pattern>
        <disambig postag="subst:sg:gen:m1"/>
    </rule>

    <rule id="mialem" name="miałem + acc">
        <pattern>
            <marker><token>miałem</token></marker>
            <token postag=".*acc.*" postag_regexp="yes"></token>
        </pattern>
        <disambig postag="verb:praet:sg:m1.m2.m3:pri:imperf:refl.nonrefl"/>
        <example type="ambiguous" inputform="miałem[miał/subst:sg:inst:m3,mieć/verb:praet:sg:m1.m2.m3:pri:imperf:refl.nonrefl]"
                 outputform="miałem[mieć/verb:praet:sg:m1.m2.m3:pri:imperf:refl.nonrefl]">Oczywiście, <marker>miałem</marker> rację.</example>
        <example type="untouched">Nie bawię się miałem węglowym.</example>
    </rule>

    <rule id="ktora_ma" name="który ma => verb">
        <pattern>
            <token regexp="yes">która|jaka</token>
            <marker><token>ma</token></marker>
        </pattern>
        <disambig postag="verb:fin:sg:ter:imperf:refl.nonrefl"/>
        <example type="ambiguous" inputform="ma[mieć/verb:fin:sg:ter:imperf:refl.nonrefl,mój/adj:sg:nom.voc:f:pos]" outputform="ma[mieć/verb:fin:sg:ter:imperf:refl.nonrefl]">... całej wieczności, która mnie poprzedziła, i tej która <marker>ma</marker> po mnie nastąpić.</example>
    </rule>

    <rule id="jacy_ktorzy_byli" name="jacy byli => verb">
        <pattern>
            <token regexp="yes">jacy|którzy</token>
            <marker><token>byli</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="były"/></disambig>
        <example type="ambiguous" inputform="byli[być/verb:praet:pl:m1.p1:ter:imperf:nonrefl,były/adj:pl:nom.voc:m1.p1:pos,były/subst:pl:nom:m1,były/subst:pl:voc:m1]"
                 outputform="byli[być/verb:praet:pl:m1.p1:ter:imperf:nonrefl]">Ciągle wchodzili nowi, wszyscy, jacy <marker>byli</marker> od samego początku naszego klasztoru.</example>
    </rule>

    <rule id="GO" name="go to nie rzeczownik">
        <pattern>
            <token>go<exception scope="previous">w</exception><exception scope="previous" postag="SENT_START"></exception></token>
        </pattern>
        <disambig action="remove"><wd lemma="go"/></disambig>
        <example type="ambiguous" inputform="go[go/subst:pl:acc:n2,go/subst:pl:dat:n2,go/subst:pl:gen:n2,go/subst:pl:inst:n2,go/subst:pl:loc:n2,go/subst:pl:nom:n2,go/subst:pl:voc:n2,go/subst:sg:acc:n2,go/subst:sg:dat:n2,go/subst:sg:gen:n2,go/subst:sg:inst:n2,go/subst:sg:loc:n2,go/subst:sg:nom:n2,go/subst:sg:voc:n2,on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:n1.n2:ter:nakc:npraep]"
                 outputform="go[on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:n1.n2:ter:nakc:npraep]">Widziałem <marker>go</marker> w lesie.</example>
    </rule>

    <rule id="GRA_W_GO" name="go jako rzeczownik">
        <pattern>
            <token>w</token>
            <marker><token>go</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="on"/></disambig>
        <example type="ambiguous" inputform="go[go/subst:pl:acc:n2,go/subst:pl:loc:n2,go/subst:sg:acc:n2,go/subst:sg:loc:n2,on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep]"
                 outputform="go[go/subst:pl:acc:n2,go/subst:pl:loc:n2,go/subst:sg:acc:n2,go/subst:sg:loc:n2]">Gram w <marker>go</marker>.</example>
    </rule>

    <rule id="ZBYT_ADV" name="zbyt jako przysłówek">
        <pattern>
            <unify negate="yes">
                <feature id="case"></feature><feature id="gender"></feature>
                <feature id="number"/>
                <marker>
                    <token>zbyt</token>
                </marker>
                <token postag="(adj|ppas|pact).*" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig postag="adv"/>
        <example type="untouched">Drogi złoty utrudnia zbyt towarowy.</example>
        <example type="ambiguous" inputform="zbyt[zbyt/adv,zbyt/subst:sg:acc:m3,zbyt/subst:sg:nom:m3]"
                 outputform="zbyt[zbyt/adv]">To <marker>zbyt</marker> interesujące.</example>
    </rule>

    <rule id="TO_NIE_CONJ" name="to jako ten">
        <pattern>
            <unify>
                <feature id="gender"></feature><feature id="case"/><feature id="number"/>
                <token postag="adj:sg.*" postag_regexp="yes">to<exception scope="previous" regexp="yes">&interp;</exception><exception scope="previous" postag="SENT_START"/></token>
                <token postag="subst:sg.*" postag_regexp="yes"><exception>co</exception></token>
            </unify>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]"
                 outputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos]">Wróć <marker>to</marker> wesele myśli.</example>
        <example type="untouched">Wróć, to wesele ci się spodoba.</example>
    </rule>

    <rule id="TO_PREP_JAKI_KTORY" name="to jako subst">
        <pattern>
            <marker>
                <token>to</token>
            </marker>
                <token min="0" max="1">,</token>
            <unify>
                <feature id="case"></feature>
                <token postag="prep.*" postag_regexp="yes"><exception>jak</exception></token>
                <token inflected="yes" regexp="yes">który|jaki</token>
            </unify>
        </pattern>
        <disambig action="filter" postag="subst.*"/>
        <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]"
                 outputform="to[to/subst:sg:acc:n2,to/subst:sg:nom:n2]">Interesuje nas <marker>to</marker>, w jaki sposób się to dzieje.</example>
        <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]"
                 outputform="to[to/subst:sg:acc:n2,to/subst:sg:nom:n2]">Interesuje nas <marker>to</marker> w jaki sposób się to dzieje.</example>
        <example type="untouched">To, jak jakie pędraki to robią, jest nieinteresujące.</example>
    </rule>

    <rule id="DOSC_ZE" name="dość że">
        <pattern>
            <marker><token regexp="yes">dość|dosyć|jako</token></marker>
            <token>że</token>
        </pattern>
        <disambig postag="conj"/> <!-- wg Innego słownika -->
    </rule>

    <rule id="JAK_NIE_CONJ" name="jak w funkcji innej niż spójnik">
        <pattern>
            <marker><token>jak<exception scope="previous">,</exception><exception scope="previous" postag="SENT_START"/></token></marker>
            <token><exception>gdyby</exception></token>
        </pattern>
        <disambig action="remove"><wd pos="conj"/></disambig>
    </rule>

    <rule id="tyle_co" name="co jako comp">
           <pattern>
                <marker>
                    <token postag="adv|num.*" postag_regexp="yes">tyle</token>
                    <token min="0" max="1" postag="interp:comma">,</token>
                    <token postag="comp">co</token>
                </marker>
            </pattern>
            <disambig action="filterall"/>
            <example type="ambiguous" inputform="co[co/comp,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]"
                     outputform="co[co/comp]">Dla dzikiej świni wino znaczy tyle, <marker>co</marker> pomyje.</example>
         <example type="ambiguous" inputform="co[co/comp,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]"
                  outputform="co[co/comp]">Dla dzikiej świni wino znaczy tyle <marker>co</marker> pomyje.</example>
     </rule>

    <rule id="rownie_adv" name="równie jako adv">
        <pattern>
            <marker>
            <token regexp="yes">tak|równie</token>
            </marker>
            <token skip="-1"><exception regexp="yes" scope="next">&interp;|bądź|czy|ani|lub|albo|oraz|i</exception></token>
            <token><exception postag="interp:comma" scope="previous"></exception>jak</token>
        </pattern>
        <disambig postag="adv:pos"></disambig>
        <example type="ambiguous" inputform="równie[rówień/subst:pl:acc:f,rówień/subst:pl:nom:f,rówień/subst:pl:voc:f,równia/subst:pl:acc:f,równia/subst:pl:nom:f,równia/subst:pl:voc:f,równie/adv:pos]"
                 outputform="równie[równie/adv:pos]">On jest <marker>równie</marker> biegły jak inni.</example>
        <example type="untouched">Widziałem już różne równie pochyłe.</example>
    </rule>

    <rulegroup id="SMIALO_ADV" name="śmiało jako przysłówek">
        <rule>
        <pattern>
            <token postag="verb:.*(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*" postag_regexp="yes" skip="-1"><exception postag="subst:.*|adj.*|ppron.*|verb:inf.*|verb:bedzie.*|adv:com|prep.*|qub|adv.*|conj|comp|&lt;/TO_(ZNACZY|JEST)&gt;" postag_regexp="yes" scope="current"></exception><exception scope="current">może</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma" postag_regexp="yes" scope="next"/></token>
            <marker>
                <token>śmiało</token>
            </marker>
        </pattern>
        <disambig action="filter" postag="adv:pos"/>
        <example type="ambiguous" inputform="śmiało[śmiać/verb:praet:sg:n1.n2:ter:imperf:refl,śmiało/adv:pos,śmieć/verb:praet:sg:n1.n2:ter:imperf:nonrefl]"
                 outputform="śmiało[śmiało/adv:pos]">Zatrzymał się <marker>śmiało</marker>.</example>
    </rule>
    <rule>
        <pattern>
            <marker><token>śmiało</token></marker>
            <token postag="verb.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="adv:pos"/>
    </rule>
        <rule>
            <pattern>
                <marker><token>śmiało</token></marker>
                <token skip="-1">się<exception postag="SENT_END|&lt;ELLIPSIS&gt;|comp:comma|interp:comma" postag_regexp="yes" scope="next"/></token>
                <token postag="verb.*:refl(?:\.nonrefl)?" postag_regexp="yes"/>
            </pattern>
            <disambig postag="adv:pos"/>
        </rule>
    </rulegroup>

    <rule id="stanie_sie_adj" name="stanie się jasne -> verb">
        <pattern>
            <marker>
                <token postag="verb:fin:sg:ter:perf:refl">stanie</token>
                <token postag="qub">się</token>
                <token postag="adj:sg:nom.*" postag_regexp="yes"/>
            </marker>
        </pattern>
        <disambig action="filterall"/>
    </rule>

    <rulegroup id="BRATA_SUBST" name="„brata” itp. jako rzeczownik">
        <rule>
            <pattern>
                <token inflected="yes" postag="verb:.*(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*" postag_regexp="yes" skip="-1">mieć<exception scope="current">miano</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|comp:comma|interp:comma" postag_regexp="yes" scope="next"/></token>
                <marker>
                    <token regexp="yes">bąka|brata|broni|burzy|czci|czerwieni|ciąży|kluczy|lata|myśl[ią]|niewoli|piekł[oa]|powodzi|soli|stanie|towarzyszy|troska|zieleni|zwierza|przyjaźni|gości|rzeką|złości|(?:roz|po|prze|u)?dział|wieści|zazdrości|zbroją|złości</token>
                </marker>
            </pattern>
            <disambig action="filter" postag="subst.*"/>
        </rule>
        <rule>
        <pattern>
            <token postag="verb:.*(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*" postag_regexp="yes" skip="-1"><exception postag="subst:.*|adj.*|ppron.*|verb:inf.*|verb:bedzie.*|adv:com|prep.*|qub|adv.*|conj|comp|&lt;/TO_(ZNACZY|JEST)&gt;" postag_regexp="yes" scope="current"></exception><exception scope="current">może</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma" postag_regexp="yes" scope="next"/></token>
            <marker>
                <token regexp="yes">bąka|brata|broni|burzy|ciąży|czci|czerwieni|kluczy|lata|myśl[ią]|niewoli|piekł[oa]|powodzi|soli|stanie|troska|towarzyszy|zieleni|zwierza|przyjaźni|gości|rzeką|złości|(?:roz|po|prze|u)?dział|wieści|zazdrości|zbroją|złości</token>
            </marker>
        </pattern>
        <disambig action="filter" postag="subst.*"/>
            <example type="ambiguous" inputform="myśli[myśl/subst:pl:acc:f,myśl/subst:pl:gen:f,myśl/subst:pl:nom:f,myśl/subst:pl:voc:f,myśl/subst:sg:dat:f,myśl/subst:sg:gen:f,myśl/subst:sg:loc:f,myśl/subst:sg:voc:f,myśleć/verb:fin:sg:ter:imperf:nonrefl,myślić/verb:fin:sg:ter:imperf:nonrefl]"
                     outputform="myśli[myśl/subst:pl:acc:f,myśl/subst:pl:gen:f,myśl/subst:pl:nom:f,myśl/subst:pl:voc:f,myśl/subst:sg:dat:f,myśl/subst:sg:gen:f,myśl/subst:sg:loc:f,myśl/subst:sg:voc:f]">Norwid to jest poeta <marker>myśli</marker>.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token skip="-1" regexp="yes">bąka|brata|burzy|czci|czerwieni|kluczy|lata|broni|ciąży|myśl[ią]|niewoli|piekł[oa]|powodzi|soli|stanie|troska|towarzyszy|zieleni|zwierza|przyjaźni|gości|rzeką|(?:roz|po|prze|u)?dział|wieści|zazdrości|zbroją|złości<exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma" postag_regexp="yes" scope="next"/></token>
                </marker>
                <token postag="verb:.*(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*" postag_regexp="yes"><exception postag="subst:.*|adj.*|ppron.*|verb:inf.*|verb:bedzie.*|adv:com|prep.*|qub|adv.*|conj|comp|&lt;/TO_(ZNACZY|JEST)&gt;" postag_regexp="yes" scope="current"/><exception scope="current">może</exception></token>
            </pattern>
            <disambig action="filter" postag="subst.*"/>
            <example type="ambiguous" inputform="bąka[bąk/subst:sg:acc:m2,bąk/subst:sg:gen:m2,bąkać/verb:fin:sg:ter:imperf:nonrefl]"
                     outputform="bąka[bąk/subst:sg:acc:m2,bąk/subst:sg:gen:m2]">Drukarz <marker>bąka</marker> uciął.</example>
        </rule>
    </rulegroup>

    <rulegroup id="ADJ_PRAET_ADJ" name="wyrosła jako przymiotnik">
        <rule>
            <pattern>
               <token inflected="yes" postag="verb:.*(sg|pl).*|verb:imps.*" postag_regexp="yes" skip="-1">mieć<exception scope="current">miano</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|comp:comma|interp:comma" postag_regexp="yes" scope="next"/></token>
                <marker>
                <unify>
                    <feature id="case"/><feature id="number"/><feature id="gender"/>
                    <token postag="(?:subst|ger|depr).*" postag_regexp="yes"/>
                    <and>
                    <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"><exception postag="(?:adj|subst|pact|ppas|verb:praet).*" postag_regexp="yes" negate_pos="yes"/></token>
                        <token postag="verb:praet.*" postag_regexp="yes"/>
                    </and>
                </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">Porzeczka wyrosła w murze.</example>
            <example type="ambiguous" inputform="wyrosła[wyrosnąć/verb:praet:sg:f:ter:perf:nonrefl,wyrosły/adj:sg:nom.voc:f:pos]"
                     outputform="wyrosła[wyrosły/adj:sg:nom.voc:f:pos]">Dużo uroku miała porzeczka <marker>wyrosła</marker> w murze.</example>
        </rule>
        <rule>
            <pattern>
                <token inflected="yes" postag="verb:.*(sg|pl).*|verb:imps.*" postag_regexp="yes" skip="-1">mieć<exception scope="current">miano</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|comp:comma|interp:comma" postag_regexp="yes" scope="next"/></token>
                <token postag="subst.*" postag_regexp="yes"/>
                <marker>
                    <unify>
                        <feature id="case"/><feature id="number"/><feature id="gender"/>
                        <token postag="(?:subst|ger|depr).*" postag_regexp="yes"/>
                        <and>
                            <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"><exception postag="(?:adj|subst|pact|ppas|verb:praet).*" postag_regexp="yes" negate_pos="yes"/></token>
                            <token postag="verb:praet.*" postag_regexp="yes"/>
                        </and>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">Porzeczka wyrosła w murze.</example>
            <example type="ambiguous" inputform="wyrosła[wyrosnąć/verb:praet:sg:f:ter:perf:nonrefl,wyrosły/adj:sg:nom.voc:f:pos]"
                     outputform="wyrosła[wyrosły/adj:sg:nom.voc:f:pos]">Miała sporo uroku porzeczka <marker>wyrosła</marker> w murze.</example>
        </rule>
        <rule>
        <pattern>
        <token postag="verb:.*(sg|pl).*|verb:imps.*" postag_regexp="yes" skip="-1"><exception postag="subst:.*|adj.*|ppron.*|verb:inf.*|verb:bedzie.*|adv:com|prep.*|qub|adv.*|conj|comp|&lt;/TO_(ZNACZY|JEST)&gt;" postag_regexp="yes" scope="current"/><exception scope="current">może</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma" postag_regexp="yes" scope="next"/></token>
            <marker>
                <unify>
                    <feature id="case"/><feature id="number"/><feature id="gender"/>
                    <token postag="(?:subst|ger|depr).*" postag_regexp="yes"/>
                    <and>
                        <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"><exception postag="(adj|pact|ppas|subst|verb:praet).*" postag_regexp="yes" negate_pos="yes"/></token>
                        <token postag="verb:praet.*" postag_regexp="yes"/>
                    </and>
                </unify>
            </marker>
        </pattern>
            <disambig action="unify"/>
            <example type="untouched">Porzeczka wyrosła w murze.</example>
            <example type="untouched">Demoliberalizm jest identyczny jak bolszewicki.</example>
            <example type="ambiguous" inputform="wyrosła[wyrosnąć/verb:praet:sg:f:ter:perf:nonrefl,wyrosły/adj:sg:nom.voc:f:pos]"
                     outputform="wyrosła[wyrosły/adj:sg:nom.voc:f:pos]">Dużo uroku przydawała porzeczka <marker>wyrosła</marker> w murze.</example>
        </rule>
        <rule>
            <pattern>
                <token postag="verb:.*(sg|pl).*|verb:imps.*" postag_regexp="yes" skip="-1"><exception postag="subst:.*|adj.*|ppron.*|verb:inf.*|verb:bedzie.*|adv:com|prep.*|qub|adv.*|conj|comp|&lt;/TO_(ZNACZY|JEST)&gt;" postag_regexp="yes" scope="current"/><exception scope="current">może</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma" postag_regexp="yes" scope="next"/></token>
                <marker>
                    <unify>
                        <feature id="case"/><feature id="number"/><feature id="gender"/>
                        <token postag="(?:subst|ger|depr).*" postag_regexp="yes"/>
                        <unify-ignore>
                            <token>tak</token>
                        </unify-ignore>
                        <and>
                            <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"><exception postag="(adj|pact|ppas|subst|verb:praet).*" postag_regexp="yes" negate_pos="yes"/></token>
                            <token postag="verb:praet.*" postag_regexp="yes"/>
                        </and>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">Porzeczka wyrosła w murze.</example>
            <example type="untouched">Demoliberalizm jest identyczny jak bolszewicki.</example>
            <example type="ambiguous" inputform="ogorzała[ogorzały/adj:sg:nom.voc:f:pos,ogorzeć/verb:praet:sg:f:ter:perf:nonrefl]"
                     outputform="ogorzała[ogorzały/adj:sg:nom.voc:f:pos]">Z młodością kibici jej i warkoczy tworzyła twarz tak <marker>ogorzała</marker>, że od włosów ciemniejsza...</example>
        </rule>
        <rule>
            <pattern>
                <token postag="verb:.*(sg|pl).*|verb:imps.*" postag_regexp="yes" skip="-1"><exception postag="subst:.*|adj.*|ppron.*|verb:inf.*|verb:bedzie.*|adv:com|prep.*|qub|adv.*|conj|comp|&lt;/TO_(ZNACZY|JEST)&gt;" postag_regexp="yes" scope="current"/><exception scope="current">może</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma" postag_regexp="yes" scope="next"/></token>
                <token postag="subst.*" postag_regexp="yes"/>
                <marker>
                    <unify>
                        <feature id="case"/><feature id="number"/><feature id="gender"/>
                        <token postag="(?:subst|ger|depr).*" postag_regexp="yes"/>
                        <and>
                            <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"><exception postag="(adj|pact|ppas|subst|verb:praet).*" postag_regexp="yes" negate_pos="yes"/></token>
                            <token postag="verb:praet.*" postag_regexp="yes"/>
                        </and>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">Porzeczka wyrosła w murze.</example>
            <example type="untouched">Demoliberalizm jest identyczny jak bolszewicki.</example>
            <example type="ambiguous" inputform="wyrosła[wyrosnąć/verb:praet:sg:f:ter:perf:nonrefl,wyrosły/adj:sg:nom.voc:f:pos]"
                     outputform="wyrosła[wyrosły/adj:sg:nom.voc:f:pos]">Przydawała woni porzeczka <marker>wyrosła</marker> w murze.</example>
        </rule>
        <rule>
            <pattern>
                <token postag="verb:.*(sg|pl).*|verb:imps.*" postag_regexp="yes" skip="-1"><exception postag="subst:.*|adj.*|ppron.*|verb:inf.*|verb:bedzie.*|adv:com|prep.*|qub|adv.*|conj|comp|&lt;/TO_(ZNACZY|JEST)&gt;" postag_regexp="yes" scope="current"></exception><exception scope="current">może</exception><exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma" postag_regexp="yes" scope="next"/></token>
                <marker>
                    <unify>
                        <feature id="case"/><feature id="number"/><feature id="gender"/>
                        <token postag="adj.*" inflected="yes" postag_regexp="yes">wszystek</token>
                        <and>
                            <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"><exception postag="(adj|subst|pact|ppas|verb).*" postag_regexp="yes" negate_pos="yes"/></token>
                            <token postag="verb:praet.*" postag_regexp="yes"/>
                        </and>
                        <token postag="(?:subst|ger|depr).*" postag_regexp="yes"/>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">Porzeczka wyrosła w murze.</example>
            <example type="untouched">Demoliberalizm jest identyczny jak bolszewicki.</example>
            <example type="ambiguous" inputform="zmarli[zemrzeć/verb:praet:pl:m1.p1:ter:perf:nonrefl,zmarły/adj:pl:nom.voc:m1.p1:pos,zmarły/subst:pl:nom:m1,zmarły/subst:pl:voc:m1]"
                     outputform="zmarli[zmarły/adj:pl:nom.voc:m1.p1:pos]">Dużo uroku przydawali wszyscy <marker>zmarli</marker> bankruci.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
            <marker>
                <unify>
                    <feature id="case"/><feature id="number"/><feature id="gender"/>
                    <token postag="(?:subst|ger|depr).*" postag_regexp="yes"/>
                    <and>
                        <token skip="-1" postag="(?:adj|pact|ppas).*" postag_regexp="yes"><exception postag="(?:adj|pact|subst|ppas|verb:praet).*" postag_regexp="yes" negate_pos="yes"/><exception postag="SENT_END|&lt;ELLIPSIS&gt;|interp:comma|comp:comma|pcon:imperf.*|pant:perf.*" postag_regexp="yes" scope="next"/></token>
                        <token postag="verb:praet.*" postag_regexp="yes"/>
                    </and>
                </unify>
            </marker>
            <token postag="verb:.*(sg|pl).*|verb:imps.*" postag_regexp="yes"/>
            </pattern>
            <disambig action="unify"/>
            <example type="untouched">Porzeczka wyrosła w murze.</example>
            <example type="ambiguous" inputform="wyrosła[wyrosnąć/verb:praet:sg:f:ter:perf:nonrefl,wyrosły/adj:sg:nom.voc:f:pos]"
                     outputform="wyrosła[wyrosły/adj:sg:nom.voc:f:pos]">Porzeczka <marker>wyrosła</marker> w murze przydawała wiele uroku.</example>

        </rule>
    </rulegroup>

    <rule id="MISTRZ_PYTA" name="nazwy własne błędnie rozpoznane jako czasowniki">
        <pattern case_sensitive="yes">
            <token regexp="yes" inflected="yes">mistrz|książę|pan|brat|święty|doktor</token>
            <marker>
                <token postag="verb.*" postag_regexp="yes" regexp="yes">\p{Lu}\p{Ll}+</token>
            </marker>
        </pattern>
        <disambig action="remove" postag="verb.*"></disambig>
        <example type="ambiguous" inputform="Czernisz[czernić/verb:fin:sg:sec:imperf:refl.nonrefl]"
                 outputform="Czernisz[Czernisz]">Dr <marker>Czernisz</marker> pochodził ze sfery ludzi biednych.</example>
    </rule>

    <rule id="SPRAWIAC_WRAZENIE" name="sprawiać wrażenie + czas/rzecz -> rzecz">
        <pattern>
            <token inflected="yes" regexp="yes">sprawia?ć</token>
            <token>wrażenie</token>
            <marker>
            <and>
                <token postag=".*gen.*" postag_regexp="yes"/>
                <token postag_regexp="yes" postag="verb.*"/>
            </and>
            </marker>
        </pattern>
        <disambig action="filter" postag=".*gen.*"/>
        <example type="ambiguous" inputform="śmieci[śmiecie/subst:pl:gen:n2,śmiecić/verb:fin:sg:ter:imperf:nonrefl,śmieć/subst:pl:acc:m3,śmieć/subst:pl:gen:m2,śmieć/subst:pl:gen:m3,śmieć/subst:pl:nom:m3,śmieć/subst:pl:voc:m3]"
                 outputform="śmieci[śmiecie/subst:pl:gen:n2,śmieć/subst:pl:gen:m2,śmieć/subst:pl:gen:m3]">Cała ta banda sprawiała wrażenie <marker>śmieci</marker> podwórza.</example>
    </rule>

    <rule id="PELNI_GEN" name="pełni + genetiwus = rzeczownik">
        <pattern>
            <marker>
                <token skip="1">pełni<exception scope="previous">nie</exception></token>
            </marker>
            <token postag_regexp="yes" postag=".*gen.*"><exception postag=".*acc.*" postag_regexp="yes"/></token>
        </pattern>
        <disambig action="remove"><wd lemma="pełnić"/></disambig>
    </rule>

    <rule id="OSIEDLI" name="osiedli mieszkaniowych -> rzeczownik">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"></feature>
                <token>osiedli</token>
                <token regexp="yes">mieszkaniowych|robotnicznych|ludzkich|żydowskich|arabskich|podmiejskich|zamkniętych|miejskich</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Osiedli na laurach.</example>
        <example type="ambiguous" inputform="osiedli[osiedle/subst:pl:gen:n2,osiedlić/verb:fin:sg:ter:perf:nonrefl,osiedlić/verb:fin:sg:ter:perf:refl.nonrefl,osieść/verb:praet:pl:m1.p1:ter:perf:refl.nonrefl,osiąść/verb:praet:pl:m1.p1:ter:perf:refl.nonrefl]"
                 outputform="osiedli[osiedle/subst:pl:gen:n2]">Zachował się duży zespół <marker>osiedli</marker> mieszkaniowych.</example>
    </rule>

    <rule id="OSIEDLA" name="osiedla mieszkaniowe -> rzeczownik">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/><feature id="gender"></feature>
                <token>osiedla</token>
                <token regexp="yes">mieszkaniowe|robotniczne|ludzkie|żydowskie|arabskie|podmiejskie|zamknięte|miejskie</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Osiedli na laurach.</example>
        <example type="ambiguous" inputform="osiedla[osiedlać/verb:fin:sg:ter:imperf:refl.nonrefl,osiedle/subst:pl:acc:n2,osiedle/subst:pl:nom:n2,osiedle/subst:pl:voc:n2,osiedle/subst:sg:gen:n2]"
                 outputform="osiedla[osiedle/subst:pl:acc:n2,osiedle/subst:pl:nom:n2,osiedle/subst:pl:voc:n2]">Widzę <marker>osiedla</marker> mieszkaniowe.</example>
    </rule>

    <rule id="PODROZ_SUBST" name="podróż do... to rzeczownik">
        <pattern>
            <marker><token>podróż</token></marker>
            <token>do</token>
        </pattern>
        <disambig action="remove"><wd lemma="podrożyć"/></disambig>
    </rule>

    <rule id="MUZEUM_GOI" name="Muzeum Goi">
        <pattern>
            <token regexp="yes" inflected="yes">muzeum|obraz</token>
            <marker>
                <token>Goi</token>
            </marker>
        </pattern>
        <disambig action="remove"><wd lemma="goić"/></disambig>
    </rule>

    <rule id="mgnienie_oka" name="mgnienie oka">
        <pattern>
            <token inflected="yes">mgnienie</token>
            <marker><token>oka</token></marker>
        </pattern>
        <disambig postag="subst:sg:gen:n1"/>
    </rule>

    <rule id="RADZI_BY_INF" name="radzi jako pred">
        <pattern>
            <marker>
            <token postag="adj:pl:nom:m1.p1:pos">radzi</token>
            <token skip="4" postag="qub">by</token>
            </marker>
            <token postag="verb:inf.*" postag_regexp="yes"></token>
        </pattern>
        <disambig action="filterall"></disambig>
    </rule>

    <rule id="moze_by" name="może bym ->">
        <pattern>
            <marker>
                <token>może</token>
                <token inflected="yes">by</token>
            </marker>
        </pattern>
        <disambig action="replace"><wd pos="qub" lemma="może"/><wd pos="qub" lemma="by"/></disambig>
        <example type="ambiguous" inputform="może[może/qub,móc/verb:fin:sg:ter:imperf:nonrefl]"
                 outputform="może[może/qub]">To <marker>może</marker> byś coś zrobił?</example>
    </rule>

    <rule id="PREPARE_NOM_ACC_F" name="przygotowanie szukanie orzeczenia dla r. żeńskiego">
        <pattern>
            <marker>
                <unify>
                    <feature id="case"/><feature id="number"/><feature id="gender"/>
                    <token postag="(pact|ppas|adj).*acc.*:f.*" postag_regexp="yes"><exception postag="conj"/></token>
                    <token postag="(subst|adj).*acc.*:f.*" postag_regexp="yes"><exception postag="verb.*" postag_regexp="yes"/></token>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="straż[straż/subst:sg:acc:f,straż/subst:sg:nom:f]" outputform="straż[straż/subst:sg:acc:f]">Trzeba było zrobić tak zwaną <marker>straż</marker> broni.</example>
    </rule>


    <rulegroup name="dopełnienia w dopełniaczu" id="potencjalne_dopelnienie_dopelniaczowe">
        <rule> <!-- SKŁADNIA NEGACJI: nie + musieć/móc +verb:inf + subst/nom|gen -->
        <pattern>
            <token>nie</token>
            <token regexp="yes" inflected="yes">móc|musieć</token>
            <token postag="verb:inf.*" postag_regexp="yes"><exception>jednaj</exception><exception inflected="yes" regexp="yes">&verb_no_obj;</exception></token>
            <marker>
                <and>
                    <token postag="(:?ppron[1-3]|subst|adj):.*:(nom|gen).*" postag_regexp="yes"></token>
                    <token postag="(:?ppron[1-3]|subst|adj):.*:acc.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|ppron|adj).*|SENT_END"/></token>
                </and>
            </marker>
        </pattern>
        <disambig action="filter" postag="(subst|ppron[1-3]|adj):.*:gen.*"></disambig>
        <example type="ambiguous" inputform="przekornego[przekorny/adj:sg:acc:m1.m2:pos,przekorny/adj:sg:gen:m1.m2.m3.n1.n2:pos]"
                 outputform="przekornego[przekorny/adj:sg:gen:m1.m2.m3.n1.n2:pos]">Tam nie musiał brać <marker>przekornego</marker> chłopaka.</example>
        </rule>
        <rule> <!-- SKŁADNIA NEGACJI: nie + było/ma + subst/nom|gen -->
            <pattern>
                <token>nie</token>
                <token regexp="yes">było|ma</token>
                <marker>
                    <and>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:(nom|gen).*" postag_regexp="yes"></token>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:acc.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|ppron|adj).*|SENT_END"/></token>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="(subst|ppron[1-3]|adj):.*:gen.*"></disambig>
            <example type="ambiguous" inputform="przekornego[przekorny/adj:sg:acc:m1.m2:pos,przekorny/adj:sg:gen:m1.m2.m3.n1.n2:pos]"
                     outputform="przekornego[przekorny/adj:sg:gen:m1.m2.m3.n1.n2:pos]">Tam nie było <marker>przekornego</marker> chłopaka.</example>
        </rule>
        <rule> <!-- SKŁADNIA NEGACJI: subst/nom|gen + nie + było/ma (szyk przestawny) -->
            <pattern>
                <marker>
                    <and>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:(nom|gen).*" postag_regexp="yes"></token>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:acc.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|ppron|adj).*|SENT_END"/></token>
                    </and>
                </marker>
                <token>nie</token>
                <token regexp="yes">było|ma</token>
            </pattern>
            <disambig action="filter" postag="(subst|ppron[1-3]|adj):.*:gen.*"></disambig>
            <example type="ambiguous" inputform="chłopaka[chłopak/subst:sg:acc:m1,chłopak/subst:sg:gen:m1]"
                     outputform="chłopaka[chłopak/subst:sg:gen:m1]">A przekornego <marker>chłopaka</marker> nie było.</example>
        </rule>
        <rule> <!-- SKŁADNIA NEGACJI: nie + imps + subst acc|gen -->
            <pattern>
                <token>nie</token>
                <token postag="verb:imps.*|pant.*|pcon.*" postag_regexp="yes"><exception>jednaj</exception><exception inflected="yes" regexp="yes">&verb_no_obj;</exception></token>
                <marker>
                    <and>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:gen.*" postag_regexp="yes"></token>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:gen.*" negate_pos="yes" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|ppron|adj).*|SENT_END"/></token>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="(subst|ppron[1-3]|adj):.*:gen.*"></disambig>
            <example type="ambiguous" inputform="przekornego[przekorny/adj:sg:acc:m1.m2:pos,przekorny/adj:sg:gen:m1.m2.m3.n1.n2:pos]"
                     outputform="przekornego[przekorny/adj:sg:gen:m1.m2.m3.n1.n2:pos]">Nie wybrano <marker>przekornego</marker> chłopaka.</example>
        </rule>
        <rule> <!-- czasowniki wymagające dopełniacza -->
            <pattern>
                <token postag="verb:imps.*|pant.*|pcon.*" postag_regexp="yes" regexp="yes" inflected="yes">&verb_obj_gen;<exception inflected="yes" regexp="yes">&verb_no_obj;</exception></token>
                <marker>
                    <and>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:gen.*" postag_regexp="yes"></token>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:gen.*" negate_pos="yes" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|ppron|adj).*|SENT_END"/></token>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="(subst|ppron[1-3]|adj):.*:gen.*"></disambig>
            <example type="ambiguous" inputform="przekornego[przekorny/adj:sg:acc:m1.m2:pos,przekorny/adj:sg:gen:m1.m2.m3.n1.n2:pos]"
                     outputform="przekornego[przekorny/adj:sg:gen:m1.m2.m3.n1.n2:pos]">Poszukiwano <marker>przekornego</marker> chłopaka.</example>
        </rule>

    </rulegroup>

    <rulegroup name="dopełnienia w bierniku" id="potencjalne_dopelnienie">
        <rule> <!-- verb: pl + subst: sg -->
            <pattern>
                <token postag="verb:.*:pl.*" postag_regexp="yes"><exception inflected="yes" regexp="yes">&verb_obj_gen;|&verb_no_obj;</exception></token>
                <marker>
                    <and>
                        <token postag="(:?ppron[1-3]|subst):sg:acc.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|ppron).*|SENT_END"/></token>
                        <token postag="(:?ppron[1-3]|subst):sg:(nom|gen).*" postag_regexp="yes"></token>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="(subst|ppron[1-3]):sg:acc.*"></disambig>
            <example type="ambiguous" inputform="ślub[ślub/subst:sg:acc:m3,ślub/subst:sg:nom:m3]"
                     outputform="ślub[ślub/subst:sg:acc:m3]">Anna z Janem wzięli <marker>ślub</marker>.</example>
            <example type="untouched">Byt określa świadomość.</example>
            <example type="ambiguous" inputform="go[on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:n1.n2:ter:nakc:npraep]"
                     outputform="go[on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep]">Bierzcie <marker>go</marker>!</example>
        </rule>
        <rule> <!-- verb: sg + subst: pl -->
            <pattern>
                <token postag="verb:.*:sg.*" postag_regexp="yes"><exception>jednaj</exception><exception inflected="yes" regexp="yes">&verb_obj_gen;|&verb_no_obj;</exception></token>
                <marker>
                    <and>
                        <token postag="(:?ppron[1-3]|subst|adj):pl:acc.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|ppron|adj|ppas).*|SENT_END"/></token>
                        <token postag="(:?ppron[1-3]|subst|adj):pl:nom.*" postag_regexp="yes"><exception postag="adj:sg.*" postag_regexp="yes"/></token>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="(:?ppron[1-3]|subst|adj|ppas|ger):pl:acc.*"></disambig>
            <example type="ambiguous" inputform="śluby[ślub/subst:pl:acc:m3,ślub/subst:pl:nom:m3,ślub/subst:pl:voc:m3]"
                     outputform="śluby[ślub/subst:pl:acc:m3]">Anna składa <marker>śluby</marker>.</example>
            <example type="untouched">Byt określa świadomość.</example>
        </rule>
        <rule> <!-- verb:praet:sg + subst:sg, lecz inny rodzaj-->
            <pattern>
                <unify negate="yes"><feature id="gender"/>
                    <token postag="verb:(praet|pot):sg.*:ter.*" postag_regexp="yes"><exception inflected="yes" regexp="yes">&verb_obj_gen;|&verb_no_obj;</exception></token>
                    <marker>
                        <and>
                            <token postag="(:?ppron[1-3]|subst|adj):sg:acc.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|ppron|adj).*|SENT_END"/></token>
                            <token postag="(:?ppron[1-3]|subst|adj):sg:nom.*" postag_regexp="yes"></token>
                        </and>
                    </marker>
                </unify>
            </pattern>
            <disambig action="filter" postag="(:?ppron[1-3]|subst|adj):.*:acc.*"></disambig>
            <example type="ambiguous" inputform="ślub[ślub/subst:sg:acc:m3,ślub/subst:sg:nom:m3]"
                     outputform="ślub[ślub/subst:sg:acc:m3]">Anna składała <marker>ślub</marker>.</example>
            <example type="ambiguous" inputform="swe[swój/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,swój/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos,swój/adj:sg:acc:n1.n2:pos,swój/adj:sg:nom.voc:n1.n2:pos]"
                     outputform="swe[swój/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,swój/adj:sg:acc:n1.n2:pos]">Wiatr łamał <marker>swe</marker> zwierciadło.</example>
            <example type="untouched">Byt określa świadomość.</example>
            <example type="ambiguous" inputform="świadomość[świadomość/subst:sg:acc:f,świadomość/subst:sg:nom:f]"
                     outputform="świadomość[świadomość/subst:sg:acc:f]">Byt określałby <marker>świadomość</marker>.</example>
        </rule>
        <rule> <!-- verb:praet:pl + subst:pl, lecz inny rodzaj -->
            <pattern>
                <unify negate="yes"><feature id="gender"/>
                    <token postag="verb:(praet|pot):pl.*:ter.*" postag_regexp="yes"><exception inflected="yes" regexp="yes">&verb_obj_gen;|&verb_no_obj;</exception></token>
                    <marker>
                        <and>
                            <token postag="(:?ppron[1-3]|subst|adj):pl:acc.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|ppron|adj).*|SENT_END"/></token>
                            <token postag="(:?ppron[1-3]|subst|adj):pl:nom.*" postag_regexp="yes"></token>
                        </and>
                    </marker>
                </unify>
            </pattern>
            <disambig action="filter" postag="(:?ppron[1-3]|subst|adj):.*:acc.*"></disambig>
            <example type="ambiguous" inputform="śluby[ślub/subst:pl:acc:m3,ślub/subst:pl:nom:m3,ślub/subst:pl:voc:m3]"
                     outputform="śluby[ślub/subst:pl:acc:m3]">Anna z Janem składali <marker>śluby</marker>.</example>
            <example type="untouched">Byt określa świadomość.</example>
        </rule>
        <rule> <!-- verb:imps + subst/nom|gen -->
            <pattern>
                <token postag="verb:(imps|inf).*|pant:.*|pcon.*" postag_regexp="yes"><exception>jednaj</exception><exception inflected="yes" regexp="yes">&verb_obj_gen;|&verb_no_obj;</exception><exception regexp="yes">bądź|lub</exception></token>
                <marker>
                    <and>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:acc.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|ppron|adj).*|SENT_END"/></token>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:(nom|gen).*" postag_regexp="yes"></token>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="(subst|ppron[1-3]|adj):.*:acc.*"></disambig>
            <example type="ambiguous" inputform="ślub[ślub/subst:sg:acc:m3,ślub/subst:sg:nom:m3]"
                     outputform="ślub[ślub/subst:sg:acc:m3]">Tam brano <marker>ślub</marker>.</example>
            <example type="ambiguous" inputform="śluby[ślub/subst:pl:acc:m3,ślub/subst:pl:nom:m3,ślub/subst:pl:voc:m3]"
                     outputform="śluby[ślub/subst:pl:acc:m3]">Tam brano <marker>śluby</marker>.</example>
            <example type="ambiguous" inputform="śluby[ślub/subst:pl:acc:m3,ślub/subst:pl:nom:m3,ślub/subst:pl:voc:m3]"
                     outputform="śluby[ślub/subst:pl:acc:m3]">Oni muszą składać <marker>śluby</marker>.</example>
            <example type="untouched">Byt określa świadomość.</example>
            <example type="ambiguous" inputform="go[on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:n1.n2:ter:nakc:npraep]"
                     outputform="go[on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep]">Brano <marker>go</marker> na spytki.</example>
        </rule>
        <rule> <!-- verb pri/sec + subst/nom|gen -->
            <pattern>
                <token postag="verb:.*(pri|sec).*" postag_regexp="yes"><exception>jednaj</exception><exception inflected="yes" regexp="yes">&verb_obj_gen;|&verb_no_obj;</exception><exception regexp="yes">bądź|lub</exception></token>
                <marker>
                    <and>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:acc.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|ppron|adj).*|SENT_END"/></token>
                        <token postag="(:?ppron[1-3]|subst|adj):.*:(nom|gen).*" postag_regexp="yes"></token>
                    </and>
                </marker>
            </pattern>
            <disambig action="filter" postag="(subst|ppron[1-3]|adj):.*:acc.*"></disambig>
            <example type="ambiguous" inputform="ślub[ślub/subst:sg:acc:m3,ślub/subst:sg:nom:m3]"
                     outputform="ślub[ślub/subst:sg:acc:m3]">Tam bierzemy <marker>ślub</marker>.</example>
            <example type="ambiguous" inputform="śluby[ślub/subst:pl:acc:m3,ślub/subst:pl:nom:m3,ślub/subst:pl:voc:m3]"
                     outputform="śluby[ślub/subst:pl:acc:m3]">Tam bierzecie <marker>śluby</marker>.</example>
            <example type="untouched">Byt określa świadomość.</example>
            <example type="ambiguous" inputform="go[on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:m1.m2.m3:ter:nakc:npraep,on/ppron3:sg:gen:n1.n2:ter:nakc:npraep]"
                     outputform="go[on/ppron3:sg:acc:m1.m2.m3:ter:nakc:npraep]">Bierz <marker>go</marker> na spytki.</example>
        </rule>
    </rulegroup>

    <rulegroup name="Unifikacja rzeczowników z innymi (koordynacja)" id="Unify_2_3_noun">
        <rule>
            <pattern>
                <unify>
                    <feature id="case"><type id="acc"/><type id="inst"/><type id="gen"/><type id="dat"/><type id="loc"/><type id="nom"/></feature>
                    <token postag="(?:subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|depr|ger).*"/><exception scope="previous" postag_regexp="yes" postag="(?:ger|subst).*"/></token>
                    <unify-ignore>
                        <token regexp="yes">[,i]|oraz|ani|lub|albo|bądź|czy</token>
                    </unify-ignore>
                    <token postag="(?:subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|depr|ger).*"/></token>
                    <unify-ignore>
                        <token regexp="yes">[,i]|oraz|ani|lub|albo|bądź|czy</token>
                    </unify-ignore>
                    <token postag="(?:subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|depr|ger).*"/><exception>nic</exception></token>
                </unify>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="konie[konie/subst:pl:acc:p3,konie/subst:pl:nom:p3,konie/subst:pl:voc:p3,koń/subst:pl:acc:m2,koń/subst:pl:nom:m2,koń/subst:pl:voc:m2]"
                     outputform="konie[konie/subst:pl:acc:p3,koń/subst:pl:acc:m2]">Patrzył na kozy, <marker>konie</marker> i robaki.</example>
            <example type="untouched">Spojrzał na nową, ale się nie odezwał.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="case"><type id="acc"/><type id="inst"/><type id="gen"/><type id="dat"/><type id="loc"/><type id="nom"/></feature>
                        <feature id="number"/>
                        <token postag="(?:subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|depr|ger).*"/><exception scope="previous" postag_regexp="yes" postag="(?:ger|subst).*"/></token>
                        <unify-ignore>
                            <token regexp="yes">[,i]|oraz|ani|lub|albo|bądź|czy</token>
                        </unify-ignore>
                        <token postag="(?:subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|depr|ger).*"/><exception>nic</exception></token>
                    </unify>
                </marker>
                    <token postag="interp:comma|SENT_END" postag_regexp="yes"/>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="konie[konie/subst:pl:acc:p3,konie/subst:pl:nom:p3,konie/subst:pl:voc:p3,koń/subst:pl:acc:m2,koń/subst:pl:nom:m2,koń/subst:pl:voc:m2]"
                     outputform="konie[konie/subst:pl:acc:p3,koń/subst:pl:acc:m2]">Patrzył na kozy i <marker>konie</marker>.</example>
            <example type="untouched">Spojrzał na nową, ale się nie odezwał.</example>
            <example type="untouched">Pokazały się owoce nauki i wyniki poszybowały w górę.</example>
        </rule>
    </rulegroup>




    <!-- now not that greedy :) -->
    <rulegroup name="unifikacja przymiotnika z rzeczownikiem" id="unify_adj_subst">
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/> <feature id="case"/>
                        <token postag="(?:adj|ppas).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(adj|ppas|depr|subst|comp:comma).*"/></token>
                        <token postag="(?:adj|ppas).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(adj|ppas|depr|subst|comp:comma).*"/></token>
                        <token postag="(subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr).*|SENT_END"/></token>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="młoda[młoda/subst:sg:nom:f,młoda/subst:sg:voc:f,młody/adj:sg:nom.voc:f:pos]"
                     outputform="młoda[młody/adj:sg:nom.voc:f:pos]">Piękna <marker>młoda</marker> kobieta</example>
            <example type="ambiguous" inputform="dawnym[dawny/adj:pl:dat:m1.m2.m3.f.n1.n2.p1.p2.p3:pos,dawny/adj:sg:inst:m1.m2.m3.n1.n2:pos,dawny/adj:sg:loc:m1.m2.m3.n1.n2:pos]"
                     outputform="dawnym[dawny/adj:sg:inst:m1.m2.m3.n1.n2:pos]">Uklękła przy starym i <marker>dawnym</marker> kurowskim obyczajem zaśpiewała stłumionym nieco głosem.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/> <feature id="case"/>
                        <token postag="(?:adj|ppas).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(adj|ppas|depr|subst|comp:comma).*"/></token>
                        <token postag="(subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr).*|SENT_END"/></token>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="Młoda[młoda/subst:sg:nom:f,młoda/subst:sg:voc:f,młody/adj:sg:nom.voc:f:pos]"
                     outputform="Młoda[młody/adj:sg:nom.voc:f:pos]"><marker>Młoda</marker> kobieta</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                        <token postag="(?:subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr).*"/></token>
                        <token postag="(?:adj|ppas|pact).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|ppas|pact|subst).*|SENT_END"/></token>
                    </unify>
                </marker>
                <token><exception postag="(subst|ger).*" postag_regexp="yes"/></token>
            </pattern>
            <disambig action="unify"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/> <feature id="case"/>
                        <token postag="adj.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(adj|subst|comp:comma).*"/></token>
                        <token postag="(subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr).*"/></token>
                        <unify-ignore>
                            <token regexp="yes">[,i]|oraz|ani|lub|albo|bądź|czy</token>
                        </unify-ignore>
                        <token postag="(subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr).*|SENT_END"/></token>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="wady[wad/subst:pl:acc:m3,wad/subst:pl:nom:m3,wada/subst:pl:acc:f,wada/subst:pl:nom:f]"
                     outputform="wady[wad/subst:pl:acc:m3]">Obnażała nasze błędy i <marker>wady</marker>.</example>
        </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="number"/><feature id="gender"/> <feature id="case"/>
                    <token postag="pact.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="pact.*"/></token>
                    <token postag="(?:subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr).*|SENT_END"/></token>
                </unify>
            </pattern>
            <disambig action="unify"/>
        </rule>
        <rule>
            <pattern>
                <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                    <token postag="(?:subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr).*"/></token>
                    <token postag="pact.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="pact.*|SENT_END"/></token>
                </unify>
            </pattern>
            <disambig action="unify"/>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/> <feature id="case"/>
                        <token max="2" postag="adj.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(adj|subst|comp:comma).*"/></token>
                        <token postag="(subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr|adj).*"/></token>
                    </unify>
                </marker>
                <token postag="SENT_END"/>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="drogi[droga/subst:pl:acc:f,droga/subst:pl:nom:f,droga/subst:pl:voc:f,droga/subst:sg:gen:f,drogi/adj:sg:acc:m3:pos,drogi/adj:sg:nom.voc:m1.m2.m3:pos,drogi/subst:pl:acc:p3,drogi/subst:pl:nom:p3,drogi/subst:pl:voc:p3]"
                     outputform="drogi[droga/subst:sg:gen:f]">Szukałem innej <marker>drogi</marker>.</example>
        </rule>
    </rulegroup>

    <rule id="unify_ten_subst" name="unifikacja ten + rzeczownik">
        <pattern>
            <marker>
                <unify>
                    <feature id="number"/><feature id="gender"/><feature id="case"/>
                    <token postag="adj.*" postag_regexp="yes" inflected="yes">ten</token>
                    <token postag="(subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr).*|SENT_END"/></token>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="Ci[ci/qub,ten/adj:pl:nom.voc:m1.p1:pos,ty/ppron12:sg:dat:m1.m2.m3.f.n1.n2:sec:nakc]"
                 outputform="Ci[ten/adj:pl:nom.voc:m1.p1:pos]"><marker>Ci</marker> smarkacze byli nieznośni.</example>
    </rule>

    <rule id="unify_ten_adj_subst" name="unifikacja ten + przymiotnik+ rzeczownik">
        <pattern>
            <marker>
                <unify>
                    <feature id="number"/><feature id="gender"/><feature id="case"/>
                    <token postag="adj.*" postag_regexp="yes" inflected="yes">ten</token>
                    <token postag="adj.*" postag_regexp="yes"/>
                    <token postag="(subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|ger|depr).*|SENT_END"/></token>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="Ci[ci/qub,ten/adj:pl:nom.voc:m1.p1:pos,ty/ppron12:sg:dat:m1.m2.m3.f.n1.n2:sec:nakc]"
                 outputform="Ci[ten/adj:pl:nom.voc:m1.p1:pos]"><marker>Ci</marker> cholerni smarkacze byli nieznośni.</example>
    </rule>


    <rule id="unify_sposob" name="unifikacja rzeczownika „sposób">
        <pattern>
            <marker>
                <unify>
                    <feature id="number"/><feature id="gender"/><feature id="case"/>
                    <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"/>
                    <token>sposób</token>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="sposób[sposobić/verb:impt:sg:sec:imperf:refl.nonrefl,sposób/pred,sposób/subst:sg:acc:m3,sposób/subst:sg:nom:m3]"
                 outputform="sposób[sposób/subst:sg:acc:m3]">Zrobiłem to w ten <marker>sposób</marker>.</example>
        <example type="untouched">Acanie, sposób się do wojny!</example>
    </rule>

    <rule id="idzie_o" name="idzie to czasownik z o">
        <pattern>
            <marker>
            <token>idzie</token>
            </marker>
            <token>o</token>
        </pattern>
        <disambig postag="verb:fin:sg:ter:imperf:nonrefl"/>
    </rule>

    <rulegroup id="SUBST_NOM_VOC_VERB" name="potencjalny podmiot i orzeczenie">
        <rule>
            <pattern case_sensitive="yes">
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception regexp="yes">[tj]aki|rad</exception></token>
                        <token postag="verb:(?:praet|pot):.*ter.*" postag_regexp="yes"><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
                <token><exception postag="verb:(?:praet|pot|fin|bedzie|imp.|pred|winien).*" postag_regexp="yes"></exception></token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="miały[miał/subst:pl:acc:m3,miał/subst:pl:nom:m3,miał/subst:pl:voc:m3,mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]"
                     outputform="miały[mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]">Wczoraj kobiety <marker>miały</marker> dużo pracy.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception regexp="yes">[tj]aki|rad</exception></token>
                        <token postag="(?:adj|ppas|pact).*:nom.*" postag_regexp="yes"/>
                        <token postag="verb:(?:praet|pot):.*ter.*" postag_regexp="yes"><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
                <token><exception postag="verb:(?:praet|pot|fin|bedzie|imp.|pred|winien).*" postag_regexp="yes"></exception></token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="miały[miał/subst:pl:acc:m3,miał/subst:pl:nom:m3,miał/subst:pl:voc:m3,mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]"
                     outputform="miały[mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]">Wczoraj kobiety nieczyste <marker>miały</marker> dużo pracy.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception regexp="yes">[tj]aki|rad</exception></token>
                        <unify-ignore>
                            <token regexp="yes">jego|ich|jej</token>
                        </unify-ignore>
                        <token postag="verb:(?:praet|pot):.*ter.*" postag_regexp="yes"><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
                <token><exception postag="verb:(?:praet|pot|fin|bedzie|imp.|pred|winien).*" postag_regexp="yes"></exception></token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="miały[miał/subst:pl:acc:m3,miał/subst:pl:nom:m3,miał/subst:pl:voc:m3,mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]"
                     outputform="miały[mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]">Wczoraj koty jego <marker>miały</marker> używanie.</example>
        </rule>
        <rule>
            <pattern case_sensitive="yes">
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception regexp="yes">[tj]aki</exception></token>
                        <unify-ignore>
                            <token postag="adv(?::pos)?|qub" postag_regexp="yes"><exception postag="conj|comp.*" postag_regexp="yes"/><exception>jak</exception></token>
                        </unify-ignore>
                        <token postag="verb:(?:praet|pot):.*ter.*" postag_regexp="yes"><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
                <token><exception postag="verb:(?:praet|pot|fin|bedzie|imp.|pred|winien).*" postag_regexp="yes"></exception></token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="miały[miał/subst:pl:acc:m3,miał/subst:pl:nom:m3,miał/subst:pl:voc:m3,mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]"
                     outputform="miały[mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]">Wczoraj kobiety nadal <marker>miały</marker> dużo pracy.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception scope="previous" regexp="yes">był[ao]?</exception><exception scope="previous">nie</exception><exception regexp="yes">[tj]ak[ia]</exception></token>
                        <token postag="verb:fin:.*ter.*" postag_regexp="yes"><exception>je</exception><exception>mnie</exception><exception>nasza</exception><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
                <token><exception postag="verb:(?:praet|pot|fin|bedzie|imp.|pred|winien).*" postag_regexp="yes"></exception></token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="stanowi[stan/subst:sg:dat:m3,stanowić/verb:fin:sg:ter:imperf:refl.nonrefl,stanowy/adj:pl:nom.voc:m1.p1:pos]" outputform="stanowi[stanowić/verb:fin:sg:ter:imperf:refl.nonrefl]">To, co <marker>stanowi</marker> treść ich wyobraźni ma charakter intersubiektywny i postrzegalny także przez innych.</example>
            <example type="ambiguous" inputform="on[on/adj:sg:acc:m3:pos,on/adj:sg:nom.voc:m1.m2.m3:pos,on/ppron3:sg:nom:m1.m2.m3:ter:akc.nakc:praep.npraep]"
                     outputform="on[on/ppron3:sg:nom:m1.m2.m3:ter:akc.nakc:praep.npraep]">Nie lubię sposobu, w jaki <marker>on</marker> mówi.</example>
            <example type="untouched">A to był kostur pastuszy.</example>
            <example type="untouched">Trzeba było odbyć tak zwaną straż broni.</example>
            <example type="untouched">Ukazało się w r. 1670 to pierwsze wydanie Myśli, tzw.* wydanie Port-Royalu*.</example>
        </rule>
        <rule>
            <pattern>
                <token>,</token>
                <marker>
                    <unify>
                        <feature id="number"/>
                        <token postag="adj:.*nom.*" postag_regexp="yes" inflected="yes" regexp="yes">jaki|który</token>
                        <token postag="verb:fin:.*ter.*" postag_regexp="yes"><exception>je</exception><exception>mnie</exception><exception>nasza</exception><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
                <token><exception postag="verb:(?:praet|pot|fin|bedzie|imp.|pred|winien).*" postag_regexp="yes"></exception></token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="stanowi[stan/subst:sg:dat:m3,stanowić/verb:fin:sg:ter:imperf:refl.nonrefl,stanowy/adj:pl:nom.voc:m1.p1:pos]" outputform="stanowi[stanowić/verb:fin:sg:ter:imperf:refl.nonrefl]">Cel, jaki <marker>stanowi</marker> treść ich wyobraźni, ma charakter intersubiektywny.</example>
            <example type="ambiguous" inputform="który[który/adj:sg:acc:m3:pos,który/adj:sg:nom.voc:m1.m2.m3:pos,który/comp:comma]"
                     outputform="który[który/adj:sg:nom.voc:m1.m2.m3:pos]">To człowiek, <marker>który</marker> mówi.</example>
            <example type="untouched">A to był kostur pastuszy.</example>
            <example type="untouched">Trzeba było odbyć tak zwaną straż broni.</example>
            <example type="untouched">Ukazało się w r. 1670 to pierwsze wydanie Myśli, tzw.* wydanie Port-Royalu*.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception scope="previous" regexp="yes">był[ao]?</exception><exception scope="previous">nie</exception><exception regexp="yes">[tj]ak[ia]</exception></token>
                        <token postag="(?:adj|ppas|pact).*:nom.*" postag_regexp="yes"/>
                        <token postag="verb:fin:.*ter.*" postag_regexp="yes"><exception>je</exception><exception>mnie</exception><exception>nasza</exception><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
                <token><exception postag="verb:(?:praet|pot|fin|bedzie|imp.|pred|winien).*" postag_regexp="yes"></exception></token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="moje[mój/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,mój/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos]"
                     outputform="moje[mój/adj:pl:nom.voc:m2.m3.f.n1.n2.p2.p3:pos]">Nerwy <marker>moje</marker> są chore.</example>
            <example type="untouched">A to był kostur pastuszy.</example>
            <example type="untouched">Trzeba było odbyć tak zwaną straż broni.</example>
            <example type="untouched">Ukazało się w r. 1670 to pierwsze wydanie Myśli, tzw.* wydanie Port-Royalu*.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception scope="previous" regexp="yes">był[ao]?|jest</exception><exception scope="previous">nie</exception><exception regexp="yes">[tj]ak[ia]</exception></token>
                        <unify-ignore>
                            <token postag="adv(?::pos)?|qub" postag_regexp="yes"><exception postag="conj|comp.*" postag_regexp="yes"/><exception>jak</exception></token>
                        </unify-ignore>
                        <token postag="verb:fin:.*ter.*" postag_regexp="yes"><exception>je</exception><exception>mnie</exception><exception>nasza</exception><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
                <token><exception postag="verb:(?:praet|pot|fin|bedzie|imp.|pred|winien).*" postag_regexp="yes"></exception></token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="stanowi[stan/subst:sg:dat:m3,stanowić/verb:fin:sg:ter:imperf:refl.nonrefl,stanowy/adj:pl:nom.voc:m1.p1:pos]" outputform="stanowi[stanowić/verb:fin:sg:ter:imperf:refl.nonrefl]">To, co wciąż <marker>stanowi</marker> treść ich wyobraźni ma charakter intersubiektywny i postrzegalny także przez innych.</example>
            <example type="ambiguous" inputform="on[on/adj:sg:acc:m3:pos,on/adj:sg:nom.voc:m1.m2.m3:pos,on/ppron3:sg:nom:m1.m2.m3:ter:akc.nakc:praep.npraep]"
                     outputform="on[on/ppron3:sg:nom:m1.m2.m3:ter:akc.nakc:praep.npraep]">Nie lubię sposobu, w jaki <marker>on</marker> nadal mówi.</example>
            <example type="untouched">A to był kostur pastuszy.</example>
            <example type="untouched">Trzeba było odbyć tak zwaną straż broni.</example>
            <example type="untouched">Ukazało się w r. 1670 to pierwsze wydanie Myśli, tzw.* wydanie Port-Royalu*.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception scope="previous" regexp="yes">był[ao]?|jest</exception><exception scope="previous">nie</exception><exception regexp="yes">[tj]ak[ia]</exception></token>
                        <unify-ignore>
                            <token regexp="yes">jego|jej|ich</token>
                        </unify-ignore>
                        <token postag="verb:fin:.*ter.*" postag_regexp="yes"><exception>je</exception><exception>mnie</exception><exception>nasza</exception><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
                <token><exception postag="verb:(?:praet|pot|fin|bedzie|imp.|pred|winien).*" postag_regexp="yes"></exception></token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="kot[kot/subst:sg:nom:m1,kot/subst:sg:nom:m2,kota/subst:pl:gen:f]"
                     outputform="kot[kot/subst:sg:nom:m1,kot/subst:sg:nom:m2]">Nie lubię sposobu, w jaki <marker>kot</marker> jego jada myszy.</example>
            <example type="untouched">A to był kostur pastuszy.</example>
            <example type="untouched">Trzeba było odbyć tak zwaną straż broni.</example>
            <example type="untouched">Ukazało się w r. 1670 to pierwsze wydanie Myśli, tzw.* wydanie Port-Royalu*.</example>
        </rule>

        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception scope="previous" regexp="yes">był[ao]?</exception><exception scope="previous">nie</exception><exception regexp="yes">[tj]ak[ia]</exception></token>
                        <token postag="verb:bedzie:.*ter.*" postag_regexp="yes"><exception>je</exception><exception>mnie</exception><exception>nasza</exception><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
                <token><exception postag="verb:(?:pot|fin|bedzie|imp.|pred|winien).*" postag_regexp="yes"></exception></token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="robot[robot/subst:sg:acc:m3,robot/subst:sg:nom:m2,robot/subst:sg:nom:m3]"
                     outputform="robot[robot/subst:sg:nom:m2,robot/subst:sg:nom:m3]">Mój <marker>robot</marker> będzie przygotowywać posiłki.</example>
            <example type="untouched">A to był kostur pastuszy.</example>
            <example type="untouched">Trzeba było odbyć tak zwaną straż broni.</example>
            <example type="untouched">Ukazało się w r. 1670 to pierwsze wydanie Myśli, tzw.* wydanie Port-Royalu*.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception scope="previous" regexp="yes">był[ao]?</exception><exception scope="previous">nie</exception><exception regexp="yes">[tj]ak[ia]</exception></token>
                        <unify-ignore>
                            <token postag="adv(?::pos)?|qub" postag_regexp="yes"><exception postag="conj|comp.*" postag_regexp="yes"/><exception>jak</exception></token>
                        </unify-ignore>
                        <token postag="verb:bedzie:.*ter.*" postag_regexp="yes"><exception>je</exception><exception>mnie</exception><exception>nasza</exception><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
                <token><exception postag="verb:(?:pot|fin|bedzie|imp.|pred|winien).*" postag_regexp="yes"></exception></token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="robot[robot/subst:sg:acc:m3,robot/subst:sg:nom:m2,robot/subst:sg:nom:m3]"
                     outputform="robot[robot/subst:sg:nom:m2,robot/subst:sg:nom:m3]">Mój <marker>robot</marker> nadal będzie przygotowywać posiłki.</example>
            <example type="untouched">A to był kostur pastuszy.</example>
            <example type="untouched">Trzeba było odbyć tak zwaną straż broni.</example>
            <example type="untouched">Ukazało się w r. 1670 to pierwsze wydanie Myśli, tzw.* wydanie Port-Royalu*.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/><feature id="person"/>
                        <token postag="ppron12.*:nom.*" postag_regexp="yes"></token>
                        <token postag="verb:.*" postag_regexp="yes"><exception>je</exception><exception>mnie</exception><exception>nasza</exception><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="miałem[miał/subst:sg:inst:m3,mieć/verb:praet:sg:m1.m2.m3:pri:imperf:refl.nonrefl]"
                     outputform="miałem[mieć/verb:praet:sg:m1.m2.m3:pri:imperf:refl.nonrefl]">Myślisz, że to ja <marker>miałem</marker> zrobić?</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/><feature id="person"/>
                        <token postag="ppron12.*:nom.*" postag_regexp="yes"></token>
                        <unify-ignore>
                            <token postag="adv(?::pos)?|qub" postag_regexp="yes"><exception postag="conj|comp.*" postag_regexp="yes"/><exception>jak</exception></token>
                        </unify-ignore>
                        <token postag="verb:.*" postag_regexp="yes"><exception>je</exception><exception>mnie</exception><exception>nasza</exception><exception regexp="yes">\p{Lu}\p{Ll}+</exception></token>
                    </unify>
                </marker>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="miałem[miał/subst:sg:inst:m3,mieć/verb:praet:sg:m1.m2.m3:pri:imperf:refl.nonrefl]"
                     outputform="miałem[mieć/verb:praet:sg:m1.m2.m3:pri:imperf:refl.nonrefl]">Myślisz, że to ja naprawdę <marker>miałem</marker> zrobić?</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception scope="previous" regexp="yes">był[ao]?</exception><exception scope="previous">nie</exception><exception regexp="yes">[tj]ak[ia]</exception></token>
                        <token skip="-1" postag="verb:winien.*:ter.*" postag_regexp="yes"></token>
                    </unify>
                </marker>
                <token postag="verb:inf.*" postag_regexp="yes"/>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="powinna[powinien/verb:winien:sg:f:ter:imperf:nonrefl,powinny/adj:sg:nom.voc:f:pos]"
                     outputform="powinna[powinien/verb:winien:sg:f:ter:imperf:nonrefl]">Gazeta <marker>powinna</marker> być drukowana.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <unify>
                        <feature id="number"/><feature id="gender"/>
                        <token postag="subst.*nom.*|ppron.*:nom.*:ter.*" postag_regexp="yes"><exception postag="verb:winien:.*" postag_regexp="yes"/><exception scope="previous" regexp="yes">był[ao]?</exception><exception scope="previous">nie</exception><exception regexp="yes">[tj]ak[ia]</exception></token>
                        <unify-ignore>
                            <token postag="adv(?::pos)?|qub" postag_regexp="yes"><exception postag="conj|comp.*" postag_regexp="yes"/><exception>jak</exception></token>
                        </unify-ignore>
                        <token skip="-1" postag="verb:winien.*:ter.*" postag_regexp="yes"></token>
                    </unify>
                </marker>
                <token postag="verb:inf.*" postag_regexp="yes"/>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="powinna[powinien/verb:winien:sg:f:ter:imperf:nonrefl,powinny/adj:sg:nom.voc:f:pos]"
                     outputform="powinna[powinien/verb:winien:sg:f:ter:imperf:nonrefl]">Gazeta nadal <marker>powinna</marker> być drukowana.</example>
        </rule>
    </rulegroup>

    <rule id="CI_PANT" name="ci = ten, kiedy przed imiesłowem">
        <pattern>
            <token>ci</token>
            <token>,</token>
            <token postag="pant:perf.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="adj:pl:nom.voc:m1.p1:pos"></disambig>
        <example type="ambiguous" inputform="ci[ci/qub,ten/adj:pl:nom.voc:m1.p1:pos,ty/ppron12:sg:dat:m1.m2.m3.f.n1.n2:sec:nakc]"
                 outputform="ci[ten/adj:pl:nom.voc:m1.p1:pos]">A <marker>ci</marker>, ujrzawszy królewnę, zjedli krzesło.</example>
    </rule>

  <!-- specjalnie robimy to drugi raz... to jest kaskada! -->
    <rule name="Przyimek z rzeczownikiem po unifikacji" id="PREP_SUBST_2">    
        <pattern>
            <unify> <feature id="case"/>
                <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*" negate_pos="yes" postag_regexp="yes"/><exception>co</exception></token>
                <token postag="(adj|subst|ppron.*|ppas|pact):.*" postag_regexp="yes"><exception>co</exception><exception postag="qub"/></token>
            </unify>
        </pattern>
        <disambig action="unify"/>        
        <example type="untouched">Tu mamy piękny przykład.</example>
        <example type="untouched">Łaciny używamy na co dzień.</example>        
        <!-- example type="ambiguous" inputform="mamy[mama/subst:pl:acc:f,mama/subst:pl:nom:f,mama/subst:pl:voc:f,mama/subst:sg:gen:f]" outputform="mamy[mama/subst:sg:gen:f]">Idę do <marker>mamy</marker>.</example>  -->
    </rule>


    <rule name="Unifikacja przymiotników z innymi" id="Unify_adj_comma">
        <pattern>
            <unify>
                <feature id="number"/><feature id="gender"/> <feature id="case"/>
                <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|ppas|subst).*"/></token>
                <unify-ignore>
                    <token regexp="yes">[,i]|oraz|ani|lub|albo|bądź|czy</token>
                </unify-ignore>
                <token postag="(?:adj|pact|ppas).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|ppas|subst).*"/></token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="młodego[młody/adj:sg:acc:m1.m2:pos,młody/adj:sg:gen:m1.m2.m3.n1.n2:pos]"
                 outputform="młodego[młody/adj:sg:gen:m1.m2.m3.n1.n2:pos]">Mówię do ładnego, <marker>młodego</marker> chłopca.</example>
        <example type="untouched">Spojrzał na nową, ale się nie odezwał.</example>
    </rule>


    <rule name="bądź i lub jako spójniki w ogóle między dwoma przymiotnikami" id="badz_lub">
        <pattern>
            <token postag="(?:adj|pact|subst|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|subst|depr|ger).*"/></token>
            <token min="0" max="1">,</token>
            <marker><token regexp="yes" postag="conj">bądź|lub</token></marker>
            <token postag="(?:adj|pact|subst|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|subst|depr|ger).*|SENT_END"/></token>
        </pattern>
        <disambig action="filter" postag="conj|comp:comma"></disambig>
        <example type="untouched">Bądź zdrów!</example>
        <example type="untouched">Ludwiku, bądź zdrów!</example>
        <example type="untouched">Lub lubelskie!</example>
        <example type="untouched">Ludwiku, lub lubelskie!</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[bądź/comp:comma,bądź/conj]">Połysk: najczęściej szklisty, tłusty <marker>bądź</marker> perłowy</example>
    </rule>

    <rule name="Bądź i lub jako spójnik" id="badz_koordynacja_subst">
        <pattern>
            <unify>
                <feature id="case"><type id="acc"/><type id="inst"/><type id="gen"/><type id="dat"/><type id="loc"/></feature>
                <feature id="number"/>
                <token postag="(?:subst|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|depr|subst|ger).*"/><exception scope="previous" postag_regexp="yes" postag="(?:ger|subst).*"/></token>
                <unify-ignore>
                    <token min="0" max="1">,</token>
                    <marker><token regexp="yes">bądź|lub|i|czy</token></marker>
                </unify-ignore>
                <token postag="(?:subst|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|depr|subst|ger).*|SENT_END"/><exception regexp="yes">nic|co</exception></token>
            </unify>
        </pattern>
        <disambig action="filter" postag="conj"/>
        <example type="ambiguous" inputform="bądź[bądź/comp:comma,bądź/conj]"
                 outputform="bądź[bądź/conj]">Restrykcyjne przepisy aborcyjne mają też niektóre terytoria <marker>bądź</marker> regiony.</example>
        <example type="ambiguous" inputform="bądź[bądź/comp:comma,bądź/conj]"
                 outputform="bądź[bądź/conj]">Restrykcyjne przepisy aborcyjne mają też niektóre terytoria, <marker>bądź</marker> regiony.</example>
        <example type="untouched">Pokazały się owoce nauki i wyniki poszybowały w górę.</example>
    </rule>

    <rule name="Bądź, lub, i, czy jako spójniki w ramach grupy nominalnej" id="badz_koordynacja_adj_subst">
        <pattern>
            <unify>
                <feature id="case"><type id="acc"/><type id="inst"/><type id="gen"/><type id="dat"/><type id="loc"/><type id="nom"/></feature>
                <feature id="gender"/>
                <feature id="number"/>
                <token postag="(?:adj|pact).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|subst).*"/></token>
                <unify-ignore>
                    <token min="0" max="1">,</token>
                    <marker><token regexp="yes">bądź|lub|i|czy</token></marker>
                </unify-ignore>
                <token postag="(?:adj|pact).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|subst).*"/></token>
                <token postag="(?:subst|ger|depr).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|subst|depr|ger).*|SENT_END"/></token>
            </unify>
        </pattern>
        <disambig action="filter" postag="conj"/>
        <example type="ambiguous" inputform="bądź[bądź/comp:comma,bądź/conj]"
                 outputform="bądź[bądź/conj]">Restrykcyjne przepisy aborcyjne mają też niektóre autonomiczne <marker>bądź</marker> zależne terytoria.</example>
        <example type="ambiguous" inputform="bądź[bądź/comp:comma,bądź/conj]"
                 outputform="bądź[bądź/conj]">Restrykcyjne przepisy aborcyjne mają też niektóre autonomiczne, <marker>bądź</marker> zależne terytoria.</example>

    </rule>

    <rule name="Bądź, lub, i, czy jako spójniki w ramach grupy nominalnej" id="badz_koordynacja_subst_adj">
        <pattern>
            <unify>
                <feature id="case"><type id="acc"/><type id="inst"/><type id="gen"/><type id="dat"/><type id="loc"/><type id="nom"/></feature>
                <feature id="gender"/>
                <feature id="number"/>
                <token postag="(?:subst|ger|depr).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|subst|depr|ger).*|SENT_END"/></token>
                <token postag="(?:adj|pact).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|subst).*"/></token>
                <unify-ignore>
                    <token min="0" max="1">,</token>
                    <marker><token regexp="yes">bądź|lub|i|czy</token></marker>
                </unify-ignore>
                <token postag="(?:adj|pact).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|subst).*"/></token>

            </unify>
        </pattern>
        <disambig action="filter" postag="conj"/>
        <example type="ambiguous" inputform="bądź[bądź/comp:comma,bądź/conj]"
                 outputform="bądź[bądź/conj]">Restrykcyjne przepisy aborcyjne mają też niektóre terytoria autonomiczne <marker>bądź</marker> zależne.</example>
        <example type="ambiguous" inputform="bądź[bądź/comp:comma,bądź/conj]"
                 outputform="bądź[bądź/conj]">Restrykcyjne przepisy aborcyjne mają też niektóre terytoria autonomiczne, <marker>bądź</marker> zależne.</example>
    </rule>

    <rule name="Bądź, lub, i, czy jako spójniki w ramach grupy nominalnej" id="badz_koordynacja_adv_adj_com_com">
        <pattern>
            <token regexp="yes">coraz|dużo|minimalnie|nieco|trochę|znacznie|wiele|.*krotnie</token>
            <marker>
            <unify>
                <feature id="case"><type id="acc"/><type id="inst"/><type id="gen"/><type id="dat"/><type id="loc"/><type id="nom"/></feature>
                <feature id="gender"/>
                <feature id="number"/>
                <token postag="adj.*:com" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|subst).*"/></token>
                <unify-ignore>
                    <token min="0" max="1">,</token>
                    <marker><token regexp="yes">bądź|lub|i|czy</token></marker>
                </unify-ignore>
                <token postag="adj.*:com" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|pact|subst).*"/></token>
            </unify>
            </marker>
        </pattern>
        <disambig action="filter" postag="conj"/>
        <example type="ambiguous" inputform="bądź[bądź/comp:comma,bądź/conj]"
                 outputform="bądź[bądź/conj]">Restrykcyjne przepisy aborcyjne mają też niektóre terytoria znacznie większe <marker>bądź</marker> piękniejsze.</example>
    </rule>


    <rule name="Bądź i lub jako spójnik" id="badz_koordynacja_ppas">
        <pattern>
            <unify>
                <feature id="case"><type id="acc"/><type id="inst"/><type id="gen"/><type id="dat"/><type id="loc"/><type id="nom"/></feature>
                <token postag="(?:ppas).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|ppas).*"/></token>
                <unify-ignore>
                    <token min="0" max="1">,</token>
                    <marker><token regexp="yes">bądź|lub|i|czy</token></marker>
                </unify-ignore>
                <token postag="(?:ppas).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:adj|ppas).*|SENT_END"/></token>
            </unify>
        </pattern>
        <disambig action="filter" postag="conj"/>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[bądź/conj]">Restrykcyjne przepisy aborcyjne mają też niektóre terytoria rządzone <marker>bądź</marker> podbijane.</example>
        <example type="ambiguous" inputform="bądź[być/verb:impt:sg:sec:imperf:nonrefl,bądź/comp:comma,bądź/conj,bądź/qub]"
                 outputform="bądź[bądź/conj]">Restrykcyjne przepisy aborcyjne mają też niektóre terytoria rządzone, <marker>bądź</marker> podbijane.</example>
    </rule>


    <rulegroup id="BYC_ADJ_ACC_NOM" name="być + przymiotnik orzecznikowy -> mianownik">
        <rule>
            <pattern>
                <unify><feature id="number"/>
                    <marker>
                        <token inflected="yes">być</token>
                        <and>
                            <token postag="(?:adj|ppas):.*nom.*" postag_regexp="yes"/>
                            <token postag="(?:adj|ppas):.*acc.*" postag_regexp="yes"/>
                        </and>
                    </marker>
                </unify>
                <token postag="SENT_END|(?:interp|comp):comma" postag_regexp="yes"/>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="winny[winny/adj:sg:acc:m3:pos,winny/adj:sg:nom.voc:m1.m2.m3:pos]"
                     outputform="winny[winny/adj:sg:nom.voc:m1.m2.m3:pos]">On był <marker>winny</marker>.</example>
            <example type="untouched">On był niewinną ofiarą.</example>
        </rule>
        <rule>
            <pattern>
                <unify><feature id="number"/>
                    <marker>
                        <token inflected="yes">być</token>
                        <and>
                            <token postag="ppas:.*nom.*" postag_regexp="yes"/>
                            <token postag="ppas:.*acc.*" postag_regexp="yes"/>
                        </and>
                    </marker>
                </unify>
                <token inflected="yes">przez</token>
            </pattern>
            <disambig action="unify"/>
            <example type="ambiguous" inputform="zaniedbany[zaniedbany/adj:sg:acc:m3:pos,zaniedbany/adj:sg:nom.voc:m1.m2.m3:pos,zaniedbać/ppas:sg:acc:m3:perf:aff,zaniedbać/ppas:sg:nom.voc:m1.m2.m3:perf:aff]"
                     outputform="zaniedbany[zaniedbać/ppas:sg:nom.voc:m1.m2.m3:perf:aff]">On był <marker>zaniedbany</marker> przez rodziców.</example>
            <example type="untouched">On był niewinną ofiarą.</example>
        </rule>
    </rulegroup>

    <rule name="rzeczowniki z dywizem" id="unify_noun_hyphen">
    <pattern case_sensitive="yes">
        <unify>
        <feature id="case"/><feature id="number"/>
        <token postag="(?:subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|depr|ger).*"/></token>
        <unify-ignore>
            <token spacebefore="no">-</token>
        </unify-ignore>
        <token postag="(?:subst|depr|ger).*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="(?:subst|depr|ger).*"/></token>
        </unify>
    </pattern>
    <disambig action="unify"/>
        <example type="ambiguous" inputform="kota[kot/subst:sg:acc:m1,kot/subst:sg:acc:m2,kot/subst:sg:gen:m1,kot/subst:sg:gen:m2,kota/subst:sg:nom:f]"
                 outputform="kota[kot/subst:sg:acc:m1,kot/subst:sg:acc:m2]">Patrzę na kobietę-<marker>kota</marker>.</example>
    </rule>

    <rule name="oznaczenie przecinka oddzielającego człony równorzędne" id="comma_conj">
        <pattern>
        <unify>
            <feature id="case"/><feature id="number"/><feature id="gender"/>
            <token postag="(?:subst|depr|ger|adj|pact|ppas).*" postag_regexp="yes"/>
            <unify-ignore><marker><token>,</token></marker></unify-ignore>
            <token postag="(?:subst|depr|ger|adj|pact|ppas).*" postag_regexp="yes"><exception postag="verb.*" postag_regexp="yes"/></token>
        </unify>
        </pattern>
        <disambig action="add"><wd pos="conj"/></disambig>
        <!-- to trochę prymitywne, ale przyda się do reguły POZA_TYM; w przyszłości to powinien być
         po prostu przecinek oznaczony jako środkowy fragment grupy nominalnej -->
    </rule>

    <!-- conjunctions that take a comma -->
    <rule name="Spójniki wymagające przecinka lub zastępujące go" id="COMP_COMMA_2">
        <pattern>
            <token inflected="yes" regexp="yes">aby|acz|aczkolwiek|albo|albowiem|ale|aleć|aliści|ani|azali|ażeby|bo|byleby|choć|chociaż|chociażby|czyli|czyliż|dlaczego|dopóki|dopóty|gdy|gdyby|gdyż|gdyżby|ilekolwiek|ilekroć|iż|iżby|jaki|jeśli|jeżeli|kiedy|który|którędy|lecz|oraz|ponieważ|póki|wszelako|zanim|że|żeby<exception postag="comp:comma"/></token>
        </pattern>
        <disambig action="add"><wd pos="comp:comma"/></disambig>
        <example type="untouched">To jest krowa.</example>
        <example type="ambiguous" inputform="której[który/adj:sg:loc:f:pos]" outputform="której[której/comp:comma,który/adj:sg:loc:f:pos]">Krainę, w <marker>której</marker> kupiłem krowę, zapamiętam do końca życia.</example>
    </rule>

    <rulegroup id="STAJE_VERB" name="staje się => czasownik">
        <rule><pattern>
            <token postag="verb:fin:sg:ter:imperf:refl">staje</token>
            <token postag="qub">się</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="staje[staj/subst:pl:acc:m3,staj/subst:pl:nom:m3,staj/subst:pl:voc:m3,staja/subst:pl:acc:f,staja/subst:pl:nom:f,staja/subst:pl:voc:f,stajać/verb:fin:sg:ter:perf:nonrefl,staje/subst:sg:acc:n2,staje/subst:sg:nom:n2,staje/subst:sg:voc:n2,stawać/verb:fin:sg:ter:imperf:nonrefl,stawać/verb:fin:sg:ter:imperf:refl]"
                 outputform="staje[stawać/verb:fin:sg:ter:imperf:refl]">Kluczowe <marker>staje</marker> się stanowisko rządu.</example>
        <example type="untouched">Pociąg staje na stacji.</example>
        </rule>
        <rule><pattern>
            <token postag="qub">się</token>
            <token postag="verb:fin:sg:ter:imperf:refl">staje</token>
        </pattern>
            <disambig action="filterall"/>
            <example type="ambiguous" inputform="staje[staj/subst:pl:acc:m3,staj/subst:pl:nom:m3,staj/subst:pl:voc:m3,staja/subst:pl:acc:f,staja/subst:pl:nom:f,staja/subst:pl:voc:f,stajać/verb:fin:sg:ter:perf:nonrefl,staje/subst:sg:acc:n2,staje/subst:sg:nom:n2,staje/subst:sg:voc:n2,stawać/verb:fin:sg:ter:imperf:nonrefl,stawać/verb:fin:sg:ter:imperf:refl]"
                     outputform="staje[stawać/verb:fin:sg:ter:imperf:refl]">Kluczowe się <marker>staje</marker> stanowisko rządu.</example>
            <example type="untouched">Pociąg staje na stacji.</example>
        </rule>
    </rulegroup>

    <rulegroup id="VERB_REFL_NONREFL" name="czasownik zwrotny i niezwrotny + się => zwrotny">
        <rule>
        <pattern>
            <and>
                <token postag=".*:refl" postag_regexp="yes"/>
                <token postag=".*:nonrefl" postag_regexp="yes"/>
            </and>
            <token postag="qub">się</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Jajko stało na stole.</example>
        <example type="ambiguous" inputform="stało[stać/verb:praet:sg:n1.n2:ter:imperf:nonrefl,stać/verb:praet:sg:n1.n2:ter:perf:nonrefl,stać/verb:praet:sg:n1.n2:ter:perf:refl]"
                 outputform="stało[stać/verb:praet:sg:n1.n2:ter:perf:refl]">To <marker>stało</marker> się nagle.</example>
        </rule>
        <rule>
            <pattern>
                <token postag="qub">się</token>
                <and>
                    <token postag=".*:refl" postag_regexp="yes"/>
                    <token postag=".*:nonrefl" postag_regexp="yes"/>
                </and>
            </pattern>
            <disambig action="filterall"/>
            <example type="untouched">Jajko stało na stole.</example>
            <example type="ambiguous" inputform="stało[stać/verb:praet:sg:n1.n2:ter:imperf:nonrefl,stać/verb:praet:sg:n1.n2:ter:perf:nonrefl,stać/verb:praet:sg:n1.n2:ter:perf:refl]"
                     outputform="stało[stać/verb:praet:sg:n1.n2:ter:perf:refl]">To się <marker>stało</marker> nagle.</example>
        </rule>
    </rulegroup>

    <rule id="JAK_ZES" name="jak żeś -> adv qub">
        <pattern>
            <token>jak</token>
            <token inflected="yes">że</token>
        </pattern>
        <disambig postag="replace"><wd pos="adv" lemma="jak"/><wd pos="qub" lemma="że"/></disambig>
        <example type="ambiguous" inputform="żeś[że/comp,żeś/comp:comma]" outputform="żeś[że/qub]">I cóż, stary Balu — dodała — jak <marker>żeś</marker> wyszedł z tej przygody?</example>
    </rule>

    <rule name="mają to nie maić" id="MAJA_MAIC">
        <pattern>
            <token>mają</token>
        </pattern>
        <disambig action="filter"><match no="1">mieć</match></disambig>
        <example type="untouched">Oni mieli robaki.</example>
        <example type="ambiguous" inputform="mają[maić/verb:fin:pl:ter:imperf:refl.nonrefl,mieć/verb:fin:pl:ter:imperf:refl.nonrefl]" outputform="mają[mieć/verb:fin:pl:ter:imperf:refl.nonrefl]">Oni <marker>mają</marker> robaki.</example>
    </rule>

    <rule name="ma być" id="MA_INF">
        <pattern>
            <marker><token>ma</token></marker>
            <token postag_regexp="yes" postag="verb:inf.*"/>
        </pattern>
        <disambig postag="verb:fin:sg:ter:imperf:refl.nonrefl"/>
        <example type="untouched">Wraca ma ukochana.</example>
        <example type="ambiguous" inputform="ma[mieć/verb:fin:sg:ter:imperf:refl.nonrefl,mój/adj:sg:nom.voc:f:pos]"
                 outputform="ma[mieć/verb:fin:sg:ter:imperf:refl.nonrefl]">Jak <marker>ma</marker> być zrobione zadanie 3?</example>
    </rule>

    <!-- rule name="kobiety miały" id="MIALY">
        <pattern>
            <marker>
                <unify>
                    <feature id="gender"/><feature id="number"/>
                        <token postag="subst.*" postag_regexp="yes"/>
                        <token>miały</token>
                </unify>
            </marker>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="miały[miał/subst:pl:acc:m3,miał/subst:pl:nom:m3,miał/subst:pl:voc:m3,mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]"
                 outputform="miały[mieć/verb:praet:pl:m2.m3.f.n1.n2.p2.p3:ter:imperf:refl.nonrefl]">Wczoraj kobiety <marker>miały</marker> dużo pracy.</example>
    </rule -->

    <rule name="sporo to nie spora" id="SPORO">
        <pattern>
            <and>
                <token>sporo</token>
                <token inflected="yes">spora</token>
            </and>
        </pattern>
        <disambig action="remove"><wd lemma="spora"/></disambig>
    </rule>

    <rule name="jaki by -> by jako kublik" id="JAKI_BY_TU">
        <pattern>
            <token inflected="yes">jaki</token>
            <marker>
                <token>by</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="by[by/comp,by/qub]" outputform="by[by/qub]">Natychmiast kombinował, jaki <marker>by</marker> tu numer wykręcić zapraszającemu.</example>
        <example type="untouched">Użył narzędzia, jakiego, by użyć tu mocnego określenia, nie powinien był używać.</example>
    </rule>

    <rule name="wiele by jeszcze" id="WIELE_BY_JESZCZE">
        <pattern>
            <token>wiele</token>
            <marker><token>by</token></marker>
            <token>jeszcze</token>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="by[by/comp,by/qub]" outputform="by[by/qub]">Ciekawa to była figura i wiele <marker>by</marker> jeszcze o niej gadać.</example>
        <example type="untouched">Dałbym wiele, by jeszcze móc ją zobaczyć.</example>
    </rule>

    <rule name="predykatyw + by > kublik" id="PRED_BY">
        <pattern>
            <token postag_regexp="yes" postag="pred|verb:winien.*"/>
            <marker><token>by</token></marker>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" inputform="by[by/comp,by/qub]" outputform="by[by/qub]">Oni powinni <marker>by</marker> to zrobić.</example>
        <example type="untouched">Ale nie w poprzek, jak powinna, by zagrodzić drogę nadjeżdżającej dziewczynie.</example>
    </rule>

    <rule name="„nie” na początku zdania" id="NIE_ADAMP">
        <pattern>
            <token postag="SENT_START"/>
            <token min="0" max="1" regexp="yes">&interp;</token>
            <marker>
                <token>nie</token>
            </marker>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous" outputform="Nie[nie/qub]" inputform="Nie[nie/conj,nie/qub,on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:praep]">— <marker>Nie</marker> słyszałeś?</example>
    </rule>

    <rule name="oklep" id="na-oklep">
        <pattern>
            <token>na</token>
            <marker>
                <token regexp="yes">oklep|oślep</token>
            </marker>
        </pattern>
        <disambig postag="qub">
        </disambig>
    </rule>

    <rulegroup name="chybił trafił" id="chybil-trafil">
        <rule>
            <pattern>
                <token>na</token>
                <marker>
                    <token>chybił</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
        </rule>
        <rule>
            <pattern>
                <token>na</token>
                <token>chybił</token>
                <marker>
                    <token>trafił</token>
                </marker>
            </pattern>
            <disambig postag="qub"/>
        </rule>
    </rulegroup>

    <rule name="obok, dookoła, wewnątrz -> adv" id="obok">
        <pattern>
            <marker>
                <token regexp="yes">obok|dookoła|wewnątrz</token>
            </marker>
            <token postag="subst:.*" postag_regexp="yes"><exception postag="subst:.*gen.*" postag_regexp="yes"/></token>
        </pattern>
        <disambig postag="adv:pos"/>
    </rule>

    <rulegroup name="mam -> subst" id="mam">
        <rule>
            <pattern>
                <token postag="prep:.*gen.*" postag_regexp="yes"/>
                <marker>
                    <token>mam</token>
                </marker>
            </pattern>
            <disambig action="filter"><match no="2" postag="subst:pl:.*" postag_regexp="yes"/></disambig>
        </rule>
    </rulegroup>

    <rule name="mam coś" id="mam_verb">
        <pattern>
            <token postag="verb:fin:sg:(pri|ter):imperf:refl.nonrefl" postag_regexp="yes" regexp="yes">mam?</token>
            <token postag="(subst|adj|pact|ppas).*acc.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="Mam[mama/subst:pl:gen:f,mamić/verb:impt:sg:sec:imperf:refl.nonrefl,mieć/verb:fin:sg:pri:imperf:refl.nonrefl]"
                 outputform="Mam[mieć/verb:fin:sg:pri:imperf:refl.nonrefl]"><marker>Mam</marker> powody.</example>
        <example type="untouched">Zwróciliśmy się do mam pracujących w komitecie rodzicielskim.</example>
    </rule>

    <rule name="mam na myśli" id="mam_na_mysli">
        <pattern>
            <token postag="verb:fin:sg:pri:imperf:refl.nonrefl">mam</token>
            <token postag="prep:loc">na</token>
            <token regexp="yes" postag="subst:sg.*loc.*" postag_regexp="yes">myśli|celu|względzie</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="mam[mama/subst:pl:gen:f,mamić/verb:impt:sg:sec:imperf:refl.nonrefl,mieć/verb:fin:sg:pri:imperf:refl.nonrefl]"
                 outputform="mam[mieć/verb:fin:sg:pri:imperf:refl.nonrefl]">Tu <marker>mam</marker> na myśli dzialałność usługową.</example>
    </rule>

    <rule name="miał(y) + inf -> verb" id="mial">
        <pattern>
            <marker>
                <token regexp="yes">miały?</token>
            </marker>
            <token postag_regexp="yes" postag="verb:inf.*"/>
        </pattern>
        <disambig action="filter" postag="verb.*"/>
    </rule>

    <!-- TODO: oznakować tak jak rzeczownik po skrócie -->
    <rule name="dr, mgr + . => qub" id="dr_mgr_kropka">
        <pattern>
            <marker>
                <token regexp="yes">dr|mgr|nr|kmdr|kmdt|arcybp|bp|abp|gen|ul</token>
            </marker>
            <token>.</token>
        </pattern>
        <disambig postag="brev:pun"/>
    </rule>

    <rule id="dr_femininum" name="pani dr">
        <pattern>
            <unify>
                <feature id="case"></feature>
                <token postag="prep.*" postag_regexp="yes"><exception postag="prep.*" negate_pos="yes" postag_regexp="yes"/><exception>co</exception></token>
                <unify-ignore>
                <marker>
                    <token>dr</token>
                </marker>
                </unify-ignore>
                <token postag="subst.*:f" postag_regexp="yes" regexp="yes">\p{Lu}\p{Ll}+<exception postag="subst.*:m1" postag_regexp="yes"/></token>
            </unify>
        </pattern>
        <disambig postag="brev:npun"/>
    </rule>

    <rule name="doktor + rzeczownik r.m. = uzgodnienie" id="doktor_profesor">
        <pattern>
            <unify>
                <feature id="case"/><feature id="gender"/><feature id="number"/>
            <token regexp="yes" inflected="yes">doktor|profesor|docent|magister<exception scope="previous">pani</exception></token>
            <token postag_regexp="yes" postag="subst:sg.*:m1" regexp="yes" inflected="yes">\p{Lu}\p{Ll}+</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="ambiguous" inputform="doktor[doktor/subst:pl:acc:f,doktor/subst:pl:dat:f,doktor/subst:pl:gen:f,doktor/subst:pl:inst:f,doktor/subst:pl:loc:f,doktor/subst:pl:nom:f,doktor/subst:pl:voc:f,doktor/subst:sg:acc:f,doktor/subst:sg:dat:f,doktor/subst:sg:gen:f,doktor/subst:sg:inst:f,doktor/subst:sg:loc:f,doktor/subst:sg:nom:f,doktor/subst:sg:nom:m1,doktor/subst:sg:voc:f]"
                 outputform="doktor[doktor/subst:sg:nom:m1]">Na klatce stał <marker>doktor</marker> Stachowiak.</example>
    </rule>

<!-- 
    <rule name="wzgledem" id="względem">
        <pattern>
            <marker>
                <token>względem<exception scope="previous">pod</exception></token>
            </marker>
            <token postag_regexp="yes" postag=".*[:\.]gen[:\.].*"/>
        </pattern>
        <disambig action="add"><wd lemma="względem" pos="prep:gen">względem</wd></disambig>
        <example type="untouched">Tu mamy piękny przykład pod względem architektury.</example>
        <example type="ambiguous" inputform="względem[wzgląd/subst:sg:inst:m3,względem/prep:gen]" outputform="względem[wzgląd/subst:sg:inst:m3,względem/prep:gen]">Tu mamy piękny przykład, <marker>względem</marker> którego nie będziemy się kierować.</example>
    </rule>
 -->
 
    <rulegroup name="winny/winien -> przymiotnik" id="winien">
        <rule>
            <pattern>
                <unify> <feature id="number"/>
                    <token postag="verb:winien.*" postag_regexp="yes" regexp="yes">win.*</token>
                    <token inflected="yes" postag="verb:.*" postag_regexp="yes">być</token>
                </unify>
            </pattern>
            <disambig action="filter" postag="adj.*"/>
            <example type="untouched">Powinien był pójść do lekarza.</example>
            <example type="ambiguous" inputform="Winni[winien/verb:winien:pl:m1.p1:ter:imperf:nonrefl,winny/adj:pl:nom.voc:m1.p1:pos,winny/subst:pl:nom:m1,winny/subst:pl:voc:m1]" outputform="Winni[winny/adj:pl:nom.voc:m1.p1:pos]"><marker>Winni</marker> są już ukarani.</example>
        </rule>
        <rule>
            <pattern>
                <unify>
                    <feature id="number"/>
                    <token inflected="yes" postag="verb:.*" postag_regexp="yes">być</token>
                    <marker>
                        <token postag="verb:winien.*" postag_regexp="yes" regexp="yes">win.*</token>
                    </marker>
                </unify>
            </pattern>
            <disambig action="filter" postag="adj.*"/>
            <example type="untouched">Powinien był pójść do lekarza.</example>
            <example type="untouched">Każdy winien przestrzegać prawa!</example>
            <example type="ambiguous" inputform="winni[winien/verb:winien:pl:m1.p1:ter:imperf:nonrefl,winny/adj:pl:nom.voc:m1.p1:pos,winny/subst:pl:nom:m1,winny/subst:pl:voc:m1]" outputform="winni[winny/adj:pl:nom.voc:m1.p1:pos]">To oni są <marker>winni</marker>!</example>
        </rule>
    </rulegroup>

    <rule id="WINNA_LATOROSL" name="winna latorośl">
        <pattern>
            <marker><token postag="verb.*" postag_regexp="yes">winna</token></marker>
            <token>latorośl</token>
        </pattern>
        <disambig postag="adj:sg:nom.voc:f:pos"/>
        <example type="untouched">Ona była winna.</example>
        <example type="ambiguous" inputform="winna[winien/verb:winien:sg:f:ter:imperf:nonrefl,winna/subst:sg:nom:f,winna/subst:sg:voc:f,winny/adj:sg:nom.voc:f:pos]"
                 outputform="winna[winny/adj:sg:nom.voc:f:pos]">Iż <marker>winna</marker> latorośl wybrana wyda jeno ocet.</example>
    </rule>

    <rule id="WINNY_DAT_BYC" name="winny/winien -> przymiotnik w konstrukcji z datiwem">
        <pattern>
            <marker>
            <token postag="verb:winien.*" postag_regexp="yes" regexp="yes">win.*</token>
            </marker>
            <token postag=".*dat.*" postag_regexp="yes"/>
            <token inflected="yes" postag="verb:.*" postag_regexp="yes">być</token>
        </pattern>
        <disambig action="filter" postag="adj.*"/>
        <example type="ambiguous" inputform="winni[winien/verb:winien:pl:m1.p1:ter:imperf:nonrefl,winny/adj:pl:nom.voc:m1.p1:pos,winny/subst:pl:nom:m1,winny/subst:pl:voc:m1]"
                 outputform="winni[winny/adj:pl:nom.voc:m1.p1:pos]">Otóż <marker>winni</marker> mi jesteście paszę</example>
        <example type="untouched">Winna pójść do lekarza.</example>
    </rule>
<!-- 
    <rulegroup name="zdarzył w sensie niezwrotnym" id="LOS_ZDARZYL">
        <rule>
            <pattern>
                <token regexp="yes" skip="-1">los|przypadek<exception scope="next" regexp="yes">się|,</exception></token>
                <marker>
                    <token>zdarzył</token>
                </marker>
            </pattern>
            <disambig action="remove"><wd lemma="zdarzyć" pos="refl">zdarzył</wd></disambig>
            <example type="untouched">To nie przypadek, że ten wypadek zdarzył się tu.</example>
            <example type="ambiguous" inputform="zdarzył[zdarzyć/refl,zdarzyć/verb:praet:sg:ter:m:perf]" outputform="zdarzył[zdarzyć/verb:praet:sg:ter:m:perf]">Los tak <marker>zdarzył</marker>, mój panie.</example>
        </rule>
        <rule id="LOS2">
            <pattern>
                <marker>
                    <token skip="-1">zdarzył</token>
                </marker>
                <token regexp="yes">los|przypadek</token>
            </pattern>
            <disambig action="remove"><wd lemma="zdarzyć" pos="refl">zdarzył</wd></disambig>
            <example type="untouched">To nie przypadek, że ten wypadek zdarzył się tu.</example>
            <example type="ambiguous" inputform="zdarzył[zdarzyć/refl,zdarzyć/verb:praet:sg:ter:m:perf]" outputform="zdarzył[zdarzyć/verb:praet:sg:ter:m:perf]">Tak <marker>zdarzył</marker> los, mój panie.</example>
        </rule>
    </rulegroup>
 -->
 
	<!--  TODO: czy to nadal potrzebne po PoliMorfie? 
    <rule name="skrótowce jako nieodmienne" id="SKROTOWCE_IRREG">
        <pattern>
            <token postag="prep:.*" postag_regexp="yes"/>
            <marker>
                <token regexp="yes">\p{Lu}+[i]*\p{Lu}{1,4}+</token>
            </marker>
        </pattern>
        <disambig postag="subst:irreg"/>
        <example type="untouched">ONZ wystosowała pismo do redakcji Przeglądu Wędkarskiego.</example>
        <example type="ambiguous" inputform="ONZ[ONZ/subst:pl:gen:m3,ONZ/subst:sg:gen:m3]" outputform="ONZ[ONZ/subst:irreg]">Do <marker>ONZ</marker> dotarło pismo z redakcji Przeglądu Wędkarskiego.</example>
    </rule>
    -->

    <rule name="wiodący w sensie właściwym" id="WIADACY_ADJ">
        <pattern>
            <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                <token skip="5" regexp="yes" inflected="yes">trasa|szlak|droga|trakt|drogi</token>
                <marker>
                    <token inflected="yes" postag="pact.*" postag_regexp="yes">wieść</token>
                </marker>
            </unify>
        </pattern>
        <disambig action="replace"><match no="1" postag_regexp="yes" postag="pact(.*):imperf:aff:refl.nonrefl" postag_replace="adj$1:pos"/></disambig>
        <example type="untouched">Tematem wiodącym tej książki są grzyby.</example>
        <example type="ambiguous" inputform="wiodącą[wieść/pact:sg:acc.inst:f:imperf:aff:refl.nonrefl]" outputform="wiodącą[wieść/adj:sg:acc.inst:f:pos]">Szedłem drogą <marker>wiodącą</marker> w stronę wioski.</example>
    </rule>

    <rule name="Jest to -> ten/adj" id="TO_TEN_ADJ">
        <pattern>
            <token regexp="yes">jest|będzie|był[oa]?</token>
            <marker>
                <token>to</token>
            </marker>
        </pattern>
        <disambig postag="adj:sg:nom.voc:n1.n2:pos"/>
        <example type="untouched">To jest problem.</example>
        <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="to[ten/adj:sg:nom.voc:n1.n2:pos]" >Jest <marker>to</marker> problem.</example>
    </rule>

	<!--  for za_pewne rule -->
	<rule name="pewne qub" id="pewne_qub">
		<pattern>
			<marker><token>pewne</token></marker>
		</pattern>
		<disambig action="add"><wd lemma="pewne" pos="qub">pewne</wd></disambig>
	</rule>


    <rule name="Oznaczenie przyimka za wymaganego przez czasownik" id="ZA_DEP">
        <pattern>
            <token skip="5" regexp="yes" inflected="yes">uważać|dziękować|przepraszać|uchodzić|przeprosić|uznać|uznawać|odpowiadać<exception scope="next" regexp="yes">[\p{Punct}—–„«»…&amp;&amp;[^\.]]+</exception></token>
            <marker>
                <token>za</token>
            </marker>
        </pattern>
        <disambig action="add"><wd lemma="za" pos="DEP">za</wd></disambig>
        <example type="untouched">Potrwa to za pewne kilka dni.</example>
        <example type="ambiguous" inputform="za[za/prep:acc]" outputform="za[za/DEP,za/prep:acc]">Chciałbym przeprosić <marker>za</marker> pewne nieporozumienie.</example>
    </rule>

    <rule name="pewny + rzeczownik" id="PEWNE_UNIFY">
        <pattern>
            <unify> <feature id="number"/><feature id="gender"/> <feature id="case"/>
                <token>pewne</token>
                <token postag="subst.*" postag_regexp="yes"><exception negate_pos="yes" postag_regexp="yes" postag="subst.*"/></token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">Za pewne tak uważam.</example>
        <example type="ambiguous" inputform="pewne[pewien/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,pewne/qub,pewny/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos]"
                 outputform="pewne[pewien/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos,pewny/adj:pl:acc:m2.m3.f.n1.n2.p2.p3:pos]">Za <marker>pewne</marker> kwoty można kupić nawet krowę.</example>
    </rule>

    <!--  useful for removing false alarms for non-detected sentence-ends (note: it doesn't break the sentence for real) -->
    <rule name="Oznaczenie końca zdania" id="SRX_PL_FIX">
        <pattern>
            <token regexp="yes">\p{L}</token>
            <marker>
                <token>.</token>
            </marker>
            <and>
                <token inflected="yes" regexp="yes"><exception inflected="yes" regexp="yes">\p{Lu}.*</exception>\p{Ll}+</token>
                <token regexp="yes">\p{Lu}\p{Ll}+</token>
            </and>
        </pattern>
        <disambig action="add"><wd lemma="." pos="SENT_END">.</wd></disambig>
        <example type="untouched">To jest Józef R. Asdaafvafsf</example>
        <example type="ambiguous" inputform=".[.]" outputform=".[&lt;/S&gt;]">To jest cząstka B<marker>.</marker> Dopiero w niej jest cząstka A.</example>
    </rule>

    <rule id="INDZIEJ" name="kiedy indziej itp.">
        <pattern>
            <marker>
                <token regexp="yes">nigdy|kiedy|gdzie|nigdzie|gdziekolwiek</token>
            </marker>
            <token>indziej</token>
        </pattern>
        <disambig postag="adv"/>
    </rule>

    <rule id="MALO_KIEDY" name="mało/rzadko kiedy -> adv">
        <pattern>
            <token postag="adv:pos" regexp="yes">mało|rzadko</token>
            <token postag="adv">kiedy</token>
        </pattern>
        <disambig action="filterall"></disambig>
    </rule>

    <rule id="nie_zal" name="nie żal -> pred">
        <pattern>
            <token postag="SENT_START" skip="-1"><exception scope="next">się</exception></token>
            <marker>
                <token postag="pred" skip="-1">żal<exception scope="previous" negate="yes">nie</exception><exception scope="next">się</exception></token>
            </marker>
            <token postag="SENT_END"/>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Nie żal się, kretynie.</example>
        <example type="untouched">Ty się nie żal, kretynie.</example>
        <example type="ambiguous" inputform="żal[żal/adv,żal/pred,żal/subst:sg:acc:m3,żal/subst:sg:nom:m3,żalić/verb:impt:sg:sec:imperf:refl]"
                 outputform="żal[żal/pred]">Góralu, czy ci nie <marker>żal</marker>?</example>
    </rule>

    <rule id="NIE_QUB_PRED" name="nie przed predykatywem">
        <pattern>
            <marker>
                <token>nie</token>
            </marker>
            <token postag="pred"><exception negate_pos="yes" postag="pred"></exception></token>
        </pattern>
        <disambig postag="qub"></disambig>
    </rule>

    <rule id="NIE_QUB_SPOSOB" name="nie sposób jest">
        <pattern>
            <marker>
                <token postag="qub">nie</token>
                <token skip="1" postag="pred">sposób</token>
            </marker>
            <token min="0" max="1">jest</token>
            <token postag="verb:inf.*" postag_regexp="yes"></token>
        </pattern>
        <disambig action="filterall"/>
         <example type="ambiguous" inputform="sposób[sposobić/verb:impt:sg:sec:imperf:refl.nonrefl,sposób/pred,sposób/subst:sg:acc:m3,sposób/subst:sg:nom:m3]"
                  outputform="sposób[sposób/pred]">Nie <marker>sposób</marker> być eleganckim.</example>
         <example type="untouched">Nie sposób się do wojny.</example>
            <example type="ambiguous" inputform="sposób[sposobić/verb:impt:sg:sec:imperf:refl.nonrefl,sposób/pred,sposób/subst:sg:acc:m3,sposób/subst:sg:nom:m3]"
                     outputform="sposób[sposób/pred]">Nie <marker>sposób</marker> jest być eleganckim.</example>
        <example type="ambiguous" inputform="sposób[sposobić/verb:impt:sg:sec:imperf:refl.nonrefl,sposób/pred,sposób/subst:sg:acc:m3,sposób/subst:sg:nom:m3]"
                 outputform="sposób[sposób/pred]">Telefon to coś, bez czego nie <marker>sposób</marker> się obejść.</example>
    </rule>


    <rule id="NIE_QUB" name="nie w funkcji negacji czasownika, przymiotnika i przysłówka w st. wyższym">
        <pattern>
            <marker>
                <token postag="qub">nie<exception scope="previous" postag_regexp="yes" postag="prep:acc.*"></exception></token>
                <token postag="verb.*|pred|ad[vj].*:com" postag_regexp="yes"><exception>czczą</exception><exception regexp="yes">dosyć|dość|pora</exception><exception postag="verb:winien.*" postag_regexp="yes"/></token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="nie[nie/conj,nie/qub,on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:praep]" outputform="nie[nie/qub]">Proszę, <marker>nie</marker> jedź sam!</example>
        <example type="untouched">Martwię się o nie.</example>
    </rule>

    <rule id="NIE_NIEPPRON" name="„nie” to nie zaimek, jeśli bez przyimka">
        <pattern>
            <token><exception postag="prep.*acc.*" postag_regexp="yes"></exception></token>
            <marker><token>nie</token></marker>
        </pattern>
        <disambig action="remove" postag="ppron3.*:praep"/>
        <example type="untouched">Chodziło o nie.</example>
        <example type="ambiguous" inputform="nie[nie/conj,nie/qub,on/ppron3:pl:acc:m2.m3.f.n1.n2.p2.p3:ter:akc.nakc:praep,on/ppron3:sg:acc:n1.n2:ter:akc.nakc:praep]"
                 outputform="nie[nie/conj,nie/qub]">To <marker>nie</marker> przelewki.</example>
    </rule>

    <rule id="nie_tylko" name="nie tylko">
        <pattern>
            <marker>
                <token postag="qub">nie</token>
                <token postag="qub">tylko</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="tylko[tylko/conj,tylko/qub]" outputform="tylko[tylko/qub]">To nie <marker>tylko</marker> grubianin, ale i cham.</example>
    </rule>

    <rule id="GORZEJ_OD" name="gorzej jako przysłówek">
        <pattern>
            <marker>
                <token>gorzej</token>
            </marker>
            <token regexp="yes">ode?|niż</token>
        </pattern>
        <disambig postag="adv:com"/>
        <example type="ambiguous" inputform="gorzej[gorzeć/verb:impt:sg:sec:imperf:nonrefl,źle/adv:com]"
                 outputform="gorzej[źle/adv:com]">Piszczę nie <marker>gorzej</marker> od piszczałki.</example>
    </rule>

    <rule name="Blokada reguły interpunkcyjnej dla daje vu" id="DAJE_VU_BLOKADA">
        <pattern>
            <marker>
                <token>daje</token>
            </marker>
            <token>vu</token>
        </pattern>
        <disambig action="replace"><match no="1" postag_regexp="yes" postag="verb:fin:sg:ter:imperf:refl.nonrefl" postag_replace="qub"/></disambig>
        <example type="untouched">On daje mu w ryj.</example>
        <example type="ambiguous" inputform="daje[dawać/verb:fin:sg:ter:imperf:refl.nonrefl]" outputform="daje[dawać/qub]">On przeżył <marker>daje</marker> vu.</example>
    </rule>

    <rulegroup name="byc moze -> qub" id="MOZE_QUB">
        <rule>
            <pattern>
                    <token postag="verb:inf:imperf:nonrefl">być</token>
                    <token postag="qub">może</token>
            </pattern>
            <disambig action="filterall"/>
            <example type="untouched">On może być debilem.</example>
            <example type="ambiguous" inputform="może[może/qub,móc/verb:fin:sg:ter:imperf:nonrefl]" outputform="może[może/qub]">On być <marker>może</marker> jest debilem</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token skip="-1">może<exception scope="next" postag_regexp="yes" postag="SENT_END|(?:interp|comp):comma|verb:inf.*"/></token>
                </marker>
                <token postag="verb:.*(?:sg|pl|imp[st]).*|pred" postag_regexp="yes"/>
            </pattern>
            <disambig postag="qub"></disambig>
            <example type="ambiguous" inputform="może[może/qub,móc/verb:fin:sg:ter:imperf:nonrefl]"
                     outputform="może[może/qub]">Byłoby się to <marker>może</marker> powiodło.</example>
            <example type="ambiguous" inputform="może[może/qub,móc/verb:fin:sg:ter:imperf:nonrefl]"
                     outputform="może[może/qub]">Kto wie, <marker>może</marker> się powiodło.</example>
        </rule>
        <rule>
            <pattern>
                <token skip="-1" postag="verb:.*(?:sg|pl|imp[st]).*|pred" postag_regexp="yes"><exception scope="next" postag_regexp="yes" postag="interp:comma|comp:comma|conj"/></token>
                <marker>
                    <token>może</token>
                </marker>
                    <token><exception postag="verb:inf.*" postag_regexp="yes" /></token>
            </pattern>
            <disambig action="replace"><wd pos="qub" lemma="może"/></disambig>
            <example type="ambiguous" inputform="może[może/qub,móc/verb:fin:sg:ter:imperf:nonrefl]"
                     outputform="może[może/qub]">Byłoby <marker>może</marker> lepiej bez tego.</example>
            <example type="ambiguous" inputform="może[może/qub,móc/verb:fin:sg:ter:imperf:nonrefl]"
                     outputform="może[może/qub]">Byłoby wczoraj <marker>może</marker> lepiej bez tego.</example>
            <example type="untouched">To, że on się spotkał z kucharzem może świadczyć przeciwko niemu.</example>
        </rule>
    </rulegroup>

    <rule id="moze_qub_fix" name="może po czasowniku wymagającym zwykle bezokolicznika">
        <pattern>
            <token skip="-1" postag="verb:.*(?:sg|pl|imp[st]).*|pred" postag_regexp="yes" inflected="yes" regexp="yes">mieć|móc|musieć|potrafić|pozwolić|pozwalać|zdołać|umieć|ośmielić|powinien|gotów|ważyć|raczyć|usiłować|rozkazać|śmieć|zacząć|uczyć|dozwolić|(?:po)?móc|s?próbować|chcieć|da(?:wa)?ć|iść|pójść|ośmielić|umieć|kazać|mieć|zacząć|przestać|zaczynać|przestawać|pozwolić|pozwalać|starać|jechać|nauczyć|biec|położyć|zdążyć<exception scope="next" postag_regexp="yes" postag="interp:comma|comp:comma|conj|verb:inf.*"/><exception>może</exception></token>
            <marker>
                <token postag="verb:fin:sg:ter:imperf:nonrefl">może</token>
            </marker>
        </pattern>
        <disambig action="replace"><wd pos="qub" lemma="może"/></disambig>
        <example type="ambiguous" inputform="może[może/qub,móc/verb:fin:sg:ter:imperf:nonrefl]"
                 outputform="może[może/qub]">Chyba cioci dałby się <marker>może</marker> namówić, co?</example>
        <example type="untouched">Zaczynam się zastanawiać dokąd ta rozmowa może prowadzić.</example>
    </rule>

    <rule id="moze_inf" name="może + bezokolicznik -> czasownik">
        <pattern>
            <marker>
                <token postag="verb:fin:sg:ter:imperf:nonrefl" skip="-1">może<exception scope="previous">być</exception><exception postag="&lt;ELLIPSIS&gt;|verb:(pot|fin|bedzie|praet|winien):(sg|pl).*|verb:imps.*|pcon:imperf.*|pant:perf.*|comp:comma|interp:comma" postag_regexp="yes" scope="next"/></token>
            </marker>
            <token postag="verb:inf.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="verb:fin:sg:ter:imperf:nonrefl"/>
        <example type="ambiguous" inputform="może[może/qub,móc/verb:fin:sg:ter:imperf:nonrefl]"
                 outputform="może[móc/verb:fin:sg:ter:imperf:nonrefl]">Chyba <marker>może</marker> być patriotą.</example>
        <example type="ambiguous" inputform="może[może/qub,móc/verb:fin:sg:ter:imperf:nonrefl]"
                 outputform="może[móc/verb:fin:sg:ter:imperf:nonrefl]">Chyba <marker>może</marker> w ostateczności być patriotą.</example>
        <example type="untouched">Być może leczyć się trzeba.</example>
    </rule>

    <rule name="immunize_Windows" id="KOSHER_WINDOWS">
        <pattern>
            <token>dla</token>
            <marker>
                <token>Windows</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule name="al." id="al_brev">
        <pattern>
            <marker><token>al</token></marker>
            <token spacebefore="no">.</token>
        </pattern>
        <disambig postag="brev:pun"/>
    </rule>
    <rule name="al dente" id="al_dente">
        <pattern>
            <marker><token>al</token></marker>
            <token regexp="yes">dente|fresco</token>
        </pattern>
        <disambig postag="ign"/>
    </rule>
    <rule name="art deco" id="art_brev">
        <pattern>
            <marker><token>art</token></marker>
            <token regexp="yes">d[eé]co</token>
        </pattern>
        <disambig action="replace"><wd lemma="art" pos="ign"/></disambig>
    </rule>
    <rule name="m.in." id="M_IN">
    	<pattern case_sensitive="yes">
    		<marker><token>m</token></marker>    	
    	<token>.</token>
    	<token regexp="yes">i[mn]</token>
    	<token>.</token>
    	</pattern>
    	<disambig action="replace"><match no="1" postag_regexp="yes" postag="brev:npun" postag_replace="brev:pun"/></disambig>
    	<example type="ambiguous" inputform="m[metr/brev:npun]" outputform="m[metr/brev:pun]">Jest to <marker>m</marker>.in. kretyn.</example>
    </rule>
    
    <rule name=".pl, .jp, .al" id="PL_DOMAIN_NAME">
    	<pattern>
    		<token>.</token>
    		<marker>
    		<token spacebefore="no" regexp="yes">pl|jp|al</token>
    		</marker>
    	</pattern>
    	<disambig action="remove"><wd pos="brev:pun"/></disambig>
    	<example type="ambiguous" inputform="pl[plac/brev:pun]" outputform="pl[pl]">Alergie.mp.<marker>pl</marker> - serwis</example>
    	<example type="untouched">Adres: pl. Zbawiciela 122</example>
		<example type="ambiguous" inputform="jp[jak poprzednio/brev:pun]" outputform="jp[jp]">Alergie.mp.<marker>jp</marker> - serwis</example>
    	<example type="untouched">Skrót - jp.</example>
    </rule>
    <rule name="l'art" id="L_ART">
        <pattern>
            <token>l</token>
            <token regexp="yes">&apost;</token>
            <marker><token>art</token></marker>
        </pattern>
        <disambig action="replace"><wd pos="ign" lemma="art"/></disambig>
        <example type="untouched">Art. 234 KC</example>
        <example type="ambiguous" inputform="art[artykuł/brev:pun]"
                 outputform="art[art/ign]">L'<marker>art</marker> du cuisinier</example>
    </rule>
    <rule name="KC" id="KC">
    	<pattern case_sensitive="yes">
    		<marker><token>KC</token></marker>
    		<token regexp="yes">KPZR|PZPR</token>
    	</pattern>
    	<disambig action="remove"><wd lemma="kodeks cywilny"/></disambig>
    	<example type="ambiguous" inputform="KC[KC/subst:pl:acc:m3,KC/subst:pl:acc:n2,KC/subst:pl:dat:m3,KC/subst:pl:dat:n2,KC/subst:pl:gen:m3,KC/subst:pl:gen:n2,KC/subst:pl:inst:m3,KC/subst:pl:inst:n2,KC/subst:pl:loc:m3,KC/subst:pl:loc:n2,KC/subst:pl:nom:m3,KC/subst:pl:nom:n2,KC/subst:pl:voc:m3,KC/subst:pl:voc:n2,KC/subst:sg:acc:m3,KC/subst:sg:acc:n2,KC/subst:sg:dat:m3,KC/subst:sg:dat:n2,KC/subst:sg:gen:m3,KC/subst:sg:gen:n2,KC/subst:sg:inst:m3,KC/subst:sg:inst:n2,KC/subst:sg:loc:m3,KC/subst:sg:loc:n2,KC/subst:sg:nom:m3,KC/subst:sg:nom:n2,KC/subst:sg:voc:m3,KC/subst:sg:voc:n2,kodeks cywilny/brev:pun]" outputform="KC[KC/subst:pl:acc:m3,KC/subst:pl:acc:n2,KC/subst:pl:dat:m3,KC/subst:pl:dat:n2,KC/subst:pl:gen:m3,KC/subst:pl:gen:n2,KC/subst:pl:inst:m3,KC/subst:pl:inst:n2,KC/subst:pl:loc:m3,KC/subst:pl:loc:n2,KC/subst:pl:nom:m3,KC/subst:pl:nom:n2,KC/subst:pl:voc:m3,KC/subst:pl:voc:n2,KC/subst:sg:acc:m3,KC/subst:sg:acc:n2,KC/subst:sg:dat:m3,KC/subst:sg:dat:n2,KC/subst:sg:gen:m3,KC/subst:sg:gen:n2,KC/subst:sg:inst:m3,KC/subst:sg:inst:n2,KC/subst:sg:loc:m3,KC/subst:sg:loc:n2,KC/subst:sg:nom:m3,KC/subst:sg:nom:n2,KC/subst:sg:voc:m3,KC/subst:sg:voc:n2]"><marker>KC</marker> KPZR</example>
    </rule>
    <rule name="KL" id="KL">
        <pattern case_sensitive="yes">
            <marker><token>KL</token></marker>
            <token><exception>.</exception></token>
        </pattern>
        <disambig action="remove"><wd pos="brev:pun"/></disambig>
        <example type="ambiguous" inputform="KL[klarnet/brev:pun,klasa/brev:pun]" outputform="KL[KL]"><marker>KL</marker> Warschau</example>
        <example type="untouched">WYCIECZKA KL. III</example>
        <example type="untouched">Jestem w kl. VIIb.</example>
    </rule>
    <rule name="KS" id="KS">
    <pattern case_sensitive="yes">
            <marker><token>KS</token></marker>
            <token regexp="yes">\p{Lu}\p{Ll}+</token>
    </pattern>
        <disambig action="replace"><wd pos="brev:npun" lemma="klub sportowy"/></disambig>
        <example type="untouched">Ks. Lemański jada pomidory z biskupem.</example>
        <example type="ambiguous" inputform="KS[ksiądz/brev:pun,książę/brev:pun]" outputform="KS[klub sportowy/brev:npun]">Takim klubem był <marker>KS</marker> Admira w Poznaniu.</example>
    </rule>
    <rule id="OK_BREV" name="ok jako skrót">
        <pattern>
            <marker><token>ok</token></marker>
            <token spacebefore="no">.<exception postag="SENT_END"/></token>
        </pattern>
        <disambig postag="brev:pun"/>
        <example type="ambiguous" inputform="ok[oko/subst:pl:gen:n2,około/brev:pun]" outputform="ok[około/brev:pun]">Naraziło go to na ostre ataki ze strony Seweryna Goszczyńskiego i Leszka Dunina Borkowskiego, w wyniku których zaprzestał publikowania swoich utworów, pisując do szuflady przez <marker>ok</marker>. 18 lat.</example>
    </rule>
    <rule name="R - nie rok" id="NON_START_POS_R">
    	<pattern case_sensitive="yes">
    		<marker><token>R<exception scope="previous" postag="SENT_START"></exception></token></marker>
    	</pattern>
    	<disambig action="remove"><wd lemma="rok"/></disambig>
    	<example type="untouched">R. 2012</example>
    	<example type="ambiguous" inputform="R[rok/brev:pun]" outputform="R[R]">Enancjomer <marker>R</marker> jest ważny.</example>
    </rule>
    <rule name="in w wyrażeniach łacińskich" id="in">
    	<pattern>
    		<marker><token>in</token></marker>
    		<token regexp="yes">absentia|abstracto|aeternum|aqua|blanco|crudo|dubio|effectu|effigie|extenso|extremis|fidem|flagranti|genere|gratiam|gremio|margine|medias|memoriam|minus|octavo|persona|plus|praxi|puncto|saecula|spe|statu|triplo|vitro|vivo|rebus|bello</token>
    	</pattern>
    	<disambig postag="ign"/>
    	<example type="ambiguous" inputform="in[in/subst:pl:acc:n2,in/subst:pl:dat:n2,in/subst:pl:gen:n2,in/subst:pl:inst:n2,in/subst:pl:loc:n2,in/subst:pl:nom:n2,in/subst:pl:voc:n2,in/subst:sg:acc:n2,in/subst:sg:dat:n2,in/subst:sg:gen:n2,in/subst:sg:inst:n2,in/subst:sg:loc:n2,in/subst:sg:nom:n2,in/subst:sg:voc:n2,inaczej/brev:pun]" outputform="in[in/ign]">Zapłodnienie <marker>in</marker> vitro</example>
    	<example type="untouched">M.in. dwóch ministrów</example>
    </rule>
    <rule name="em" id="em">
    	<pattern>
    		<token regexp="yes">&apost;</token>
    		<marker>
    		<token spacebefore="no">em</token>
    		</marker>
    	</pattern>
    	<disambig action="remove"><wd lemma="emerytowany"/></disambig>
    	<example type="untouched">Był to em. płk James Bond</example>
    	<example type="ambiguous" inputform="em[em/subst:pl:acc:n2,em/subst:pl:dat:n2,em/subst:pl:gen:n2,em/subst:pl:inst:n2,em/subst:pl:loc:n2,em/subst:pl:nom:n2,em/subst:pl:voc:n2,em/subst:sg:acc:n2,em/subst:sg:dat:n2,em/subst:sg:gen:n2,em/subst:sg:inst:n2,em/subst:sg:loc:n2,em/subst:sg:nom:n2,em/subst:sg:voc:n2,emerytowany/brev:pun]" outputform="em[em/subst:pl:acc:n2,em/subst:pl:dat:n2,em/subst:pl:gen:n2,em/subst:pl:inst:n2,em/subst:pl:loc:n2,em/subst:pl:nom:n2,em/subst:pl:voc:n2,em/subst:sg:acc:n2,em/subst:sg:dat:n2,em/subst:sg:gen:n2,em/subst:sg:inst:n2,em/subst:sg:loc:n2,em/subst:sg:nom:n2,em/subst:sg:voc:n2]">Maximilienem de Robespierre'<marker>em</marker> (Wojciech Pszoniak)</example>
    </rule>
    <rule name="P=NP" id="NP_NOT_BREV">
        <pattern case_sensitive="yes">
            <marker>
                <token>P</token>
                <token>=</token>
                <token>NP</token>
            </marker>
        </pattern>
        <disambig action="replace"><wd pos="ign"/><wd lemma="=" pos="interp"/><wd pos="ign"/></disambig>
        <example type="ambiguous" inputform="P[pan/brev:pun,patrz/brev:pun,piętro/brev:pun,punkt/brev:pun]"
                 outputform="P[P/ign]">Problem, czy <marker>P</marker>=NP, jest nadal otwarty.</example>
        <example type="ambiguous" inputform="P[pan/brev:pun,patrz/brev:pun,piętro/brev:pun,punkt/brev:pun]"
                 outputform="P[P/ign]">Problem, czy <marker>P</marker> = NP, jest nadal otwarty.</example>
    </rule>
    <rule name="litery jako zmienne, nie skróty" id="nie_brev_tylko_zmienna">
        <pattern>
            <marker><token regexp="yes" postag="brev:pun">\p{L}</token></marker>
            <token>=</token>
        </pattern>
        <disambig action="remove" postag="brev:pun"/>
        <example type="ambiguous" inputform="r[rok/brev:pun]" outputform="r[r]"><marker>r</marker> = 0; s = 1</example>
    </rule>
    <rule name="litery jako litery" id="nie_brev_tylko_nazwa_litery">
        <pattern>
        <token regexp="yes">\p{L}</token>
        <token>,</token>
        <marker><token regexp="yes" postag="brev:pun">\p{L}</token></marker>
        <token>,</token>
        <token regexp="yes">\p{L}</token>
        </pattern>
        <disambig action="remove" postag="brev:pun"/>
        <example type="ambiguous" inputform="p[pan/brev:pun,patrz/brev:pun,piętro/brev:pun,punkt/brev:pun]"
                 outputform="p[p]">Porządkowanie alfabetyczne ma postać: a, ą, ã, b, c, d, e, é, ë, f, g, h, i, j, k, l, ł, m, n, ń, o, ò, ó, ô, <marker>p</marker>, r, s, t, u, ù, w, y, z, ż.</example>
    </rule>
    <rule name="skróty cytowane" id="nie_brev_pun_tylko_przywolanie">
        <pattern>
            <token regexp="yes">[«»„]</token>
            <marker>
            <token spacebefore="no" postag="brev:pun"/>
            </marker>
            <token spacebefore="no" regexp="yes">[”«»]</token>
        </pattern>
        <disambig action="remove" postag="brev:pun"/>
        <example type="ambiguous" inputform="r[rok/brev:pun]" outputform="r[r]">Litera „<marker>r</marker>”</example>
    </rule>
    <rule name="am jako wyraz niemiecki" id="AM_NIEM">
        <pattern case_sensitive="yes">
            <token regexp="yes">\p{Lu}\p{Ll}+</token>
            <marker><token>am</token></marker>
            <token regexp="yes">\p{Lu}\p{Ll}+</token>
        </pattern>
        <disambig action="remove" postag="brev:pun"/>
        <example type="ambiguous" inputform="am[amerykański/brev:pun]" outputform="am[am]">Frankfurt <marker>am</marker> Main</example>
        <example type="untouched">Ten wyraz to „meliorise” (am. meliorize).</example>
    </rule>
    <rule name="Pan Am" id="PAN_AM">
        <pattern case_sensitive="yes">
            <token>Pan</token>
            <marker><token>Am</token></marker>
        </pattern>
        <disambig action="remove" postag="brev:pun"/>
        <example type="ambiguous" inputform="Am[amerykański/brev:pun]" outputform="Am[Am]">Samolot linii Pan <marker>Am</marker> leciał do Libii.</example>
    </rule>

    <rule name="&amp;lt;br" id="lt_br">
        <pattern>
            <token regexp="yes">.*&amp;lt</token>
            <token>;</token>
            <marker><token>br</token></marker>
        </pattern>
        <disambig action="remove"><wd pos="brev:pun"/></disambig>
    </rule>

    <rule name="br" id="br_element">
        <pattern>
            <token>&lt;</token>
            <marker>
                <token>br</token>
            </marker>
        </pattern>
        <disambig action="remove"><wd pos="brev:pun"/></disambig>
    </rule>


    <rule name="Center for" id="CENTER_FOR"> <!-- wyrażenie angielskie w polskim tekście -->
        <pattern case_sensitive="yes">
            <marker>
                <token>Center</token>
                <token>for</token>
            </marker>
        </pattern>
        <disambig action="replace"><wd pos="ign"/><wd pos="ign"/></disambig>
    </rule>

    <rule name="US OPEN" id="US_Open">
        <pattern>
            <marker>
                <token>US</token>
            </marker>
            <token>Open</token>
        </pattern>
        <disambig postag="ign"/>
    </rule>

    <rule name="glam rock" id="GLAM_ROCK">
        <pattern>
            <marker><token>glam</token></marker>
            <token inflected="yes">rock</token>
        </pattern>
        <disambig action="replace"><wd pos="ign" lemma="glam"/></disambig>
        <example type="ambiguous" inputform="glam[glamać/verb:impt:sg:sec:imperf:nonrefl]"
                 outputform="glam[glam/ign]">Był przedstawicielem <marker>glam</marker> rocka.</example>
    </rule>
     
    <rule name="1 luty" id="NUM_LUTY">
    	<pattern>
    	<token regexp="yes">\d+</token>
    	<marker><token>luty</token></marker>
    	</pattern>    	
    	<disambig action="remove"><wd lemma="lut"></wd></disambig>
    	<example type="untouched">To są zimne luty, przelutuj je.</example>
    	<example type="ambiguous" inputform="luty[lut/subst:pl:acc:m3,lut/subst:pl:nom:m3,lut/subst:pl:voc:m3,luty/adj:sg:acc:m3:pos,luty/adj:sg:nom.voc:m1.m2.m3:pos,luty/subst:sg:acc:m3,luty/subst:sg:nom:m3,luty/subst:sg:voc:m3]" outputform="luty[luty/adj:sg:acc:m3:pos,luty/adj:sg:nom.voc:m1.m2.m3:pos,luty/subst:sg:acc:m3,luty/subst:sg:nom:m3,luty/subst:sg:voc:m3]">25 <marker>luty</marker> to data.</example>
    </rule>
    
    <rule name="no, halo - interj" id="no_halo_interj">
    	<pattern>
    		<token postag="SENT_START"/>
    		<marker>
    		<token regexp="yes">no|halo|cóż</token>
    		</marker>
    	</pattern>
    	<disambig postag="interj"></disambig>
    </rule>

    <rule id="no_impt_interj" name="no jako wykrzyknik po czasowniku w trybie rozkazującym">
        <pattern>
            <token postag="verb:impt.*" postag_regexp="yes"/>
            <marker><token>no</token></marker>
        </pattern>
        <disambig postag="interj"/>
        <example type="ambiguous" inputform="no[no/interj,no/qub,no/subst:pl:acc:n2,no/subst:pl:dat:n2,no/subst:pl:gen:n2,no/subst:pl:inst:n2,no/subst:pl:loc:n2,no/subst:pl:nom:n2,no/subst:pl:voc:n2,no/subst:sg:acc:n2,no/subst:sg:dat:n2,no/subst:sg:gen:n2,no/subst:sg:inst:n2,no/subst:sg:loc:n2,no/subst:sg:nom:n2,no/subst:sg:voc:n2]"
                 outputform="no[no/interj]">Pawlak, podejdź <marker>no</marker> do płota!</example>
        <example type="untouched">Aktor teatru no</example>
    </rule>

    <rule name="teatr no" id="teatr_no">
        <pattern>
            <unify>
                <feature id="case"/><feature id="number"/>
                <token inflected="yes" regexp="yes">teatr|dramat|przedstawienie|sztuka</token>
                <token>no</token>
            </unify>
        </pattern>
        <disambig action="unify"/>
        <example type="untouched">No, no!</example>
        <example type="ambiguous" inputform="no[no/interj,no/qub,no/subst:pl:acc:n2,no/subst:pl:dat:n2,no/subst:pl:gen:n2,no/subst:pl:inst:n2,no/subst:pl:loc:n2,no/subst:pl:nom:n2,no/subst:pl:voc:n2,no/subst:sg:acc:n2,no/subst:sg:dat:n2,no/subst:sg:gen:n2,no/subst:sg:inst:n2,no/subst:sg:loc:n2,no/subst:sg:nom:n2,no/subst:sg:voc:n2]"
                 outputform="no[no/subst:sg:loc:n2]">W teatrze <marker>no</marker> maska to omote.</example>
    </rule>
    
    <rule name="Tel Awiw" id="TEL_AWIW">
    	<pattern case_sensitive="yes">
    		<marker>
    			<token>Tel</token>
    		</marker>
    		<token inflected="yes">Awiw</token>
    	</pattern>
    	<disambig postag="burk"/>
    </rule>
    
    <rule name="n.e." id="NE_BREV">
    	<pattern>
    		<token>n</token>
    		<token>.</token>
    		<marker>
    		<token>e</token>
    		</marker>
    		<token>.</token>
    	</pattern>
    	<disambig action="add"><wd lemma="era" pos="brev:pun"/></disambig>
    </rule>
    
    <rule name="nn" id="NN_BREV">
    	<pattern>
    		<token>nn</token>
    		<token>.</token>
    	</pattern>
    	<disambig postag="brev:pun"/>
    </rule>	
    
    <rule name="red. nauk." id="red_nauk_brev">
    	<pattern>
    	<token>red</token>
    	<token>.</token>
    	<marker>
    	<token>nauk</token>
    	</marker>
    	<token>.</token>
    	</pattern>
    	<disambig action="add"><wd lemma="naukowy" pos="brev:pun"/></disambig>
    </rule>
    
    <rule name="n.p.m." id="npm">
    	<pattern>
    		<token regexp="yes">[np]</token>
    		<token>.</token>
    		<token>p</token>
    		<token>.</token>
    		<marker>
    			<token>m</token>
    		</marker>
    		<token>.</token>
    	</pattern>
    	<disambig action="replace"><wd lemma="morza" pos="brev:pun"/></disambig>
    	<example type="untouched">Przebiegł 20 m.</example>
    	<example type="ambiguous" inputform="m[metr/brev:npun]" outputform="m[morza/brev:pun]">Ta góra ma wysokość 20 m n. p. <marker>m</marker>.</example>
    </rule>

    <!-- TODO: remove both from Morfologik! -->
    <rule name="C" id="C">
    	<pattern>
    	<token>C</token>
    	</pattern>
    	<disambig postag="qub"/>
    </rule>
    
    <rule name="K" id="K">
    	<pattern>
    	<token>K</token>
    	</pattern>
    	<disambig postag="qub"/>
    </rule>

    <rulegroup id="PIECIU" name="Pięciu jako gerundium">
    <rule>
    	<pattern>
    		<marker>
    			<token>pięciu</token>
    		</marker>
    		<token>się</token>
    		<token regexp="yes">wzwyż|po</token>
    	</pattern>
    	<disambig><match no="1" postag="ger.*"  postag_regexp="yes"/></disambig>
    	<example type="untouched">Widzę pięciu wyrostków.</example>
    	<example type="ambiguous" inputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl,pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]" 
    	outputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl]">Nie było końca <marker>pięciu</marker> się wzwyż.</example>
    </rule>
    <rule>
    	<pattern>
    		<marker>
    			<token>pięciu</token>
    		</marker>
    		<token>się</token>
    		<token>w</token>
    		<token>górę</token>
    	</pattern>
    	<disambig><match no="1" postag="ger.*"  postag_regexp="yes"/></disambig>
    	<example type="untouched">Widzę pięciu wyrostków.</example>
    	<example type="ambiguous" inputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl,pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]" 
    	outputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl]">Nie było końca <marker>pięciu</marker> się w górę.</example>
    </rule>    
    </rulegroup>
    <rule id="PIECIU_NUM" name="Pięciu jako liczebnik">
    	<pattern>
    		<marker><token postag="num.*" postag_regexp="yes">pięciu</token></marker>
    	</pattern>
    	<disambig action="remove" postag="ger:.*"/>
    	<example type="ambiguous" inputform="pięciu[piąć/ger:sg:dat.loc:n2:imperf:aff:refl,pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]" 
    	outputform="pięciu[pięć/num:pl:acc:m1:rec,pięć/num:pl:gen.dat.inst.loc:m1.m2.m3.f.n2:congr,pięć/num:pl:nom.voc:m1:rec]">Widzę ich tu <marker>pięciu</marker>.</example>
    	<example type="untouched">O pięciu się w górę nie słyszałem.</example>
    </rule>
        
    <rule name="wiadomo" id="Wiadomo">
    	<pattern>    		
    		<marker><token>wiadomo</token></marker>
    	</pattern>
    	<disambig postag="pred"/>
    	<example type="ambiguous" inputform="wiadomo[wiadomo/adv:pos,wiadomo/pred]" outputform="wiadomo[wiadomo/pred]">Jak <marker>wiadomo</marker>, nie tylko Marsjanie lubili pierogi.</example>
    </rule>
    
    <rulegroup name="można" id="mozna">
        <rule>
            <pattern>
              <marker>
                <and>
                <token postag="pred" skip="1">można</token>
                <token postag="adj:sg:nom.voc:f:pos"/>
                </and>
              </marker>
            <token postag="verb:inf.*" postag_regexp="yes"/>
        </pattern>
        <disambig postag="pred"/>
        <example type="untouched">Jest to można kobieta.</example>
        <example type="ambiguous" inputform="Można[można/pred,możny/adj:sg:nom.voc:f:pos]" outputform="Można[można/pred]"><marker>Można</marker> spotkać go w lasach.</example>
       </rule>
        <rule>
            <pattern>
                <token skip="1" postag="verb:inf.*" postag_regexp="yes"><exception scope="next" postag="(interp|comp):comma" postag_regexp="yes"/></token>
                <marker>
                    <and>
                        <token postag="pred" skip="1">można</token>
                        <token postag="adj:sg:nom.voc:f:pos"/>
                    </and>
                </marker>
            </pattern>
            <disambig postag="pred"/>
            <example type="untouched">Jest to można kobieta.</example>
            <example type="ambiguous" inputform="można[można/pred,możny/adj:sg:nom.voc:f:pos]" outputform="można[można/pred]">Spotkać <marker>można</marker> go w lasach.</example>
            <example type="ambiguous" inputform="można[można/pred,możny/adj:sg:nom.voc:f:pos]" outputform="można[można/pred]">Spotkać go <marker>można</marker> w lasach.</example>
        </rule>
    </rulegroup>

    <rulegroup name="można by/było" id="mozna_by">
        <rule>
        <pattern>
            <marker><token>można</token></marker>
            <token regexp="yes">by(?:ło)?</token>
        </pattern>
        <disambig postag="pred"/>
        <example type="untouched">To jest można królowa.</example>
        <example type="ambiguous" inputform="Można[można/pred,możny/adj:sg:nom.voc:f:pos]" outputform="Można[można/pred]"><marker>Można</marker> by to zrobić.</example>
        <example type="ambiguous" inputform="Można[można/pred,możny/adj:sg:nom.voc:f:pos]" outputform="Można[można/pred]"><marker>Można</marker> było to zrobić.</example>
        </rule>
        <rule>
            <pattern>
                <token>było</token>
                <marker><token>można</token></marker>
            </pattern>
            <disambig postag="pred"/>
            <example type="untouched">To jest można królowa.</example>
            <example type="ambiguous" inputform="można[można/pred,możny/adj:sg:nom.voc:f:pos]" outputform="można[można/pred]">Wówczas było <marker>można</marker>.</example>
        </rule>
    </rulegroup>

    <rule id="aby_qub" name="aby jako kublik">
        <pattern>
        <token>czy</token>
        <token postag="ppron.*" postag_regexp="yes"/>
        <marker><token>aby</token></marker>
        </pattern>
        <disambig postag="qub"></disambig>
        <example type="ambiguous" inputform="aby[aby/comp,aby/comp:comma,aby/qub]"
                 outputform="aby[aby/qub]">— Czy oni <marker>aby</marker> umieją chodzić około roli?</example>
    </rule>

    <rulegroup name="chociaż/choć jako kublik" id="CHOC">
     <rule>
      <pattern>
        <marker>
          <token regexp="yes">chociaż|choć</token>
        </marker>
        <token regexp="yes" inflected="yes">raz|trochę|jeden|przez|odrobinę|przypadkiem</token>
      </pattern>
      <disambig postag="qub"/>
      <example type="untouched">Dziewczyna jest bystra, choć nieładna.</example>
      <example type="ambiguous" inputform="chociaż[chociaż/comp,chociaż/comp:comma,chociaż/qub]" outputform="chociaż[chociaż/qub]">Każdy człowiek <marker>chociaż</marker> raz w życiu chciałby zjeść krowę.</example>
    </rule>
    <rule>
        <pattern>
            <token postag="qub">może</token>
            <token regexp="yes" postag="qub">chociaż|choć</token>
        </pattern>
        <disambig action="filterall"/>
        <example type="untouched">Dziewczyna jest bystra, choć nieładna.</example>
        <example type="ambiguous" inputform="chociaż[chociaż/comp,chociaż/comp:comma,chociaż/qub]" outputform="chociaż[chociaż/qub]">Może <marker>chociaż</marker> teraz zjesz krowę!</example>
    </rule>
    <rule>
        <pattern>
            <marker><token regexp="yes" postag="qub">chociaż|choć<exception scope="previous">,</exception></token></marker>
            <token/>
            <token postag="SENT_END|interp:comma" postag_regexp="yes"/>
        </pattern>
        <disambig postag="qub"/>
        <example type="ambiguous"
                inputform="choć[choć/comp,choć/comp:comma,choć/qub]"
                outputform="choć[choć/qub]">niech no ujrzę, że ktoś z was tknie go <marker>choć</marker> palcem!</example>
    </rule>
    </rulegroup>

    
    <rule name="około jako kublik" id="OKOLO">
      <pattern>
        <token regexp="yes">przez|na|za</token>
        <marker>
        <token>około</token>            
        </marker>
      </pattern>
      <disambig postag="qub"/>
      <example type="untouched">Trwało to około godziny.</example>
      <example type="ambiguous" inputform="około[około/adv:pos,około/prep:gen,około/qub]" outputform="około[około/qub]">Ciągnęło się to przez <marker>około</marker> godzinę.</example>
    </rule>

    <rule name="Anno Domini to nie wołacz" id="Anno_xxx">
        <pattern>
            <marker>
            <token>Anno</token>
            </marker>
            <token>Domini</token>
        </pattern>
        <disambig action="replace"><wd pos="xxx" lemma="annus"/></disambig>
        <example type="untouched">Anno, umyj zęby!</example>
        <example type="ambiguous" inputform="Anno[Anna/subst:sg:voc:f]" outputform="Anno[annus/xxx]"><marker>Anno</marker> Domini MMXX</example>
    </rule>

    <rule id="OWCA_MECZY" name="meczy jako czasownik">
        <pattern>
            <token skip="4" regexp="yes">owca|koza|baran</token>
            <marker><token>meczy</token></marker>
        </pattern>
        <disambig postag="meczeć/verb:fin:sg:ter:imperf:nonrefl"/>
    </rule>

    <rule id="TO_NIE_ZARTY" name="to nie żarty">
        <pattern>
            <token>to</token>
            <marker>
            <token postag="qub">nie</token>
            <token postag="subst:pl:nom:m3">żarty</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="żarty[zrzeć/ppas:sg:acc:m3:imperf:aff,zrzeć/ppas:sg:nom.voc:m1.m2.m3:imperf:aff,żart/subst:pl:acc:m3,żart/subst:pl:nom:m3,żart/subst:pl:voc:m3,żarty/adj:sg:acc:m3:pos,żarty/adj:sg:nom.voc:m1.m2.m3:pos,żreć/ppas:sg:acc:m3:imperf:aff,żreć/ppas:sg:nom.voc:m1.m2.m3:imperf:aff]"
                 outputform="żarty[żart/subst:pl:nom:m3]">Kognitywistyka to nie <marker>żarty</marker>.</example>
    </rule>

    <rule id="ZYCIE_NIE_ZYC" name="życie to nie gerundium od żyć">
        <pattern>
            <marker><token>życie</token></marker>
        </pattern>
        <disambig action="remove"><wd lemma="żyć"/></disambig>
    </rule>

    <rulegroup id="OBCE_APOSTROFY" name="odmiana nazwisk i nazw obcych">
        <rule>   <!-- dopełniacz potencjalny -->
            <pattern>
                <token postag="prep:gen.*" postag_regexp="yes"/>
                <marker>
                    <token postag_regexp="yes" postag="subst:.*nom.*" regexp="yes">.*[eys]$</token>
                </marker>
                <token spacebefore="no" regexp="yes">&apost;</token>
                <token spacebefore="no" regexp="yes">a|ego</token>
            </pattern>
            <disambig action="replace"><match no="2" postag_regexp="yes" postag="(subst:sg.*):nom:(.*)" postag_replace="$1:gen:$2"/></disambig>
            <example type="ambiguous" inputform="Montaigne[Montaigne/subst:sg:nom:m1]" outputform="Montaigne[Montaigne/subst:sg:gen:m1]">U <marker>Montaigne</marker>'a czytamy następujący passus.</example>
            <example type="untouched">Mark'a samochodu</example>
            <example type="ambiguous" outputform="Jarry[Jarry/subst:sg:gen:m1]" inputform="Jarry[Jarry/subst:pl:nom:m1,Jarry/subst:pl:voc:m1,Jarry/subst:sg:nom:m1,Jarry/subst:sg:voc:m1]">Książka uczyniła z <marker>Jarry</marker>'ego artystę.</example>
        </rule>
        <rule>   <!-- biernik potencjalny -->
            <pattern>
                <token postag="prep:acc.*" postag_regexp="yes"/>
                <marker>
                    <token postag_regexp="yes" postag="subst:.*nom.*" regexp="yes">.*[eys]$</token>
                </marker>
                <token spacebefore="no" regexp="yes">&apost;</token>
                <token spacebefore="no" regexp="yes">a|ego</token>
            </pattern>
            <disambig action="replace"><match no="2" postag_regexp="yes" postag="(subst:sg.*):nom:(.*)" postag_replace="$1:acc:$2"/></disambig>
            <example type="ambiguous" inputform="Montaigne[Montaigne/subst:sg:nom:m1]" outputform="Montaigne[Montaigne/subst:sg:acc:m1]">To wszystko przez <marker>Montaigne</marker>'a.</example>
            <example type="untouched">Mark'a samochodu</example>
            <example type="ambiguous" outputform="Jarry[Jarry/subst:sg:acc:m1]" inputform="Jarry[Jarry/subst:pl:nom:m1,Jarry/subst:pl:voc:m1,Jarry/subst:sg:nom:m1,Jarry/subst:sg:voc:m1]">Wszystko przez <marker>Jarry</marker>'ego!</example>
        </rule>
        <rule>
            <pattern>
                <token postag="prep:dat.*" postag_regexp="yes"/>
                <marker>
                    <token postag_regexp="yes" postag="subst:.*nom.*" regexp="yes">.*[eys]$</token>
                </marker>
                <token spacebefore="no" regexp="yes">&apost;</token>
                <token spacebefore="no">owi</token>
            </pattern>
            <disambig action="replace"><match no="2" postag_regexp="yes" postag="(.*):nom:(.*)" postag_replace="$1:dat:$2"/></disambig>
            <example type="ambiguous" inputform="Montaigne[Montaigne/subst:sg:nom:m1]" outputform="Montaigne[Montaigne/subst:sg:dat:m1]">To wszystko dzięki <marker>Montaigne</marker>'owi.</example>
            <example type="untouched">Jestem rybak'iem.</example>
        </rule>
        <rule>
            <pattern>
                <token postag="prep:inst.*" postag_regexp="yes"/>
                <marker>
                    <token postag_regexp="yes" postag="subst:.*nom.*" regexp="yes">.*[eys]$</token>
                </marker>
                <token spacebefore="no" regexp="yes">&apost;</token>
                <token spacebefore="no">em</token>
            </pattern>
            <disambig action="replace"><match no="2" postag_regexp="yes" postag="(.*):nom:(.*)" postag_replace="$1:inst:$2"/></disambig>
            <example type="ambiguous" inputform="Montaigne[Montaigne/subst:sg:nom:m1]" outputform="Montaigne[Montaigne/subst:sg:inst:m1]">Porównajmy go z <marker>Montaigne</marker>'em.</example>
            <example type="untouched">Jestem rybak'iem.</example>
        </rule>
        <rule>
            <pattern>
                <token postag="prep:loc.*" postag_regexp="yes"/>
                <marker>
                    <token postag_regexp="yes" postag="subst:.*nom.*" regexp="yes">.*[eys]$</token>
                </marker>
                <token spacebefore="no" regexp="yes">&apost;</token>
                <token spacebefore="no">u</token>
            </pattern>
            <disambig action="replace"><match no="2" postag_regexp="yes" postag="(.*):nom:(.*)" postag_replace="$1:loc:$2"/></disambig>
            <example type="ambiguous" inputform="Montaigne[Montaigne/subst:sg:nom:m1]" outputform="Montaigne[Montaigne/subst:sg:loc:m1]">Rozmawiajmy o <marker>Montaigne</marker>'u.</example>
            <example type="untouched">Bajka o rybak'u.</example>
        </rule>
    </rulegroup>

    <rule name="potencjalne brev" id="heuristic_brev_pun">
    <pattern>
    <marker>
      <token postag="UNKNOWN" regexp="yes">[\p{Ll}&amp;&amp;[^aeouiyęąó]][\p{Ll}&amp;&amp;[^aeouiyęąó]]+</token>
    </marker>
      <token>.</token>
    </pattern>
    <disambig postag="brev:pun"/>
    <example type="untouched">To był XX w.</example>
    <example type="ambiguous" inputform="mghr[mghr]" outputform="mghr[mghr/brev:pun]">To jest <marker>mghr</marker>. Lubiwicz.</example>
    </rule>

    <rule name="niedz" id="niedz_brev">
        <pattern>
            <marker>
                <token>niedz</token>
            </marker>
            <token>.</token>
        </pattern>
        <disambig action="add"><wd pos="brev:pun" lemma="niedziela"></wd></disambig>
    </rule>

    <rule name="pt." id="pt_piatek_brev">
        <pattern>
            <marker>
                <token>pt</token>
            </marker>
            <token spacebefore="no">.</token>
            <token regexp="yes">[,–—\-\d\)]+</token>
        </pattern>
        <disambig action="add"><wd pos="brev:pun" lemma="piątek"></wd></disambig>
    </rule>

    <rule name="pt." id="pt_piatek_brev_2">
        <pattern>
            <marker>
                <token>pt</token>
            </marker>
            <token spacebefore="no" postag="SENT_END">.</token>
        </pattern>
        <disambig action="replace"><wd pos="brev:pun" lemma="piątek"></wd></disambig>
    </rule>


    <rule id="PRZE_ZEMNIE" name="zemnie -> xxx">
        <pattern>
            <token>prze</token>
            <marker><token>zemnie</token></marker>
        </pattern>
        <disambig postag="ign"/>
    </rule>

    <rule id="DA_VINCI" name="Leonardo da Vinci, viola da gamba -> ign">
        <pattern>
            <marker>
                <token>da</token>
            </marker>
            <token regexp="yes">Vinci|gamba</token>
        </pattern>
        <disambig postag="ign"/>
    </rule>

    <rule id="HOT_DOG" name="hot dog">
        <pattern>
            <marker><token>hot</token></marker>
            <token inflected="yes">dog</token>
        </pattern>
        <disambig action="replace"><wd lemma="hot" pos="ign"/></disambig>
    </rule>

    <rulegroup name="co innego" id="CO_INNEGO">
        <rule>
            <pattern>
                <marker>
                    <token>co</token>
                </marker>
                <token>innego</token>
            </pattern>
            <disambig action="add"><wd lemma="co" pos="co_innego">co</wd></disambig>
            <example type="untouched">To było coś innego.</example>
            <example type="ambiguous" inputform="co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]" outputform="co[co/co_innego,co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]">To było <marker>co</marker> innego.</example>
        </rule>
        <rule>
            <pattern>
                <marker>
                    <token>czym</token>
                </marker>
                <token>innym</token>
            </pattern>
            <disambig action="add"><wd lemma="co" pos="czym_innym">czym</wd></disambig>
            <example type="untouched">To było coś innego.</example>
            <example type="ambiguous" inputform="czym[co/subst:sg:loc:n2]" outputform="czym[co/czym_innym,co/subst:sg:loc:n2]">Mowa o <marker>czym</marker> innym.</example>
        </rule>
    </rulegroup>


    <rule name="co drugi" id="CO_DRUGI">
        <pattern>
            <marker>
                <token>co<exception scope="previous">,</exception></token>
            </marker>
            <token inflected="yes" regexp="yes">drugi|trzeci|czwarty|piąty|szósty|siódmy|ósmy|dziewiąty|dziesiąty</token>
        </pattern>
        <disambig postag="qub"/>
        <example type="untouched">To było coś innego.</example>
        <example type="ambiguous" inputform="co[co/subst:sg:acc:n2]"
                 outputform="co[co/qub]">Spotykamy się w <marker>co</marker> drugi wtorek.</example>
    </rule>

    <rule name="co niemiara" id="co_niemiara">
        <pattern>
            <marker>
                <token postag="qub">co</token>
                <token postag="burk">niemiara</token>
            </marker>
        </pattern>
        <disambig action="filterall"/>
        <example type="ambiguous" inputform="co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]"
                 outputform="co[co/qub]">Pracy miałem <marker>co</marker> niemiara.</example>
    </rule>

    <rule id="co_qub_com_sup" name="co jako kublik przed stopniem wyższym i najwyższym">
        <pattern>
            <unify>
                <feature id="case"/>
                <token postag_regexp="yes" postag="prep.*"/>
                <unify-ignore>
                    <marker>
                    <token>co</token>
                    </marker>
                </unify-ignore>
                <token postag="ad[vj].*(:?com|sup)" postag_regexp="yes"/>
            </unify>
        </pattern>
        <disambig action="replace"><wd pos="qub" lemma="co"/></disambig>
        <example type="ambiguous" inputform="co[co/subst:sg:acc:n2]"
                 outputform="co[co/qub]">Postroili się też na to swoje święto w <marker>co</marker> najbogatsze żupany, szuby, kiereje.</example>
        <example type="ambiguous" inputform="co[co/comp,co/prep:acc,co/prep:nom,co/qub,co/subst:sg:acc:n2,co/subst:sg:gen:n2,co/subst:sg:nom:n2]" outputform="co[co/qub]">Przy <marker>co</marker> trudniejszych fragmentach robił sobie notatki.</example>
        <example type="untouched">I, co najważniejsze, jemy kiełbasę.</example>
    </rule>

    <rulegroup name="To co...? -> conj" id="TO_CO">
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <token min="0" max="1">no</token>
                <marker>
                    <token>to</token>
                </marker>
                <token skip="-1" regexp="yes">co|kto</token>
                <token postag="SENT_END">?</token>
            </pattern>
            <disambig postag="conj"/>
            <example type="untouched">To co zrobiłeś jest chamstwem.</example>
            <example type="ambiguous" inputform="To[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="To[to/conj]"><marker>To</marker> co mam zrobić?</example>
            <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="to[to/conj]">No <marker>to</marker> co mam zrobić?</example>
        </rule>
        <rule>
            <pattern>
                <token postag="SENT_START"/>
                <token min="0" max="1">no</token>
                <marker>
                    <token>to</token>
                </marker>
                <token skip="-1" regexp="yes">co|kto</token>
                <token>?</token>
                <token>.</token>
                <token>.</token>
                <token postag="SENT_END">.</token>
            </pattern>
            <disambig postag="conj"/>
            <example type="untouched">To co zrobiłeś jest chamstwem.</example>
            <example type="ambiguous" inputform="To[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="To[to/conj]"><marker>To</marker> co mam zrobić?...</example>
            <example type="ambiguous" inputform="to[ten/adj:sg:acc:n1.n2:pos,ten/adj:sg:nom.voc:n1.n2:pos,to/conj,to/qub,to/subst:sg:acc:n2,to/subst:sg:nom:n2]" outputform="to[to/conj]">No <marker>to</marker> co mam zrobić?...</example>
        </rule>
    </rulegroup>

    <rule id="AD_FINEM" name="ad finem -> zwrot obcojęzyczny">
        <pattern>
            <token>ad</token>
            <marker><token>finem</token></marker>
        </pattern>
        <disambig postag="xxx"/>
    </rule>

    <rule id="PRZEZ_LAT_KILKA" name="Przez lat kilka – bez komunikatu o błędzie w PREP_CASUS">
        <pattern>
            <token>przez</token>
            <marker>
                <token regexp="yes">lat|tygodni|chwil|minut|godzin</token>
            </marker>
            <token postag="num:pl.*acc.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="CHOC_JOTA" name="choć nie jako spójnik">
        <pattern>
            <marker>
                <token>choć</token>
            </marker>
            <token inflected="yes">jota</token>
        </pattern>
        <disambig postag="qub"/>
    </rule>

    <rule id="JAK_ULAL" name="jak ulał -> bez przecinka">
        <pattern>
            <token><exception>,</exception></token>
            <token>jak</token>
            <marker><token>ulał</token></marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rulegroup id="BOG_WIE_SKAD" name="Bóg wie skąd - bez komunikatu o braku przecinka, bo to partykuła">
    <rule>
        <pattern case_sensitive="yes">
            <token regexp="yes">Bóg|licho</token>
            <token min="0" max="1">jeden</token>
            <marker>
                <token>wie</token>
                <token regexp="yes">co|kto|kiedy|dlaczego|gdzie|jak|skąd|dokąd|czemu</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern case_sensitive="yes">
            <token skip="1" regexp="yes">Bóg|licho<exception scope="next" negate="yes" regexp="yes">jeden|wie</exception></token>
            <marker>
                <token>wie</token>
                <token>z</token>
            </marker>
            <token regexp="yes">czego|kim</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern case_sensitive="yes">
            <token skip="1" regexp="yes">Bóg|licho<exception scope="next" negate="yes" regexp="yes">jeden|wie</exception></token>
            <marker>
                <token>wie</token>
                <token regexp="yes">po|[zn]a</token>
            </marker>
            <token>co</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern case_sensitive="yes">
            <token skip="1" regexp="yes">Bóg|licho<exception scope="next" negate="yes" regexp="yes">jeden|wie</exception></token>
            <marker>
                <token>wie</token>
                <token regexp="yes">[zo]</token>
            </marker>
            <token>czym</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern case_sensitive="yes">
            <token skip="1" regexp="yes">Bóg|licho<exception scope="next" negate="yes" regexp="yes">jeden|wie</exception></token>
            <marker>
                <token>wie</token>
                <token>do</token>
            </marker>
            <token>kogo</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    </rulegroup>

    <rulegroup id="NIE_WIADOMO_SKAD" name="nie wiadomo co - bez komunikatu o braku przecinka, bo to partykuła">
     <rule>
        <pattern>
            <token>nie</token>
            <marker>
                <token regexp="yes">wiadomo|wiedzieć</token>
                <token regexp="yes">co|kto|kiedy|dlaczego|gdzie|jak|skąd|dokąd|czemu</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern>
            <token>nie</token>
            <marker>
                <token regexp="yes">wiadomo|wiedzieć</token>
                <token>z</token>
            </marker>
            <token regexp="yes">czego|kim</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern>
            <token>nie</token>
            <marker>
                <token regexp="yes">wiadomo|wiedzieć</token>
                <token regexp="yes">po|[zn]a</token>
            </marker>
            <token>co</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern>
            <token>nie</token>
            <marker>
                <token regexp="yes">wiadomo|wiedzieć</token>
                <token regexp="yes">[zo]</token>
            </marker>
            <token>czym</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    <rule>
        <pattern>
            <token>nie</token>
            <marker>
                <token regexp="yes">wiadomo|wiedzieć</token>
                <token>do</token>
            </marker>
            <token regexp="yes">kogo|czego</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    </rulegroup>

    <!--
    <rule id="WYPISZ_WYMALUJ" name="wypisz wymaluj - bez przecinka">
        <pattern>
            <token>wypisz</token>
            <marker>
                <token>wymaluj</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="RAD_NIERAD" name="rad nierad - bez przecinka">
        <pattern>
            <token inflected="yes">rad</token>
            <marker><token inflected="yes">nierad</token></marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>


    -->

    <rule id="CO_KON_WYSKOCZY" name="co koń wyskoczy - bez przecinka">
        <pattern>
            <marker><token>co</token>
            <token>koń</token>
            <token regexp="yes">(?:wy)?skoczy</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="CO_SIE_ZOWIE" name="co się zowie - bez przecinka">
        <pattern>
            <marker>
            <token>co</token>
            <token>się</token>
            <token>zowie</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="NA_CZYM_SWIAT_STOI" name="kląć/przeklinać na czym świat stoi - bez przecinka">
        <pattern>
            <marker><token>na</token>
            <token>czym</token>
            <token regexp="yes">świat|ziemia</token>
            <token>stoi</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="JAK_SIE_PATRZY" name="jak się patrzy - bez przecinka">
        <pattern>
            <marker>
                <token>jak</token>
                <token>się</token>
                <token>patrzy</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="ANI_CHYBI" name="ani chybi - bez przecinka">
        <pattern>
            <token>ani</token>
            <marker>
            <token>chybi</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="PREP_CO_BADZ" name="wyrażenie przyimkowe z co + bądź - bez przecinków">
        <pattern>
            <marker>
            <unify>
                <feature id="case"></feature>
                <token postag="prep:.*" postag_regexp="yes"><exception>niby</exception></token>
                <token inflected="yes">co</token>
            </unify>
                <token>bądź</token>
            </marker>
            <token negate="yes"><match no="0"/></token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="JAKI_BADZ_X" name="jaki bądź xxx – bez przecinka">
        <pattern>
            <marker>
                <token inflected="yes">jaki</token>
            <token>bądź</token>
            </marker>
            <token postag_regexp="yes" postag="subst.*"><exception>co</exception></token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="JAKI_TAKI" name="jaki taki - nie wymaga przecinka">
        <pattern>
            <marker><token inflected="yes">jaki</token></marker>
            <token><match no="0" regexp_match="^j(.*)" regexp_replace="t$1"></match></token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="Z_GLUPIA_FRANT" name="z głupia frant">
        <pattern>
            <token>z</token>
            <token>głupia</token>
            <token>frant</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="PUNKT_NUM" name="1)">
        <pattern>
            <token regexp="yes">\d<exception scope="previous">(</exception></token>
            <marker>
                <token spacebefore="no">)</token>
            </marker>
            <token/>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="W_W_BREV" name="w w. XIX"> <!-- suppress in word repeat rule -->
        <pattern>
            <token>w</token>
            <marker><token postag="brev:pun">w</token></marker>
            <token>.</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="TO_TO_ZE" name="to to, że"> <!-- suppress in word repeat rule -->
        <pattern>
            <token>to</token>
            <marker><token>to</token></marker>
            <token>,</token>
            <token regexp="yes" inflected="yes">że|iż|co</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="TRA_TA_TA" name="tra ta ta"> <!-- suppress in word repeat rule -->
        <pattern>
            <token>tra</token>
            <marker><token>ta</token></marker>
            <token>ta</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="HO_HO" name="ho ho!"> <!-- suppress in word repeat rule -->
        <pattern>
            <token>ho</token>
            <marker><token>ho</token></marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="W_NIE_NIE" name="w/na/o nie nie"> <!-- suppress in word repeat rule -->
        <pattern>
            <token regexp="yes">[wo]|[zn]a</token>
            <marker><token>nie</token></marker>
            <token>nie</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="KAVA_KAVA" name="kava kava"> <!-- suppress in word repeat rule -->
        <pattern>
            <token>kava</token>
            <marker><token>kava</token></marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="LEDWO_LEDWO" name="ledwo ledwo">  <!-- suppress in word repeat rule -->
        <pattern>
            <token>ledwo</token>
            <marker><token>ledwo</token></marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="LEDWIE_LEDWIE" name="ledwie ledwie"> <!-- suppress in word repeat rule -->
        <pattern>
            <token>ledwie</token>
            <marker><token>ledwie</token></marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="I_I" name="Józef I i">               <!-- suppress in word repeat rule -->
        <pattern case_sensitive="yes">
            <token regexp="yes">\p{Lu}\p{Ll}+</token>
            <token>I</token>
            <marker><token>i</token></marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="NIE_NIE" name="nie_ppron_nie_qub">    <!-- suppress in word repeat rule -->
        <pattern>
            <marker>
                <token negate_pos="yes" postag="qub">nie</token>
            </marker>
            <token negate_pos="yes" postag="ppron.*" postag_regexp="yes">nie</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="Liczby_000_000" name="zera w tysiącach">    <!-- suppress in word repeat rule -->
        <pattern>
            <token regexp="yes">\d+</token>
            <marker><token>000</token>
            <token>000</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="VOO_VOO" name="Voo Voo">  <!-- suppress in word repeat rule -->
        <pattern case_sensitive="yes">
            <marker><token>Voo</token></marker>
            <token>Voo</token>
        </pattern>
        <disambig action="immunize"/>
    </rule>

    <rule id="W_JAKIE_POL" name="W jakie pół godziny - nie wymaga przecinka">
        <pattern>
            <token postag="prep:.*" postag_regexp="yes"/>
            <marker>
                <token>jakie</token>
            </marker>
            <token postag="num:.*" postag_regexp="yes"/>
        </pattern>
        <disambig action="immunize"/>
    </rule>
    
    <rule id="prez" name="prez. Komorowski">
      <pattern>
        <token regexp="yes">prez|cz|prob|urzęd|pol</token>
        <token spacebefore="no">.</token>
      </pattern>
      <disambig action="ignore_spelling"/>
    </rule>
    
    <rule id="compounds" name="Przymiotniki złożone">
      <pattern>
        <marker>
        <token postag="adja"/>
        </marker>
        <token spacebefore="no">-</token>
        <token postag="adj:.*" postag_regexp="yes"></token>
      </pattern>
      <disambig action="ignore_spelling"></disambig>
    </rule>

    <rule id="compounds_2" name="Przymiotniki złożone występujące co najmniej dwukrotnie">
        <pattern>
            <marker>
            <token postag="adja"/>
            </marker>
            <token spacebefore="no">-</token>
            <token>,</token>
        </pattern>
        <disambig action="ignore_spelling"></disambig>
    </rule>

    <rule id="compounds_3" name="Przymiotniki złożone występujące co najmniej dwukrotnie">
        <pattern>
            <marker>
                <token postag="adja"/>
            </marker>
            <token spacebefore="no">-</token>
            <token postag="conj"/>
        </pattern>
        <disambig action="ignore_spelling"></disambig>
    </rule>


    <rule id='KONSKI_ZAB' name="końskiego zębu - dobra pisownia">
      <pattern>
        <token>końskiego</token>
         <marker>
          <token>zębu</token>
         </marker>      
      </pattern>
      <disambig action="ignore_spelling"/>      
    </rule>
    
    <rule id="LICZBY_RZYMSKIE" name="Pomijaj liczby rzymskie">
        <pattern case_sensitive="yes">
            <token regexp="yes">(?:M*(?:D?C{0,3}|C[DM])(XC|XL|L?X{0,3})(IX|IV|V?I{0,3}))(?:-(?:M*(?:D?C{0,3}|C[DM])(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})))?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="SPOLKA_AKCYJNA_SA" name="SA w nazwach spółek">
        <pattern case_sensitive="yes">
            <token regexp="yes">\p{Lu}.+</token>
            <token>SA</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="SZ_PAN" name="Sz. Pan/Pani">
        <pattern>
            <marker>
                <token>Sz</token>
            </marker>
            <token>.</token>
            <token inflected="yes" regexp="yes" case_sensitive="no">Pani?</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="KATOW" name="Katow.">
        <pattern case_sensitive="yes">
            <marker>
            <token>Katow</token>
            </marker>
            <token spacebefore="no">.</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="SPOLDZ" name="spółdz">
        <pattern>
            <marker><token>spółdz</token></marker>
            <token spacebefore="no">.</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="MULTIPLE_HYPHENS" name="dywizy - jeden token w naszym układzie">
        <pattern>
            <token regexp="yes">-+</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="GDZIEZES_SPELLING" name="gdzieżeś łącznie">
        <pattern>
            <token regexp="yes">(?:gdzie|có|czy|ju|skąd|jak|kiedy|bodaj)że(?:ś(?:my|cie)?|m)</token>
        </pattern>
        <disambig action="ignore_spelling"/>
    </rule>

    <rule id="HTML_ENTITIES" name="ignorujemy encje html">
        <pattern>
            <marker><token regexp="yes">&amp;[gl]t</token>
            <token spacebefore="no">;</token>
            </marker>
        </pattern>
        <disambig action="immunize"/>
    </rule>

</rules>